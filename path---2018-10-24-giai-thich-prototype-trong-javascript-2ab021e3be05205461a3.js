webpackJsonp([0xecd2c75f2761],{1496:function(n,a){n.exports={data:{markdownRemark:{html:'<!-- TOC -->\n<ul>\n<li><a href="#objectcreate">Object.create</a></li>\n<li><a href="#s%C3%A2u-h%C6%A1n-xa-h%C6%A1n">Sâu hơn xa hơn</a></li>\n<li>\n<p><a href="#m%E1%BB%99t-s%E1%BB%91-ph%C6%B0%C6%A1ng-th%E1%BB%A9c-v%E1%BB%9Bi-prototype-n%C3%AAn-bi%E1%BA%BFt">Một số phương thức với prototype nên biết</a></p>\n<ul>\n<li><a href="#l%E1%BA%A5y-t%E1%BA%A5t-c%E1%BA%A3-prototype-c%E1%BB%A7a-function">Lấy tất cả prototype của function</a></li>\n<li><a href="#x%C3%A1c-%C4%91%E1%BB%8Bnh-m%E1%BB%99t-property-c%C3%B3-t%E1%BB%93n-t%E1%BA%A1i-trong-prototype-kh%C3%B4ng">Xác định một property có tồn tại trong prototype không</a></li>\n<li><a href="#ki%E1%BB%83m-tra-m%E1%BB%99t-object-c%C3%B3-ph%E1%BA%A3i-l%C3%A0-m%E1%BB%99t-instance-c%E1%BB%A7a-class">kiểm tra một object có phải là một instance của Class</a></li>\n</ul>\n</li>\n<li><a href="#l%C6%B0u-%C3%BD-v%E1%BB%81-arrow-function">Lưu ý về arrow function</a></li>\n</ul>\n<!-- /TOC -->\n<p>Object trong javascript rất là vi diệu. Nó là nền tảng của rất nhiều thứ hay ho trong javascript.</p>\n<p>Object là một cặp giá trị key/value. Cách đơn giản nhất tạo một object là <code class="language-text">obj = {}</code>, thêm các property và phương thức sử dụng dấu chấm</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js"><span class="token keyword">let</span> animal <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\nanimal<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">\'Leo\'</span>\nanimal<span class="token punctuation">.</span>energy <span class="token operator">=</span> <span class="token number">10</span>\n\nanimal<span class="token punctuation">.</span><span class="token function-variable function">eat</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">amount</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is eating.</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>energy <span class="token operator">+=</span> amount\n<span class="token punctuation">}</span>\n\nanimal<span class="token punctuation">.</span><span class="token function-variable function">sleep</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">length</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is sleeping.</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>energy <span class="token operator">+=</span> length\n<span class="token punctuation">}</span>\n\nanimal<span class="token punctuation">.</span><span class="token function-variable function">play</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">length</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is playing.</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>energy <span class="token operator">-=</span> length\n<span class="token punctuation">}</span></code></pre>\n      </div>\n<p>Quá đơn giản. Giờ chúng ta muốn có thêm một <code class="language-text">animal</code> khác, chúng ta đưa toàn bộ logic này vào bên trong 1 function, cách này gọi là <strong>Functional Instantiation</strong> hay <strong>constructor function</strong></p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">Animal</span> <span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> energy</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">let</span> animal <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n  animal<span class="token punctuation">.</span>name <span class="token operator">=</span> name\n  animal<span class="token punctuation">.</span>energy <span class="token operator">=</span> energy\n\n  animal<span class="token punctuation">.</span><span class="token function-variable function">eat</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">amount</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is eating.</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>energy <span class="token operator">+=</span> amount\n  <span class="token punctuation">}</span>\n\n  animal<span class="token punctuation">.</span><span class="token function-variable function">sleep</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">length</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is sleeping.</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>energy <span class="token operator">+=</span> length\n  <span class="token punctuation">}</span>\n\n  animal<span class="token punctuation">.</span><span class="token function-variable function">play</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">length</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is playing.</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>energy <span class="token operator">-=</span> length\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">return</span> animal\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> leo <span class="token operator">=</span> <span class="token function">Animal</span><span class="token punctuation">(</span><span class="token string">\'Leo\'</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> snoop <span class="token operator">=</span> <span class="token function">Animal</span><span class="token punctuation">(</span><span class="token string">\'Snoop\'</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span></code></pre>\n      </div>\n<p>Khi chúng ta muốn tạo một instance mới của <code class="language-text">Animal</code>, tất cả những gì chúng ta cần làm là gọi lại hàm <code class="language-text">Animal</code>.</p>\n<p>Cách làm này có một điểm hạn chế, các phương thức <code class="language-text">eat</code>, <code class="language-text">sleep</code>, <code class="language-text">play</code> là hoàn toàn giống nhau cho các instance, đồng thời khi tạo một instance mới chúng ta cũng đã vô tình lãng phí bộ nhớ bằng việc khai báo thêm những object mà đôi khi không cần thiết.</p>\n<p>Chúng ta sẽ tách các phương thức này ra. Từ ngữ chuyên môn cho vấn đề này là <strong>Functional Instantiation với các phương thức dùng chung</strong>.</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js"><span class="token keyword">const</span> animalMethods <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token function">eat</span><span class="token punctuation">(</span><span class="token parameter">amount</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is eating.</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>energy <span class="token operator">+=</span> amount\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token parameter">length</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is sleeping.</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>energy <span class="token operator">+=</span> length\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">play</span><span class="token punctuation">(</span><span class="token parameter">length</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is playing.</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>energy <span class="token operator">-=</span> length\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">function</span> <span class="token function">Animal</span> <span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> energy</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">let</span> animal <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n  animal<span class="token punctuation">.</span>name <span class="token operator">=</span> name\n  animal<span class="token punctuation">.</span>energy <span class="token operator">=</span> energy\n  animal<span class="token punctuation">.</span>eat <span class="token operator">=</span> animalMethods<span class="token punctuation">.</span>eat\n  animal<span class="token punctuation">.</span>sleep <span class="token operator">=</span> animalMethods<span class="token punctuation">.</span>sleep\n  animal<span class="token punctuation">.</span>play <span class="token operator">=</span> animalMethods<span class="token punctuation">.</span>play\n\n  <span class="token keyword">return</span> animal\n<span class="token punctuation">}</span></code></pre>\n      </div>\n<p>Các phương thức dùng chung giờ đây nằm ở từng object và refer đến object bên trong của Animal.</p>\n<h1 id="objectcreate"><a href="#objectcreate" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Object.create</h1>\n<p>Nâng cấp thêm chút nữa bằng <code class="language-text">Object.create</code>. <code class="language-text">Object.create</code> cho phép bạn tạo một object, nếu không tìm thấy nó sẽ đưa về một object khác để xem có thể tìm thấy property đó không.</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js"><span class="token keyword">const</span> parent <span class="token operator">=</span> <span class="token punctuation">{</span>\n  name<span class="token punctuation">:</span> <span class="token string">\'Stacey\'</span><span class="token punctuation">,</span>\n  age<span class="token punctuation">:</span> <span class="token number">35</span><span class="token punctuation">,</span>\n  heritage<span class="token punctuation">:</span> <span class="token string">\'Irish\'</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> child <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span>\nchild<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">\'Ryan\'</span>\nchild<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">7</span>\n\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>child<span class="token punctuation">.</span>name<span class="token punctuation">)</span> <span class="token comment">// Ryan</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>child<span class="token punctuation">.</span>age<span class="token punctuation">)</span> <span class="token comment">// 7</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>child<span class="token punctuation">.</span>heritage<span class="token punctuation">)</span> <span class="token comment">// Irish</span></code></pre>\n      </div>\n<p>Trong ví dụ trên, bởi vì children được tạo bởi <code class="language-text">Object.create(parent)</code>, khi nó không tìm thấy property trong children, javascript tự nó biết tìm đến parent object. Trong ví dụ này, child không có property là <code class="language-text">heritage</code>, mà parent có, nên nó sẽ lấy của parent là <code class="language-text">Irish</code></p>\n<p>Giờ làm sao chúng ta đơn giản hoá code của Animal? Thay vì thêm tất cả các phương thức dùng chung vào <code class="language-text">Animal</code> từng thằng một, có thể dùng <code class="language-text">Object.create</code> để truyền object <code class="language-text">animalMethods</code> </p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js"><span class="token keyword">const</span> animalMethods <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token function">eat</span><span class="token punctuation">(</span><span class="token parameter">amount</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is eating.</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>energy <span class="token operator">+=</span> amount\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token parameter">length</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is sleeping.</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>energy <span class="token operator">+=</span> length\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">play</span><span class="token punctuation">(</span><span class="token parameter">length</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is playing.</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>energy <span class="token operator">-=</span> length\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">function</span> <span class="token function">Animal</span> <span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> energy</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">let</span> animal <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>animalMethods<span class="token punctuation">)</span>\n  animal<span class="token punctuation">.</span>name <span class="token operator">=</span> name\n  animal<span class="token punctuation">.</span>energy <span class="token operator">=</span> energy\n\n  <span class="token keyword">return</span> animal\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> leo <span class="token operator">=</span> <span class="token function">Animal</span><span class="token punctuation">(</span><span class="token string">\'Leo\'</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> snoop <span class="token operator">=</span> <span class="token function">Animal</span><span class="token punctuation">(</span><span class="token string">\'Snoop\'</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>\n\nleo<span class="token punctuation">.</span><span class="token function">eat</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>\nsnoop<span class="token punctuation">.</span><span class="token function">play</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span></code></pre>\n      </div>\n<p>Bây giờ khi gọi <code class="language-text">leo.eat</code>, javascript sẽ tìm phương thức <code class="language-text">eat</code> trên object <code class="language-text">leo</code>. Nếu fail, nó đưa đến <code class="language-text">animalMethods</code> trong đó có hàm <code class="language-text">eat</code></p>\n<p>Làm như vậy có thể bị xem là hơi tricky khi quản lý một object độc lập cho các phương thức dùng chung.</p>\n<p>Javascript chúng ta có <code class="language-text">prototype</code> đảm nhiệm việc này mà bạn không cần viết thêm gì cả.</p>\n<blockquote>\n<p>Tất cả function trong Javascript có một property là <code class="language-text">prototype</code>, nó reference đến một object.</p>\n</blockquote>\n<p>Holy grab? Không tin có thể test</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">doThing</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>doThing<span class="token punctuation">.</span>prototype<span class="token punctuation">)</span> <span class="token comment">// {}</span></code></pre>\n      </div>\n<p>Thay vì viết <code class="language-text">Object.create(animalMethods)</code>, chúng ta cứ dùng luôn object có sẵn là <code class="language-text">prototype</code></p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">Animal</span> <span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> energy</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">let</span> animal <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token class-name">Animal</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span>\n  animal<span class="token punctuation">.</span>name <span class="token operator">=</span> name\n  animal<span class="token punctuation">.</span>energy <span class="token operator">=</span> energy\n\n  <span class="token keyword">return</span> animal\n<span class="token punctuation">}</span>\n\n<span class="token class-name">Animal</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">eat</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">amount</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is eating.</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>energy <span class="token operator">+=</span> amount\n<span class="token punctuation">}</span>\n\n<span class="token class-name">Animal</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">sleep</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">length</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is sleeping.</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>energy <span class="token operator">+=</span> length\n<span class="token punctuation">}</span>\n\n<span class="token class-name">Animal</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">play</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">length</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is playing.</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>energy <span class="token operator">-=</span> length\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> leo <span class="token operator">=</span> <span class="token function">Animal</span><span class="token punctuation">(</span><span class="token string">\'Leo\'</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> snoop <span class="token operator">=</span> <span class="token function">Animal</span><span class="token punctuation">(</span><span class="token string">\'Snoop\'</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>\n\nleo<span class="token punctuation">.</span><span class="token function">eat</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>\nsnoop<span class="token punctuation">.</span><span class="token function">play</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span></code></pre>\n      </div>\n<p>Hy vọng là bạn có giây phút <em>ERECA</em> khi đọc tới đây, như mình đã có. <code class="language-text">prototype</code> chỉ là một property mà tất cả function trong javascript đều có.</p>\n<h1 id="sâu-hơn-xa-hơn"><a href="#s%C3%A2u-h%C6%A1n-xa-h%C6%A1n" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Sâu hơn xa hơn</h1>\n<p>Tới thời điểm này, chúng ta đã biết</p>\n<ol>\n<li>Tạo một function constructor</li>\n<li>Thêm phương thức cho function constructor bằng prototype</li>\n<li>Sử dụng <code class="language-text">Object.create</code> để khi fail trỏ đến prototype</li>\n</ol>\n<p>Cái này là quá căn bản với các ngôn ngữ lập trình khác, không lẽ javascript lại tệ đến vậy sao, không có một cách chính thống để làm? Có chứ, sử dụng <code class="language-text">new</code></p>\n<p>Tại sao chúng ta phải đi cả ngàn dặm tới bước này, sao mình không nói toạc luôn ngay từ đầu? Với cách này bạn sẽ nắm rất sâu, hiểu rất rõ <code class="language-text">new</code> sẽ làm gì bên dưới</p>\n<p>Xem lại constructor Animal, 2 phần quan trọng nhất là tạo object và return nó.</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">Animal</span> <span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> energy</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">let</span> animal <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token class-name">Animal</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span>\n  animal<span class="token punctuation">.</span>name <span class="token operator">=</span> name\n  animal<span class="token punctuation">.</span>energy <span class="token operator">=</span> energy\n\n  <span class="token keyword">return</span> animal\n<span class="token punctuation">}</span></code></pre>\n      </div>\n<p><code class="language-text">new</code> thì có gì hót - khi gọi một function sử dụng <code class="language-text">new</code>, 2 dòng code này sẽ được chạy luôn cho mình và object được tạo ra gọi là <code class="language-text">this</code></p>\n<p>Cách viết dùng <code class="language-text">new</code></p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">Animal</span> <span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> energy</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// const this = Object.create(Animal.prototype)</span>\n\n  <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name\n  <span class="token keyword">this</span><span class="token punctuation">.</span>energy <span class="token operator">=</span> energy\n\n  <span class="token comment">// return this</span>\n<span class="token punctuation">}</span>\n\n<span class="token class-name">Animal</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">eat</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">amount</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is eating.</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>energy <span class="token operator">+=</span> amount\n<span class="token punctuation">}</span>\n\n<span class="token class-name">Animal</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">sleep</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">length</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is sleeping.</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>energy <span class="token operator">+=</span> length\n<span class="token punctuation">}</span>\n\n<span class="token class-name">Animal</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">play</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">length</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is playing.</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>energy <span class="token operator">-=</span> length\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> leo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Animal</span><span class="token punctuation">(</span><span class="token string">\'Leo\'</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> snoop <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Animal</span><span class="token punctuation">(</span><span class="token string">\'Snoop\'</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span></code></pre>\n      </div>\n<p>Không dùng <code class="language-text">new</code>, lỗi</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">Animal</span> <span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> energy</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name\n  <span class="token keyword">this</span><span class="token punctuation">.</span>energy <span class="token operator">=</span> energy\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> leo <span class="token operator">=</span> <span class="token function">Animal</span><span class="token punctuation">(</span><span class="token string">\'Leo\'</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>leo<span class="token punctuation">)</span> <span class="token comment">// undefined</span></code></pre>\n      </div>\n<blockquote>\n<p>WTF? Cả đống này chỉ là để làm cái <code class="language-text">class</code> trong các ngôn ngữ khác thôi ư?</p>\n</blockquote>\n<p>Đúng. Trước thời ES6, javascript không có vụ <code class="language-text">class</code> này, chúng ta dùng như vậy đấy.</p>\n<p>Vậy nếu bạn đang đọc bài này, thì bạn đã qua thời ES6, ES7, chúng ta có cách chính thống để làm. Bên dưới ES6 thì nó cũng làm i chang như vậy thôi, chẳng qua là bạn được viết bằng cách có "gu" hơn, chứ bên dưới nó vẫn implement như thế.</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js"><span class="token keyword">class</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>\n  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> energy</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name\n    <span class="token keyword">this</span><span class="token punctuation">.</span>energy <span class="token operator">=</span> energy\n  <span class="token punctuation">}</span>\n  <span class="token function">eat</span><span class="token punctuation">(</span><span class="token parameter">amount</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is eating.</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>energy <span class="token operator">+=</span> amount\n  <span class="token punctuation">}</span>\n  <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token parameter">length</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is sleeping.</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>energy <span class="token operator">+=</span> length\n  <span class="token punctuation">}</span>\n  <span class="token function">play</span><span class="token punctuation">(</span><span class="token parameter">length</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is playing.</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>energy <span class="token operator">-=</span> length\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> leo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Animal</span><span class="token punctuation">(</span><span class="token string">\'Leo\'</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> snoop <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Animal</span><span class="token punctuation">(</span><span class="token string">\'Snoop\'</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span></code></pre>\n      </div>\n<h1 id="một-số-phương-thức-với-prototype-nên-biết"><a href="#m%E1%BB%99t-s%E1%BB%91-ph%C6%B0%C6%A1ng-th%E1%BB%A9c-v%E1%BB%9Bi-prototype-n%C3%AAn-bi%E1%BA%BFt" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Một số phương thức với prototype nên biết</h1>\n<h2 id="lấy-tất-cả-prototype-của-function"><a href="#l%E1%BA%A5y-t%E1%BA%A5t-c%E1%BA%A3-prototype-c%E1%BB%A7a-function" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Lấy tất cả prototype của function</h2>\n<p><code class="language-text">Object.getPrototypeOf()</code></p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">Animal</span> <span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> energy</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name\n  <span class="token keyword">this</span><span class="token punctuation">.</span>energy <span class="token operator">=</span> energy\n<span class="token punctuation">}</span>\n\n<span class="token class-name">Animal</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">eat</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">amount</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is eating.</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>energy <span class="token operator">+=</span> amount\n<span class="token punctuation">}</span>\n\n<span class="token class-name">Animal</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">sleep</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">length</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is sleeping.</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>energy <span class="token operator">+=</span> length\n<span class="token punctuation">}</span>\n\n<span class="token class-name">Animal</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">play</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">length</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is playing.</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>energy <span class="token operator">-=</span> length\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> leo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Animal</span><span class="token punctuation">(</span><span class="token string">\'Leo\'</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> prototype <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span>leo<span class="token punctuation">)</span>\n\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>prototype<span class="token punctuation">)</span>\n<span class="token comment">// {constructor: ƒ, eat: ƒ, sleep: ƒ, play: ƒ}</span>\n\nprototype <span class="token operator">===</span> <span class="token class-name">Animal</span><span class="token punctuation">.</span>prototype <span class="token comment">// true</span></code></pre>\n      </div>\n<p>Có 2 điểm quan trọng trong đoạn code trên</p>\n<ul>\n<li>1 là chỗ constructor cũng được liệt kê ra như một hàm, như vậy bất kỳ instance nào cũng có thể gọi đến constructor bằng <code class="language-text">instance.constructor</code></li>\n<li>2 là nếu so sánh Object.getPrototypeOf(leo) === Animal.prototype là đúng.</li>\n</ul>\n<h2 id="xác-định-một-property-có-tồn-tại-trong-prototype-không"><a href="#x%C3%A1c-%C4%91%E1%BB%8Bnh-m%E1%BB%99t-property-c%C3%B3-t%E1%BB%93n-t%E1%BA%A1i-trong-prototype-kh%C3%B4ng" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Xác định một property có tồn tại trong prototype không</h2>\n<p><code class="language-text">.hasOwnProperty()</code></p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js"><span class="token keyword">const</span> leo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Animal</span><span class="token punctuation">(</span><span class="token string">\'Leo\'</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span>\n\n<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> leo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>leo<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Key: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">. Value: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>leo<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre>\n      </div>\n<h2 id="kiểm-tra-một-object-có-phải-là-một-instance-của-class"><a href="#ki%E1%BB%83m-tra-m%E1%BB%99t-object-c%C3%B3-ph%E1%BA%A3i-l%C3%A0-m%E1%BB%99t-instance-c%E1%BB%A7a-class" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>kiểm tra một object có phải là một instance của Class</h2>\n<p><code class="language-text">object instanceof Class</code></p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">Animal</span> <span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> energy</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name\n  <span class="token keyword">this</span><span class="token punctuation">.</span>energy <span class="token operator">=</span> energy\n<span class="token punctuation">}</span>\n\n<span class="token keyword">function</span> <span class="token function">User</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> leo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Animal</span><span class="token punctuation">(</span><span class="token string">\'Leo\'</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span>\n\nleo <span class="token keyword">instanceof</span> <span class="token class-name">Animal</span> <span class="token comment">// true</span>\nleo <span class="token keyword">instanceof</span> <span class="token class-name">User</span> <span class="token comment">// false</span></code></pre>\n      </div>\n<h1 id="lưu-ý-về-arrow-function"><a href="#l%C6%B0u-%C3%BD-v%E1%BB%81-arrow-function" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Lưu ý về arrow function</h1>\n<p>Do arrow function không có <code class="language-text">this</code> bên trong nó, không thể dùng nó như một constructor function</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js"><span class="token keyword">const</span> <span class="token function-variable function">Animal</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token keyword">const</span> leo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Animal</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// Error: Animal is not a constructor</span></code></pre>\n      </div>\n<p>Đồng thời arrow function cũng sẽ không có prototype</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js"><span class="token keyword">const</span> <span class="token function-variable function">Animal</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Animal</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span> <span class="token comment">// undefined</span></code></pre>\n      </div>\n<p><a target="_blank" rel="noopener noreferrer" href="https://tylermcginnis.com/beginners-guide-to-javascript-prototype/">A Beginner\'s Guide to JavaScript\'s Prototype</a></p>',
timeToRead:9,excerpt:"Object.create Sâu hơn xa hơn Một số phương thức với prototype nên biết Lấy tất cả prototype của function Xác định một property có tồn tại…",frontmatter:{title:"Javascript prototype chuyên sâu",cover:"",date:"2018-10-24",category:null,tags:["javascript"],desc:"Bài này chỉ phù hợp với các bạn đã có kiến thức trung bình khá javascript trở lên, mình không chỉ đơn giản giải thích cách xài mà còn sâu hơn, bạn sẽ nắm rất rất rõ prototype trong javascript thực chất là gì"},fields:{slug:"/2018-10-24-giai-thich-prototype-trong-javascript"}}},pathContext:{slug:"/2018-10-24-giai-thich-prototype-trong-javascript",prev:{frontmatter:{title:"Một số nguyên tắc với hình ảnh responsive",desc:"Nếu bạn đã quên hoặc chưa biết, hình tiêu tốn hơn 50% dung lượng tải trang. Responsive image tuy dễ nhưng không nên xem nhẹ",type:"post",category:null,tags:["mobile-web-specialist"],date:"2018-10-25",cover:""},fields:{slug:"/2018-10-25-mot-so-nguyen-tac-su-dung-hinh-responsive"}},next:{frontmatter:{title:"Đo thời gian render bằng Chrome",desc:"Bàn luận kỹ thuật để đo chính xác thời gian render",type:"post",category:null,tags:["chrome","performance"],date:"2018-10-23",cover:""},fields:{slug:"/2018-10-23-huong-dan-do-toc-do-website-bang-chrome"}}}}}});
//# sourceMappingURL=path---2018-10-24-giai-thich-prototype-trong-javascript-2ab021e3be05205461a3.js.map