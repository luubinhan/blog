webpackJsonp([0x93fcae269902],{1447:function(n,a){n.exports={data:{markdownRemark:{html:'<!-- TOC -->\n<ul>\n<li><a href="#m%E1%BB%99t-v%C3%AD-d%E1%BB%A5-v%E1%BB%81-reactivity-c%E1%BB%A7a-vue">Một ví dụ về Reactivity của Vue</a></li>\n<li><a href="#v%E1%BA%A5n-%C4%91%E1%BB%81-v%C3%A0-gi%E1%BA%A3i-ph%C3%A1p">Vấn đề và giải pháp</a></li>\n<li><a href="#gi%E1%BA%A3i-ph%C3%A1p-t%E1%BB%95ng-qu%C3%A1t-h%C6%A1n">Giải pháp tổng quát hơn</a></li>\n<li><a href="#t%C3%A1ch-dep-cho-m%E1%BB%97i-bi%E1%BA%BFn">Tách Dep cho mỗi biến</a></li>\n<li><a href="#t%E1%BB%95ng-h%E1%BB%A3p-c%C3%A1c-%C3%BD-t%C6%B0%E1%BB%9Fng-ch%C3%ADnh">Tổng hợp các ý tưởng chính</a></li>\n</ul>\n<!-- /TOC -->\n<h1 id="một-ví-dụ-về-reactivity-của-vue"><a href="#m%E1%BB%99t-v%C3%AD-d%E1%BB%A5-v%E1%BB%81-reactivity-c%E1%BB%A7a-vue" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Một ví dụ về Reactivity của Vue</h1>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">\'</span>app<span class="token punctuation">\'</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>Price<span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> price <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>Total<span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> price <span class="token operator">*</span> quantity <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>Taxes<span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> totalPriceWithTax <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre>\n      </div>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js"><span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  el<span class="token punctuation">:</span> <span class="token string">\'#app\'</span><span class="token punctuation">,</span>\n  data<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    price<span class="token punctuation">:</span> <span class="token number">5.00</span><span class="token punctuation">,</span>\n    quantity<span class="token punctuation">:</span> <span class="token number">2</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  computed<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    <span class="token function">totalPriceWithTax</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>price <span class="token operator">*</span> <span class="token keyword">this</span><span class="token punctuation">.</span>quantity <span class="token operator">*</span> <span class="token number">1.03</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre>\n      </div>\n<p>Ở đây khi chúng ta thay đổi giá trị của <code class="language-text">price</code>, thằng Vue nó sẽ làm 3 thứ</p>\n<ol>\n<li>Cập nhập lại giá trị <code class="language-text">price</code></li>\n<li>Tính lại giá trị <code class="language-text">total</code></li>\n<li>Gọi lại hàm <code class="language-text">totalPriceWithTax</code> và cập nhập lại giá trị</li>\n</ol>\n<p><img src="https://cdn-images-1.medium.com/max/800/1*t8enMn6h0gjY6HNKoSVC1g.jpeg"></p>\n<p>Thấy hết sức bình thường, nhưng đó <strong>KHÔNG PHẢI LÀ CÁCH CHẠY BÌNH THƯỜNG CỦA JAVASCRIPT</strong></p>\n<p>Ví dụ với javascript bình thường</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js"><span class="token keyword">let</span> price <span class="token operator">=</span> <span class="token number">5</span>\n<span class="token keyword">let</span> quantity <span class="token operator">=</span> <span class="token number">2</span>\n<span class="token keyword">let</span> total <span class="token operator">=</span> price <span class="token operator">*</span> quantity <span class="token comment">// kết quả sẽ là 10</span>\nprice <span class="token operator">=</span> <span class="token number">20</span> <span class="token comment">// gán lại giá trị của price</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">total is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>total<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span></code></pre>\n      </div>\n<p>Bạn hãy đoán xem kết quả log ra là mấy? Sẽ là <strong>10</strong> chứ không phải <strong>40</strong> đâu.</p>\n<h1 id="vấn-đề-và-giải-pháp"><a href="#v%E1%BA%A5n-%C4%91%E1%BB%81-v%C3%A0-gi%E1%BA%A3i-ph%C3%A1p" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Vấn đề và giải pháp</h1>\n<p>Vấn đề là chúng ta cần phải lưu cái cách tính <code class="language-text">price * quantity</code> này lại ở đâu đó, để chúng ta re-run cách tính này khi gọi lại <code class="language-text">total</code>, nó sẽ không nên là biến số mà là thành hàm, thì khi đó nếu giá trị <code class="language-text">price</code> hoặc <code class="language-text">quantity</code> thay đổi chúng ta sẽ có kết quả <code class="language-text">total</code> thay đổi theo.</p>\n<p>Chúng ta cần một nơi để <strong>lưu</strong> phần code tính toán kiểu như vậy lại ở đâu đó, để khi <code class="language-text">price</code> hoặc <code class="language-text">quantity</code> thay đổi, chúng ta sẽ chạy lại tất cả những gì <strong>đã lưu</strong></p>\n<p><img src="https://cdn-images-1.medium.com/max/800/0*Nh-FQoHiDHncmQSi.png"></p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js"><span class="token keyword">let</span> price <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> quantity <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> total <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> <span class="token function-variable function">target</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span> total <span class="token operator">=</span> price <span class="token operator">*</span> quantity <span class="token punctuation">}</span>\n\n<span class="token function">record</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// lưu lại đâu đó để re-run sau này</span>\n\n<span class="token function">target</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// </span></code></pre>\n      </div>\n<p>Hàm record chúng ta sẽ implement nó như sau</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js"><span class="token keyword">let</span> storage <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// đưa toàn bộ các hàm muốn re-run vào mảng này</span>\n\n<span class="token keyword">function</span> <span class="token function">record</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  storage<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token comment">// hàm để chạy lại tất cả những thứ đã lưu trong store</span>\n<span class="token keyword">function</span> <span class="token function">replay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  storage<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">run</span> <span class="token operator">=></span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code></pre>\n      </div>\n<h1 id="giải-pháp-tổng-quát-hơn"><a href="#gi%E1%BA%A3i-ph%C3%A1p-t%E1%BB%95ng-qu%C3%A1t-h%C6%A1n" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Giải pháp tổng quát hơn</h1>\n<p>Nếu đã nắm được ý tưởng chính để giải quyết bài toán ban đầu, giờ chúng ta sẽ hiện thực hóa nó bẳng observer pattern, tạo một <code class="language-text">class</code> để quản lý những chuyện đó</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js"><span class="token keyword">class</span> <span class="token class-name">Dep</span> <span class="token punctuation">{</span>\n  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// thay vì là starage, thiên hạ đã thống nhất lấy cái tên subscribers</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>subscribers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> \n  <span class="token punctuation">}</span>\n  <span class="token function">depend</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>subscribers<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token comment">// chỉ thêm vào nếu chưa có hoặc không trùng</span>\n      thiss<span class="token punctuation">.</span>subscribers<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n  <span class="token function">notify</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// run tất cả target, tên gọi khác là observer</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>subscribers<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">sub</span> <span class="token operator">=></span> <span class="token function">sub</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> \n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre>\n      </div>\n<p>Code lại ví dụ trên sử dụng <code class="language-text">class</code> mới tạo này</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js"><span class="token keyword">const</span> dep <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">let</span> price <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> quantity <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> total <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> <span class="token function-variable function">target</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span> total <span class="token operator">=</span> price <span class="token operator">*</span> quantity <span class="token punctuation">}</span>\ndep<span class="token punctuation">.</span><span class="token function">depend</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token function">target</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>total<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 10</span>\nprice <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>total<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 10</span>\ndep<span class="token punctuation">.</span><span class="token function">notify</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>total<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 40</span></code></pre>\n      </div>\n<p>Chúng ta vẫn còn có thể nâng cấp đoạn code trên, thay vì</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js"><span class="token keyword">let</span> <span class="token function-variable function">target</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span> total <span class="token operator">=</span> price <span class="token operator">*</span> quantity <span class="token punctuation">}</span>\ndep<span class="token punctuation">.</span><span class="token function">depend</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token function">target</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n      </div>\n<p>... chúng ta đóng gói nó vào một <strong>watcher</strong>, sau đó chỉ cần gọi</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js"><span class="token function">watcher</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  total <span class="token operator">=</span> price <span class="token operator">*</span> quantity\n<span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre>\n      </div>\n<p>Implement cái function watcher này như bên dưới</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">watcher</span><span class="token punctuation">(</span><span class="token parameter">myFunc</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  target <span class="token operator">=</span> myFunc<span class="token punctuation">;</span> <span class="token comment">// active target, target ở đây là global variable</span>\n  dep<span class="token punctuation">.</span><span class="token function">depend</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// đưa target vào dependency</span>\n  <span class="token function">target</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// gọi hàm target</span>\n  target <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token comment">// reset</span>\n<span class="token punctuation">}</span></code></pre>\n      </div>\n<h1 id="tách-dep-cho-mỗi-biến"><a href="#t%C3%A1ch-dep-cho-m%E1%BB%97i-bi%E1%BA%BFn" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Tách Dep cho mỗi biến</h1>\n<p>Chúng ta sẽ muốn mỗi một biến có một <code class="language-text">Dep</code> riêng, trước tiên ta đưa <code class="language-text">price</code> và <code class="language-text">quantity</code> thành property của <code class="language-text">data</code></p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js"><span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token punctuation">{</span>price<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span> quantity<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">}</span></code></pre>\n      </div>\n<p>Chúng ta sẽ có các Dep khác nhau cho <code class="language-text">price</code> và <code class="language-text">quantity</code></p>\n<p><img src="https://cdn-images-1.medium.com/max/800/0*kV4iCRoguwO5C_JQ.png"></p>\n<p>watcher phụ thuộc cả 2 biến</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js"><span class="token function">watcher</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  total <span class="token operator">=</span> data<span class="token punctuation">.</span>price <span class="token operator">*</span> data<span class="token punctuation">.</span>quantity<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre>\n      </div>\n<p><img src="https://cdn-images-1.medium.com/max/800/0*E-_YXfn3vJe7S_Ry.png"></p>\n<p>watcher chỉ phụ thuộc biến <code class="language-text">price</code></p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js"><span class="token function">watcher</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  salePrice <span class="token operator">=</span> data<span class="token punctuation">.</span>price <span class="token operator">*</span> <span class="token number">0.9</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre>\n      </div>\n<p><img src="https://cdn-images-1.medium.com/max/800/0*wefv6my2WWLW2385.png"></p>\n<p>Chúng ta muốn khi giá trị <code class="language-text">price</code> bị thay đổi, hàm <code class="language-text">dep.notify</code> của <code class="language-text">price store</code> sẽ được gọi</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js"><span class="token operator">>></span> total\n<span class="token number">10</span>\n<span class="token operator">>></span> price <span class="token operator">=</span> <span class="token number">20</span> <span class="token comment">// lúc này thằng notify của price sẽ được gọi liên luôn</span>\n<span class="token operator">>></span> total\n<span class="token number">40</span></code></pre>\n      </div>\n<p>Đọc thêm tài liệu về <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty">Object.defineProperty</a> nếu chưa biết. Áp dụng nó trong ví dụ này</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js"><span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token punctuation">{</span>price<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span> quantity<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">}</span>\n\n<span class="token keyword">let</span> internalValue <span class="token operator">=</span> data<span class="token punctuation">.</span>price<span class="token punctuation">;</span> <span class="token comment">// giá trị khởi tạo</span>\n\nObject<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token string">\'price\'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token comment">// chỉ cho thằng Price Property</span>\n  <span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'Em bị access\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> internalValue<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token keyword">set</span><span class="token punctuation">(</span>newVal<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'Em bị thay đổi\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    internalvalue <span class="token operator">=</span> newVal<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\ndata<span class="token punctuation">.</span>price <span class="token comment">// call get()</span>\ndata<span class="token punctuation">.</span>price <span class="token operator">=</span> <span class="token number">20</span> <span class="token comment">// call set()</span>\n\ntotal <span class="token operator">=</span> data<span class="token punctuation">.</span>price <span class="token operator">*</span> data<span class="token punctuation">.</span>quantity<span class="token punctuation">;</span>\ndata<span class="token punctuation">.</span>price <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span></code></pre>\n      </div>\n<p>Với cách này, chúng ta có thể chạy kèm một hàm nào đó khi giá trị <code class="language-text">price</code> được <strong>get</strong> hoặc <strong>set</strong>. Với idea là như thế chúng ta tổng quát quá lên cho nhiều biến</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js"><span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token punctuation">{</span>price<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span> quantity<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">}</span>\n\nObject<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">key</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">let</span> intervalvalue <span class="token operator">=</span> data<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>\n  Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token comment">// chỉ cho thằng Price Property</span>\n    <span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'Em bị access\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">return</span> internalValue<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token keyword">set</span><span class="token punctuation">(</span>newVal<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'Em bị thay đổi\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      internalvalue <span class="token operator">=</span> newVal<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\ntotal <span class="token operator">=</span> data<span class="token punctuation">.</span>price <span class="token operator">*</span> data<span class="token punctuation">.</span>quantity<span class="token punctuation">;</span>\ndata<span class="token punctuation">.</span>price <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span></code></pre>\n      </div>\n<h1 id="tổng-hợp-các-ý-tưởng-chính"><a href="#t%E1%BB%95ng-h%E1%BB%A3p-c%C3%A1c-%C3%BD-t%C6%B0%E1%BB%9Fng-ch%C3%ADnh" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Tổng hợp các ý tưởng chính</h1>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js">total <span class="token operator">=</span> data<span class="token punctuation">.</span>price <span class="token operator">*</span> data<span class="token punctuation">.</span>quantity</code></pre>\n      </div>\n<p>Khi một đoạn code như vậy được chạy, nó sẽ <code class="language-text">get</code> giá trị của <code class="language-text">price</code>, chúng ta muốn thẳng <code class="language-text">price</code> khi bị thay đổi hoặc gọi, nó sẽ re-run một function</p>\n<ul>\n<li>Ở <strong>Get</strong>: nhớ dùm cái function này, bọn tao sẽ nhờ mày chạy lại</li>\n<li>Ở <strong>Set</strong>: chạy cái function mày đã giữ hộ ấy, thay đổi giá trị luôn nhé</li>\n</ul>\n<p>Và đây là toàn bộ code</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js"><span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token punctuation">{</span>price<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span> quantity<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> target <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n\n<span class="token comment">// Dep không thay đổi gì so với ở trên</span>\n<span class="token keyword">class</span> <span class="token class-name">Dep</span> <span class="token punctuation">{</span>\n  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// thay vì là starage, thiên hạ đã thống nhất lấy cái tên subscribers</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>subscribers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> \n  <span class="token punctuation">}</span>\n  <span class="token function">depend</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>subscribers<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token comment">// chỉ thêm vào nếu chưa có hoặc không trùng</span>\n      thiss<span class="token punctuation">.</span>subscribers<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n  <span class="token function">notify</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// run tất cả target, tên gọi khác là observer</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>subscribers<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">sub</span> <span class="token operator">=></span> <span class="token function">sub</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> \n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// chạy qua từng data của property</span>\nObject<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">key</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">let</span> intervalvalue <span class="token operator">=</span> data<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n  <span class="token comment">// mỗi em một Dep</span>\n  <span class="token keyword">const</span> dep <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token comment">// chỉ cho thằng Price Property</span>\n    <span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      dep<span class="token punctuation">.</span><span class="token function">depend</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// lưu hộ tao cái</span>\n      <span class="token keyword">return</span> internalValue<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token keyword">set</span><span class="token punctuation">(</span>newVal<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      internalvalue <span class="token operator">=</span> newVal<span class="token punctuation">;</span>\n      dep<span class="token punctuation">.</span><span class="token function">notify</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// re-run đi em</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">// watcher sẽ không còn gọi dep.depend nữa</span>\n<span class="token keyword">function</span> <span class="token function">watcher</span><span class="token punctuation">(</span><span class="token parameter">myFunc</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  target <span class="token operator">=</span> myFunc<span class="token punctuation">;</span>\n  <span class="token function">target</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  target <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token function">watcher</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  data<span class="token punctuation">.</span>total <span class="token operator">=</span> data<span class="token punctuation">.</span>price <span class="token operator">*</span> data<span class="token punctuation">.</span>quantity<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre>\n      </div>\n<p>Kết quả nè</p>\n<p><img src="https://cdn-images-1.medium.com/max/800/0*mgmRTNK_n0i2AFK2.png"></p>\n<p>Hình mình họa lấy từ Vue</p>\n<p><img src="https://cdn-images-1.medium.com/max/800/0*tB3MJCzh_cB6i3mS.png"></p>\n<p><a href="https://medium.com/vue-mastery/the-best-explanation-of-javascript-reactivity-fea6112dd80d">Link bài gốc</a></p>',
timeToRead:7,excerpt:"Một ví dụ về Reactivity của Vue Vấn đề và giải pháp Giải pháp tổng quát hơn Tách Dep cho mỗi biến Tổng hợp các ý tưởng chính Một ví dụ về…",frontmatter:{title:"Giải thích Javascript Reactivity",cover:"",date:"2018-07-17",category:null,tags:["javascript"],desc:"Rất nhiều thư viện Javascript như Angular, React, Vue sử dụng Reactivity, hiểu được reactivity là gì và cách nó chạy sẽ giúp nâng cao kỹ năng lập trình"},fields:{slug:"/2018-07-17-huong-dan-giai-thich-javascript-reactivity"}}},pathContext:{slug:"/2018-07-17-huong-dan-giai-thich-javascript-reactivity",prev:{frontmatter:{title:"Giới thiệu RxJS và Redux Observer",desc:"Một middleware mạnh hơn redux-thunk, ít phức tạp hơn redux-saga. Chúng ta sẽ điểm qua những khái niệm chính để bắt đầu với middleware này",type:"post",category:null,tags:["react","javascript"],date:"2018-07-18",cover:""},fields:{slug:"/2018-07-18-huong-dan-gioi-thieu-ve-redux-observer"}},next:{frontmatter:{title:"Nâng cao tốc độ website với Chrome DevTools",desc:"Hướng dẫn sử dụng Chrome DevTools để phân tích và tối ưu hóa tốc độ website",type:"post",category:null,tags:["chrome","performance"],date:"2018-07-09",cover:""},fields:{slug:"/2018-07-09-huong-dan-optimize-toc-do-website-voi-chrome-devtools"}}}}}});
//# sourceMappingURL=path---2018-07-17-huong-dan-giai-thich-javascript-reactivity-5de7a610e3d5c47ee878.js.map