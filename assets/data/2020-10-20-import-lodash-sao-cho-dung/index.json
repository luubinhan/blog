{"hash":"0281ffacf02e407aef71fb6a89d922a636585707","data":{"post":{"title":"Import lodash như thế nào mới đúng","path":"/2020-10-20-import-lodash-sao-cho-dung/","slug":"2020-10-20-import-lodash-sao-cho-dung","date":"2020-10-20","timeToRead":2,"tags":[{"id":"dam-dao","title":"dam-dao","path":"/tag/dam-dao/"},{"id":"hoc-thuat","title":"hoc-thuat","path":"/tag/hoc-thuat/"}],"desc":"Nếu cần xài lodash, thì bạn xài nó sao cho hiệu quả","content":"<!-- TOC -->\n<ul>\n<li><a href=\"#c%C3%A1ch-1\">Cách 1</a></li>\n<li><a href=\"#c%C3%A1ch-2\">Cách 2</a></li>\n<li><a href=\"#c%C3%A1ch-3\">Cách 3</a></li>\n<li><a href=\"#d%C3%B9ng-lodash-babel-plugin\">Dùng lodash babel plugin</a></li>\n<li><a href=\"#d%C3%B9ng-lodash-webpack-plugin\">Dùng Lodash webpack plugin</a></li>\n<li><a href=\"#k%E1%BA%BFt-lu%E1%BA%ADn\">Kết luận</a></li>\n</ul>\n<!-- /TOC -->\n<p>Mình đã từng nghe một bạn Principle FE trong công ty phát biểu là</p>\n<blockquote>\n<p>Đã 2020 rồi mà còn xài lodash là sao, lodash đã tối cổ, chả ai xài nữa đâu</p>\n</blockquote>\n<p>Khoan bàn chuyện đúng sai trong phát biểu này, nếu bạn cũng như mình, vẫn đang dùng <code class=\"language-inline-text\">lodash</code> thì bạn cần biết <code class=\"language-inline-text\">import</code> nó như thế nào cho đúng</p>\n<p><strong>Tại sao cần làm đúng? Vì nếu làm sao vô tình bạn sẽ làm phình cục bundle lên gấp mấy chục lần</strong></p>\n<p>Giờ so sánh 3 cách <code class=\"language-inline-text\">import</code></p>\n<h2 id=\"cách-1\"><a href=\"#c%C3%A1ch-1\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Cách 1</h2>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> _ <span class=\"token keyword\">from</span> <span class=\"token string\">'lodash'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Tại sao lại chọn kiểu này? Không cần quan tâm đến user, cảm giác rất quyền lực như có găng tay vô cực, chỉ với <code class=\"language-inline-text\">_.</code> chúng ta có tất cả mọi thứ.</p>\n<p>Điểm yếu, đây là cách tuyệt đối nghiêm cấm, vì gần như là load nguyên cái thư viện</p>\n<p><img src=\"https://cdn2.hubspot.net/hubfs/208250/Blog_Images/lodash2.png\" alt=\"the best way to import lodash\"></p>\n<p>Tổng 190 KB, Lodash ngốn hết 72.5kb</p>\n<h2 id=\"cách-2\"><a href=\"#c%C3%A1ch-2\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Cách 2</h2>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> map<span class=\"token punctuation\">,</span> each<span class=\"token punctuation\">,</span> get<span class=\"token punctuation\">,</span> set <span class=\"token punctuation\">}</span> from lodash<span class=\"token punctuation\">;</span></code></pre></div>\n<p>Kiểu này ổn, dễ đọc, rất rõ ràng để thấy được những hàm nào cần sử dụng.</p>\n<p>Tuy nhiên, nó lại không khác gì với cách 1. Tổng vẫn là 190kb</p>\n<h2 id=\"cách-3\"><a href=\"#c%C3%A1ch-3\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Cách 3</h2>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> map <span class=\"token keyword\">from</span> <span class=\"token string\">'lodash/map'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> each <span class=\"token keyword\">from</span> <span class=\"token string\">'lodash/each'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token keyword\">get</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'lodash/get'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token keyword\">set</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'lodash/set'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Kết quả cho thấy đây là cách tiết kiệm nhất, mặc dù thực tế sử dụng cho thấy cách này hơi tốn công anh em dev của chúng ta và nhìn đoạn import có vẻ dài.</p>\n<p><img src=\"https://cdn2.hubspot.net/hubfs/208250/Blog_Images/lodash3.png\" alt=\"benchmarking lodash import\"></p>\n<p>Một số ý kiến cho là dùng <a href=\"https://www.npmjs.com/package/lodash-es\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">lodash-es</a>, một phiên bản theo kiểu ES module sẽ tiết kiệm hơn, đây là kết quả đo được</p>\n<ol>\n<li>Cách 1: 256.4 KB</li>\n<li>Cách 1: 256.54 KB</li>\n<li>Cách 1: 142.39 KB</li>\n</ol>\n<p>Như vậy việc dùng <code class=\"language-inline-text\">lodash-es</code> có vẻ là vô dụng</p>\n<h2 id=\"dùng-lodash-babel-plugin\"><a href=\"#d%C3%B9ng-lodash-babel-plugin\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Dùng lodash babel plugin</h2>\n<p>Sử dụng <a href=\"https://github.com/lodash/babel-plugin-lodash\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">lodash babel plugin</a> chúng ta có kết quả 140kb trên tất cả các cách <em>import</em></p>\n<p><img src=\"https://cdn2.hubspot.net/hubfs/208250/Blog_Images/lodash4.png\" alt=\"importing lodash with the lodash babel plugin\"></p>\n<h2 id=\"dùng-lodash-webpack-plugin\"><a href=\"#d%C3%B9ng-lodash-webpack-plugin\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Dùng Lodash webpack plugin</h2>\n<p><a href=\"https://github.com/lodash/lodash-webpack-plugin\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Lodash webpack plugin</a> không biết đã bùa chú kiểu gì mà kết quả cuối cùng rất <em>ngon</em> 121kb cho cách 1, các cách khác sẽ còn bé hơn nữa</p>\n<p><img src=\"https://cdn2.hubspot.net/hubfs/208250/Blog_Images/lodash5.png\" alt=\"imprting lodash with the webpack plugin\"></p>\n<h2 id=\"kết-luận\"><a href=\"#k%E1%BA%BFt-lu%E1%BA%ADn\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Kết luận</h2>\n<p>Nếu ko siêng bạn nên dùng cách 3, còn nếu siêng bạn setup với babel-plugin-lodash và lodash-webpack-plugin để đạt hiệu quả cao nhất.</p>\n<p>Lodash-es thì nên dẹp luôn đừng xài vì nó ko thay đổi gì tích cực cả.</p>\n<p><a href=\"https://www.blazemeter.com/blog/the-correct-way-to-import-lodash-libraries-a-benchmark\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">The Correct Way to Import Lodash Libraries</a></p>\n","cover_image":"","related":[{"id":"dea079a7d56929f46cf5c0bdd1070ebf","path":"/2018-03-06-huong-dan-redux-van-hanh-nhu-the-nao-kem-vi-du/","title":"Redux vận hành như thế nào","desc":"Actions, reducers, action creators, middleware, pure functions, immutability,... những ngoại ngữ làm rối bất kỳ ai nếu chưa biết redux"},{"id":"c7db4e8951472801d63827ce67e67fe7","path":"/2020-10-15-micro-frontend-giai-thich-huong-dan/","title":"Micro frontend tại sao và như thế nào","desc":"Lướt qua một vài điểm về Micro Frontend, ý tưởng chính và các vấn đề được quan tâm"},{"id":"82815509b42f03b7df5ff8ab1af616b8","path":"/2018-12-12-setstate-chay-nhu-the-nao/","title":"this.setState trong React chạy như thế nào","desc":"Giải đáp thắc mắc vì sao this.setState có thể update DOM, chạy được trên mobile, chạy được trên bất kỳ môi trường nào"},{"id":"f8528e820fefc73636e76fd4e555b660","path":"/2018-10-13-css-content-hop-le/","title":"Sử dụng CSS content như thế nào cho đúng","desc":"Thuộc tính content trong CSS thường được sử dụng cùng với 2 ghost element là after và before, những giá trị nào có thể đưa vào cho thuộc tính content này"}]}},"context":{}}