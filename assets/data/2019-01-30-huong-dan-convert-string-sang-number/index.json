{"hash":"9aeee0a3b55006b00a80cc09aa73da4e17f71410","data":{"post":{"title":"Convert giá trị String qua Number trong Javascript","path":"/2019-01-30-huong-dan-convert-string-sang-number/","slug":"/2019-01-30-huong-dan-convert-string-sang-number","date":"2019-01-30","timeToRead":3,"tags":[{"id":"javascript","title":"javascript","path":"/tag/javascript/"}],"desc":"Javascript rất lạ kỳ, convert giá trị String qua number cũng lắm nẻo dăm ba đường,nào NaN, nào radix. Bài này chúng ta cùng tìm hiểu parseFloat(), Number(), Number.isNaN(), isNaN()","content":"<p>Javascript rất lạ kỳ, convert giá trị String qua number cũng lắm nẻo dăm ba đường,nào NaN, nào radix. Bài này chúng ta cùng tìm hiểu parseFloat(), Number(), Number.isNaN(), isNaN()</p>\n<blockquote>\n<p>Một cách ngắn gọn, chúng ta nên dùng <code class=\"language-inline-text\">Number(x)</code> để convert giá trị sang dạng number, hoặc <code class=\"language-inline-text\">parseFloat(x)</code> nếu muốn chuẩn mực</p>\n</blockquote>\n<p>Để kiểm tra kết quả có convert được hay không, luôn dùng <code class=\"language-inline-text\">Number.isNaN()</code>, <strong>không nên</strong> dùng phương thức global <code class=\"language-inline-text\">isNaN()</code>.</p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">typeof</span> <span class=\"token function\">parseFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">'42'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'number'</span>\nNumber<span class=\"token punctuation\">.</span><span class=\"token function\">isNaN</span><span class=\"token punctuation\">(</span><span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">'42'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n\n<span class=\"token keyword\">typeof</span> <span class=\"token function\">parseFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fail'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'number'</span>\nNumber<span class=\"token punctuation\">.</span><span class=\"token function\">isNaN</span><span class=\"token punctuation\">(</span><span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fail'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span></code></pre></div>\n<p>Sử dụng <code class=\"language-inline-text\">Number(x)</code> sẽ có vài trường hợp đặc biệt, nó có thể là đúng cũng có thể là sai, tùy theo cách hiểu của chúng ta.</p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 0</span></code></pre></div>\n<p>Rất nhiều dev sử dụng <code class=\"language-inline-text\">+x</code> để convert giá trị <em>x</em> sang number. Theo như khai báo của javascript, <code class=\"language-inline-text\">+x</code> sẽ tương tự như <code class=\"language-inline-text\">Number(x)</code></p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">+</span><span class=\"token string\">'42 fail'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// NaN</span>\n<span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token function-variable function\">valueOf</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token string\">'42'</span>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 42</span>\n<span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token function-variable function\">toString</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token string\">'42'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 42</span>\n<span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 0</span>\n<span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token string\">'     '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 0</span></code></pre></div>\n<h2 id=\"cái-sai-của-numberx\"><a href=\"#c%C3%A1i-sai-c%E1%BB%A7a-numberx\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Cái sai của <code class=\"language-inline-text\">Number(x)</code></h2>\n<p><code class=\"language-inline-text\">Number(x)</code> và <code class=\"language-inline-text\">parseFloat(x)</code> xử trí các tình huống đặc biệt rất khác nhau, <code class=\"language-inline-text\">parseFloat()</code> <em>có vẻ</em> dễ giải hơn khi chấp nhận một số kiểu String</p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">'42 fail'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// NaN</span>\n<span class=\"token function\">parseFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">'42 fail'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 42</span>\n<span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span><span class=\"token string\">'42 fail'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 42</span>\n\n<span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">'    10'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 10</span>\n<span class=\"token function\">parseFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">'    10'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 10</span>\n<span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span><span class=\"token string\">'    10'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 10</span></code></pre></div>\n<p>Đừng thấy vậy mà kết luận rằng <code class=\"language-inline-text\">Number(x)</code> chuẩn mực và an toàn hơn. Thực ra, <code class=\"language-inline-text\">Number(x)</code> hay lấn cấn khi string chứa khoảng trắng, <code class=\"language-inline-text\">null</code>,  và một số tính huống khác. Nó convert khá nhiều trường hợp sang 0.</p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 0</span>\n<span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 0</span>\n<span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">'        '</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 0</span>\n<span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 0</span>\n<span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token function-variable function\">toString</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token string\">''</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 0</span>\n<span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token function-variable function\">valueOf</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token string\">'  '</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 0</span></code></pre></div>\n<p>Nguyên tắc làm việc của <code class=\"language-inline-text\">parseFloat()</code> đơn giản và dễ đoán hơn. Cắt hết khoảng trắng, rồi kiểm tra với một regular expression được quy ước để lấy giá trị số dài nhất trong chuỗi.</p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// parseInt hoạt động tương tự</span>\n<span class=\"token function\">parseFloat</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// NaN</span>\n<span class=\"token function\">parseFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// NaN</span>\n<span class=\"token function\">parseFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">'    '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// NaN</span>\n<span class=\"token function\">parseFloat</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// NaN</span>\n<span class=\"token function\">parseFloat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token function-variable function\">toString</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token string\">''</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// NaN</span>\n<span class=\"token function\">parseFloat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token function-variable function\">valueOf</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token string\">'  '</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// NaN</span></code></pre></div>\n<h2 id=\"numberisnan-và-isnan\"><a href=\"#numberisnan-v%C3%A0-isnan\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Number.isNaN() và isNaN()</h2>\n<p>Javascript sẽ ko quăng lỗi nếu nó ko convert được giá trị sang number, nó trả về một giá trị đặc biệt gọi là <code class=\"language-inline-text\">NaN</code> (not a number). Và vẫn chưa đủ độ huyền bí, nếu kiểm tra <code class=\"language-inline-text\">typeof</code> của một giá trị là <code class=\"language-inline-text\">NaN</code> chúng ta nhận được 'number`. Nực cười quá mà.</p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fail'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// NaN</span>\n<span class=\"token keyword\">typeof</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fail'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 'number'</span></code></pre></div>\n<p>Lý do cho sự có mặt của <code class=\"language-inline-text\">Number.isNaN()</code> và <code class=\"language-inline-text\">isNaN()</code> là vì <code class=\"language-inline-text\">==</code> và <code class=\"language-inline-text\">===</code> không chạy đúng trên giá trị <code class=\"language-inline-text\">NaN</code></p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fail'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fail'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n<span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fail'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fail'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n<span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fail'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">NaN</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n<span class=\"token number\">NaN</span> <span class=\"token operator\">===</span> <span class=\"token number\">NaN</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span></code></pre></div>\n<p><code class=\"language-inline-text\">Number.isNaN()</code> là một hàm mới được bổ sung trong ES6, tuy nhiên ko nhận được nhiều sự quan tâm. Chúng ta nên tập sử dụng <code class=\"language-inline-text\">Number.isNaN()</code> thay cho <code class=\"language-inline-text\">isNaN()</code></p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">isNaN</span><span class=\"token punctuation\">(</span><span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fail'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// true</span>\nNumber<span class=\"token punctuation\">.</span><span class=\"token function\">isNaN</span><span class=\"token punctuation\">(</span><span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fail'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span></code></pre></div>\n<p>Một cách dễ hình dung sự khác nhau, nếu <code class=\"language-inline-text\">Number.isNaN()</code> là so sánh <code class=\"language-inline-text\">===</code> thì <code class=\"language-inline-text\">isNaN()</code> là so sánh <code class=\"language-inline-text\">==</code></p>\n<p>Thằng <code class=\"language-inline-text\">isNaN()</code> nó sẽ convert giá trị qua number trước, rồi mới đem đi so sánh kết quả.</p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">isNaN</span><span class=\"token punctuation\">(</span>‘fail’<span class=\"token punctuation\">)</span> <span class=\"token comment\">// true</span>\n<span class=\"token function\">isNaN</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// true</span>\n\nNumber<span class=\"token punctuation\">.</span><span class=\"token function\">isNaN</span><span class=\"token punctuation\">(</span>‘fail’<span class=\"token punctuation\">)</span> <span class=\"token comment\">// false</span>\nNumber<span class=\"token punctuation\">.</span><span class=\"token function\">isNaN</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// false</span></code></pre></div>\n<p>Nói cách khác, nếu giá trị x không phải kiểu number, thì <code class=\"language-inline-text\">Number.isNaN(x)</code> sẽ là false</p>\n<p>Cái polyfill cho <code class=\"language-inline-text\">Number.isNaN()</code> được hiện thực đơn giản như sau</p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">Number<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">isNaN</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">typeof</span> x <span class=\"token operator\">===</span> <span class=\"token string\">'number'</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">isNaN</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://thecodebarbarian.com/convert-a-string-to-a-number-in-javascript.html\n\">Convert a String to a Number in JavaScript</a></p>\n","cover_image":"","related":[{"id":"100640c49411b1ebfd3f20a0be2cdb53","path":"/2019-10-18-7-cau-hoi-phong-van-lac-leo-voi-js/","title":"7 Câu hỏi phỏng vấn lắc léo với Javascript","desc":"Thử kiến thức javascript của bạn đã đủ cho cuộc phỏng vấn cam go sắp tới chưa"},{"id":"3a6380cc71f067cbeb40825b4adb02e4","path":"/2019-05-28-giai-thich-pattern-flux-trong-react/","title":"Giải thích Flux Pattern theo phong cách John Wick","desc":"Điểm lại các khái niệm trong Flux action, dispatch, store, điều kiện tiên quyết đề đọc bài này là nên xem lại John Wick"},{"id":"dea079a7d56929f46cf5c0bdd1070ebf","path":"/2018-03-06-huong-dan-redux-van-hanh-nhu-the-nao-kem-vi-du/","title":"Redux vận hành như thế nào","desc":"Actions, reducers, action creators, middleware, pure functions, immutability,... những ngoại ngữ làm rối bất kỳ ai nếu chưa biết redux"}]}},"context":{}}