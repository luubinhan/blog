{"hash":"6000b69201124b9452c41d38889aba5b11cf5e89","data":{"post":{"title":"Xử lý lỗi nếu có xảy ra trong javascript","path":"/2018-11-19-xu-ly-loi-neu-co-xay-ra-trong-javascript/","date":"2018-11-19","timeToRead":3,"tags":[{"id":"javascript","title":"javascript","path":"/tag/javascript/"}],"desc":"Lỗi nếu có xảy ra, phải được xử lý hết tránh để chết nguyên ứng dụng. Điểm lại một vài cách xử lý lỗi trong javascript","content":"<!-- TOC -->\n<ul>\n<li><a href=\"#javascript-error\">Javascript error</a></li>\n<li><a href=\"#trycatch\">try...catch</a></li>\n<li><a href=\"#finally\">...finally</a></li>\n<li>\n<p><a href=\"#c%C3%A1c-h%C3%A0m-async\">Các hàm async</a></p>\n<ul>\n<li><a href=\"#callback\">callback</a></li>\n<li><a href=\"#promise\">Promise</a></li>\n<li><a href=\"#asyncawait\">async/await</a></li>\n</ul>\n</li>\n<li><a href=\"#hi%E1%BB%83n-th%E1%BB%8B-l%E1%BB%97i-%E1%BB%9F-ph%C3%ADa-giao-di%E1%BB%87n-ng%C6%B0%E1%BB%9Di-d%C3%B9ng\">Hiển thị lỗi ở phía giao diện người dùng</a></li>\n</ul>\n<!-- /TOC -->\n<h2 id=\"javascript-error\"><a href=\"#javascript-error\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Javascript error</h2>\n<p><code class=\"language-text\">throw new Error(&#39;khi có lỗi&#39;)</code> sẽ tạo ra một object Error và dừng chạy.</p>\n<p>Error object có 2 property có sẵn, 1 là <code class=\"language-text\">message</code></p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> myError <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Lỗi rồi nè'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>myError<span class=\"token punctuation\">.</span><span class=\"token property-access\">message</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// => Lỗi rồi nè</span></code></pre>\n<p>...cái thứ 2, rất quan trọng, là <code class=\"language-text\">stack</code>, nó sẽ cho ta history các phương thức và file đã gọi qua.</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token known-class-name class-name\">Error</span><span class=\"token operator\">:</span> please improve your code\n at <span class=\"token known-class-name class-name\">Object</span><span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span>anonymous<span class=\"token operator\">></span> <span class=\"token punctuation\">(</span><span class=\"token operator\">/</span><span class=\"token maybe-class-name\">Users</span><span class=\"token operator\">/</span>gisderdube<span class=\"token operator\">/</span><span class=\"token maybe-class-name\">Documents</span><span class=\"token operator\">/</span>_projects<span class=\"token operator\">/</span>hacking<span class=\"token punctuation\">.</span><span class=\"token property-access\">nosync</span><span class=\"token operator\">/</span>error<span class=\"token operator\">-</span>handling<span class=\"token operator\">/</span>src<span class=\"token operator\">/</span>general<span class=\"token punctuation\">.</span><span class=\"token property-access\">js</span><span class=\"token operator\">:</span><span class=\"token number\">1</span><span class=\"token operator\">:</span><span class=\"token number\">79</span><span class=\"token punctuation\">)</span>\n at <span class=\"token maybe-class-name\">Module</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">_compile</span> <span class=\"token punctuation\">(</span>internal<span class=\"token operator\">/</span>modules<span class=\"token operator\">/</span>cjs<span class=\"token operator\">/</span>loader<span class=\"token punctuation\">.</span><span class=\"token property-access\">js</span><span class=\"token operator\">:</span><span class=\"token number\">689</span><span class=\"token operator\">:</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span>\n at <span class=\"token known-class-name class-name\">Object</span><span class=\"token punctuation\">.</span><span class=\"token property-access\"><span class=\"token maybe-class-name\">Module</span></span><span class=\"token punctuation\">.</span><span class=\"token property-access\">_extensions</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">js</span> <span class=\"token punctuation\">(</span>internal<span class=\"token operator\">/</span>modules<span class=\"token operator\">/</span>cjs<span class=\"token operator\">/</span>loader<span class=\"token punctuation\">.</span><span class=\"token property-access\">js</span><span class=\"token operator\">:</span><span class=\"token number\">700</span><span class=\"token operator\">:</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n at <span class=\"token maybe-class-name\">Module</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">load</span> <span class=\"token punctuation\">(</span>internal<span class=\"token operator\">/</span>modules<span class=\"token operator\">/</span>cjs<span class=\"token operator\">/</span>loader<span class=\"token punctuation\">.</span><span class=\"token property-access\">js</span><span class=\"token operator\">:</span><span class=\"token number\">599</span><span class=\"token operator\">:</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span>\n at <span class=\"token function\">tryModuleLoad</span> <span class=\"token punctuation\">(</span>internal<span class=\"token operator\">/</span>modules<span class=\"token operator\">/</span>cjs<span class=\"token operator\">/</span>loader<span class=\"token punctuation\">.</span><span class=\"token property-access\">js</span><span class=\"token operator\">:</span><span class=\"token number\">538</span><span class=\"token operator\">:</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span>\n at <span class=\"token known-class-name class-name\">Function</span><span class=\"token punctuation\">.</span><span class=\"token property-access\"><span class=\"token maybe-class-name\">Module</span></span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">_load</span> <span class=\"token punctuation\">(</span>internal<span class=\"token operator\">/</span>modules<span class=\"token operator\">/</span>cjs<span class=\"token operator\">/</span>loader<span class=\"token punctuation\">.</span><span class=\"token property-access\">js</span><span class=\"token operator\">:</span><span class=\"token number\">530</span><span class=\"token operator\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n at <span class=\"token known-class-name class-name\">Function</span><span class=\"token punctuation\">.</span><span class=\"token property-access\"><span class=\"token maybe-class-name\">Module</span></span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">runMain</span> <span class=\"token punctuation\">(</span>internal<span class=\"token operator\">/</span>modules<span class=\"token operator\">/</span>cjs<span class=\"token operator\">/</span>loader<span class=\"token punctuation\">.</span><span class=\"token property-access\">js</span><span class=\"token operator\">:</span><span class=\"token number\">742</span><span class=\"token operator\">:</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span>\n at <span class=\"token function\">startup</span> <span class=\"token punctuation\">(</span>internal<span class=\"token operator\">/</span>bootstrap<span class=\"token operator\">/</span>node<span class=\"token punctuation\">.</span><span class=\"token property-access\">js</span><span class=\"token operator\">:</span><span class=\"token number\">266</span><span class=\"token operator\">:</span><span class=\"token number\">19</span><span class=\"token punctuation\">)</span>\n at <span class=\"token function\">bootstrapNodeJSCore</span> <span class=\"token punctuation\">(</span>internal<span class=\"token operator\">/</span>bootstrap<span class=\"token operator\">/</span>node<span class=\"token punctuation\">.</span><span class=\"token property-access\">js</span><span class=\"token operator\">:</span><span class=\"token number\">596</span><span class=\"token operator\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></code></pre>\n<p>Nếu chúng ta không tự xử lý các trường hợp có lỗi, nó sẽ chết ngay chổ đó, để tránh tình huống này, tìm hiểu một số cách bắt lỗi</p>\n<h2 id=\"trycatch\"><a href=\"#trycatch\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>try...catch</h2>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// b chưa được định nghĩa, nó sẽ báo lỗi</span>\n  <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">error</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// vẫn chạy đến đây</span>\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Nếu không để <code class=\"language-text\">console.log(b)</code> bên trong <code class=\"language-text\">try..catch</code>, nó sẽ không chạy đến đoạn <code class=\"language-text\">console.log(a)</code></p>\n<h2 id=\"finally\"><a href=\"#finally\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>...finally</h2>\n<p>Đôi khi chúng ta cần chạy một đoạn code dù nó có bị lỗi hay không bị lỗi, nó cũng sẽ giống ở trên, nhưng viết nó sẽ rõ ràng hơn</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// b chưa được định nghĩa, nó sẽ báo lỗi</span>\n  <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">error</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h2 id=\"các-hàm-async\"><a href=\"#c%C3%A1c-h%C3%A0m-async\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Các hàm async</h2>\n<p>Hiện tại chúng ta có 3 cách để làm việc với các hàm async, cách xử lý lỗi nếu có trên 3 cách này: callback, Promise, async/await</p>\n<h3 id=\"callback\"><a href=\"#callback\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>callback</h3>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">myAsyncFunc</span><span class=\"token punctuation\">(</span>someInput<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> result</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">error</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre>\n<h3 id=\"promise\"><a href=\"#promise\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Promise</h3>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token known-class-name class-name\">Promise</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 1</span>\n    <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'something went wrong'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token known-class-name class-name\">Promise</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// sẽ không chạy</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">error</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token known-class-name class-name\">Promise</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// (A)</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 3</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// trong trường hợp block (A) xảy ra lỗi</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">error</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre>\n<h3 id=\"asyncawait\"><a href=\"#asyncawait\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>async/await</h3>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">await</span> <span class=\"token function\">someFuncThatThrowsAnError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">error</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> \n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// vẫn chạy</span>\n  <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Easy!'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h2 id=\"hiển-thị-lỗi-ở-phía-giao-diện-người-dùng\"><a href=\"#hi%E1%BB%83n-th%E1%BB%8B-l%E1%BB%97i-%E1%BB%9F-ph%C3%ADa-giao-di%E1%BB%87n-ng%C6%B0%E1%BB%9Di-d%C3%B9ng\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Hiển thị lỗi ở phía giao diện người dùng</h2>\n<p>Ví dụ chúng ta làm Single Page App bằng React, chúng ta muốn hiển thị lỗi trên giao diện như thế này</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*xSpVDWEQ4wMHQ5kObFwf8w.jpeg\" alt=\"Xử lý lỗi nếu có xảy ra trong javascript\"></p>\n<p>Có thể dùng React Portal để chèn vào hoặc dùng một component nhận vào Error Object và render ra trên giao diện</p>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">GobalError</span></span> <span class=\"token attr-name\">err</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>errorObj<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">reset</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>handleResetError<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>Nếu lỗi hiển thị dạng inline phía dưới input</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*tpmtTom2eSmH7AnrAI55QQ.jpeg\" alt=\"Xử lý lỗi nếu có xảy ra trong javascript\"></p>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n      <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">_callBackend</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Delete your city</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">InlineError</span></span> <span class=\"token attr-name\">error</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">state</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">error</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n<p><a href=\"https://levelup.gitconnected.com/the-definite-guide-to-handling-errors-gracefully-in-javascript-58424d9c60e6\" target=\"_blank\" rel=\"noopener noreferrer\">Handling Errors in JavaScript: The Definitive Guide</a></p>\n","cover_image":"","related":[{"id":"c1f11ca1c9a0c32bafe6c1af3ebe4aad","path":"/2020-03-16-van-de-cua-react-context-tren-async/","title":"Vấn đề của React Context trên các xử lý async","desc":"React Context có phải là viên đạn bạc sẽ giải quyết mọi vấn đề thay cho Redux hay không?"},{"id":"c96e777ca9db4c279c1d03ebd80ea3f8","path":"/2018-10-03-huong-dan-reactjs-table-du-lieu-lon/","title":"Xử lý tập dữ liệu lớn trong React","desc":"Tình huống: bạn có một table với rất nhiều dữ liệu đổ vào, nếu bạn thấy component đó render chậm trên màn hình, đó là lúc cần tái cấu trúc"},{"id":"8edd00046370763e538453241d01074d","path":"/2020-11-16-gioi-thieu-javascript-prototype/","title":"Nếu vỗ ngực xưng tên là một javascript developer sành sỏi, mà không giải thích được prototype inheritance thì thật là kỳ","desc":""}]}},"context":{}}