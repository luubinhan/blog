{"hash":"32a692caa050f4449db6ef3758917749cdab929d","data":{"post":{"title":"Phân biệt sự khác nhau giữa Identity và Resource Base Policy trong AWS IAM","path":"/2022-09-25-phan-biet-identity-va-resource-base-policy/","slug":"2022-09-25-phan-biet-identity-va-resource-base-policy","date":"2022-09-25","timeToRead":2,"tags":[{"id":"aws","title":"aws","path":"/tag/aws/"},{"id":"beginner","title":"beginner","path":"/tag/beginner/"}],"desc":"Series một số kiến thức cần có để lấy chứng chỉ AWS","content":"<p><strong>IDENTITY</strong>-based policy gán cho <code class=\"language-inline-text\">user</code>, <code class=\"language-inline-text\">group</code>, hoặc <code class=\"language-inline-text\">role</code> (gọi chung là <code class=\"language-inline-text\">identity</code>). Chỉ định những quyền gì mà <em>identity</em> có thể làm\n<strong>RESOURCE</strong>-based policy gán cho <em>resource</em>, ví dụ như S3 bucket, SQS queue, VPC endpooint</p>\n<p>Trong tình huống <code class=\"language-inline-text\">user</code> <em>không được cấp quyền</em> trên S3 bucket A (không được cấp không đồng nghĩa với việc bị cấm), nhưng resource policy đang gán cho bucket A cho phép mọi user upload vào bucket này, thì <code class=\"language-inline-text\">user</code> vẫn có thể upload</p>\n<p>Ví dụ, có <em>identity policy</em></p>\n<ul>\n<li>User A: List, Read trên resource A</li>\n<li>User B: List, Read trên resource B, C</li>\n<li>User C: List, Read, Write trên Resource A,B,C</li>\n<li>User D: Không có policy nào cả</li>\n</ul>\n<p>Tiếp đó chúng ta có <em>resource policy</em></p>\n<ul>\n<li>Resource A: User A = (List, Read), User C = (List, Read)</li>\n<li>Resource B: User B = (List, Write), User D = (List, Read)</li>\n<li>Resouce C: User B = Denied Access, User D: Full Access</li>\n</ul>\n<p>Thì kết quả từ 2 policy khi áp dụng sẽ là</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>LIST</th>\n<th>READ</th>\n<th>WRITE</th>\n<th>DENIED</th>\n<th>FULL ACCCESS</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>User A</td>\n<td>RES A</td>\n<td>RES A</td>\n<td>🚫</td>\n<td>🚫</td>\n<td>🚫</td>\n</tr>\n<tr>\n<td>User B</td>\n<td>RES B</td>\n<td>RES B</td>\n<td>RES B</td>\n<td>RES C</td>\n<td>🚫</td>\n</tr>\n<tr>\n<td>User C</td>\n<td>RES A,B,C</td>\n<td>RES A,B,C</td>\n<td>RES A,B,C</td>\n<td>🚫</td>\n<td>🚫</td>\n</tr>\n<tr>\n<td>User D</td>\n<td>RES B</td>\n<td>RES B</td>\n<td>🚫</td>\n<td>🚫</td>\n<td>RES C</td>\n</tr>\n</tbody>\n</table>\n<p>Khi <strong>identity</strong>-based policy kết hợp với <strong>Permission Boundary</strong>, lấy phần chung giữa hai tập</p>\n<p><img src=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/images/permissions_boundary.png\"></p>\n<p>Khi <strong>Resource</strong>-based policy kết hợp với <em>identity</em>-based policy và permission boundary, nó hơi ngoài lề một chút, lấy tất cả những phần chung giữa ba tập hợp cộng với tất cả những gì có trong resource-base policy</p>\n<p><img src=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/images/EffectivePermissions-rbp-boundary-id.png\"></p>\n<p>Khi kết hợp giữa tập <em>Service Control Policy</em>, <em>Permission boundary</em> và <em>identity-base policy</em>, chúng ta chỉ lấy phần tử chung của cả 3</p>\n<p><img src=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/images/EffectivePermissions-scp-boundary-id.png\"></p>\n<p>Tham khảo thêm <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"># Permissions boundaries for IAM entities</a></p>\n","cover_image":"","related":[{"id":"03c24b35f02139473e6c5d2412a4ee9b","path":"/2020-07-30-phan-biet-su-khac-nhau-giua-await-return-await/","title":"Phân biệt sự khác nhau giữa await-return-return await","desc":"Nắm rõ async không bao giờ là một kiến thức thừa."},{"id":"8252c4f039ec3be236389aeab96597e4","path":"/2020-09-01-phan-biet-giua-npm-va-npx/","title":"Sự khác nhau giữa npm và npx?","desc":"Bài viết này sẽ giải thích ngắn gọn nhất có thể sự khác nhau về mục đích của 2 thằng này"},{"id":"591905fac7f3bf828c968a36492cacfa","path":"/2021-08-22-phan-biet-same-site-same-origin/","title":"Phân biệt same-site và same-origin","desc":""},{"id":"983abf003964446de7951a6fb6f1b0de","path":"/2020-05-30-5-diem-khac-nhau-giua-arrow-function-va-function-thong-thuong/","title":"5 điểm khác nhau giữa function thường và arrow function","desc":"Lựa chọn cách viết nào cho phù hợp theo tính huống đang cần là cái chúng ta sẽ có được câu trả lời khi đi qua 5 điểm khác biệt này"}]}},"context":{}}