{"hash":"9ce2d5c495e1102c5fc8d54d921f2f20ee2572bb","data":{"post":{"title":"5 điểm khác nhau giữa function thường và arrow function","path":"/5-diem-khac-nhau-giua-function-thuong-va-arrow-function/","slug":"/2020-05-30-5-diem-khac-nhau-giua-arrow-function-va-function-thong-thuong","date":"2020-05-30","timeToRead":3,"tags":[{"id":"javascript","title":"javascript","path":"/tag/javascript/"}],"desc":"Lựa chọn cách viết nào cho phù hợp theo tính huống đang cần là cái chúng ta sẽ có được câu trả lời khi đi qua 5 điểm khác biệt này","content":"<!-- TOC -->\n<ul>\n<li><a href=\"#1-gi%C3%A1-tr%E1%BB%8B-c%E1%BB%A7a-this\">1. giá trị của <code class=\"language-text\">this</code></a></li>\n<li><a href=\"#2-constructor\">2. Constructor</a></li>\n<li><a href=\"#3-object-arguments\">3. Object <code class=\"language-text\">arguments</code></a></li>\n<li><a href=\"#4-ng%E1%BA%A7m-%C4%91%E1%BB%8Bnh-c%C3%B3-return\">4. Ngầm định có <code class=\"language-text\">return</code></a></li>\n<li><a href=\"#5-ph%C6%B0%C6%A1ng-th%E1%BB%A9c\">5. Phương thức</a></li>\n</ul>\n<!-- /TOC -->\n<p>Function <em>thường</em> là những function được khai báo ở 2 dạng sau</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">hello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword control-flow\">return</span> <span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">hello</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword control-flow\">return</span> <span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Còn arrow function là dạng chắc ai cũng biết</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">hello</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword control-flow\">return</span> <span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre>\n<h2 id=\"1-giá-trị-của-this\"><a href=\"#1-gi%C3%A1-tr%E1%BB%8B-c%E1%BB%A7a-this\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>1. giá trị của <code class=\"language-text\">this</code></h2>\n<p>Với function thường giá trị của <code class=\"language-text\">this</code> khá <em>khó lường</em>, tùy thuộc thời điểm chúng ta gọi nó. Như tình huống sau, nếu không có strict mode, thì giá trị nó là global object (window), còn có strict mode nó sẽ là <code class=\"language-text\">undefined</code></p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// => global object (window)</span></code></pre>\n<p>Giá trị nó sẽ tùy thuộc vào <strong>ngữ cảnh</strong>, như trong trường hợp này, nó chính là object <em>chính chủ</em> của phương thức</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> myObject <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">method</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nmyObject<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">method</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// => \"myObject\"</span></code></pre>\n<p>Với arrow function, <code class=\"language-text\">this</code> sẽ luôn bằng với giá trị của function ở ngoài, arrow function không khai báo thêm vùng <em>tự trị</em> riêng (execution context), mà dùng chung với thằng cha</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> myObject <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">myMethod</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">items</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"myObject\"</span>\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">callback</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"myObject\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    items<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">forEach</span><span class=\"token punctuation\">(</span>callback<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nmyObject<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">myMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Đây là một đặc tính giúp chúng ta không còn dùng đến <code class=\"language-text\">self = this</code> hay <code class=\"language-text\">callback.bind(this)</code></p>\n<h2 id=\"2-constructor\"><a href=\"#2-constructor\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>2. Constructor</h2>\n<p>Để khởi tạo một object với function bình thường</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\"><span class=\"token maybe-class-name\">Car</span></span><span class=\"token punctuation\">(</span><span class=\"token parameter\">color</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">color</span> <span class=\"token operator\">=</span> color<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> redCar <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Car</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"red\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nredCar <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Car</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// => true</span></code></pre>\n<p>Cũng không có <em>vùng tự trị</em> riêng, nên arrow function không thể dùng như một constructor</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\"><span class=\"token maybe-class-name\">Car</span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">color</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">color</span> <span class=\"token operator\">=</span> color<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> redCar <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Car</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"red\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// => TypeError: Car is not a constructor</span></code></pre>\n<h2 id=\"3-object-arguments\"><a href=\"#3-object-arguments\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>3. Object <code class=\"language-text\">arguments</code></h2>\n<p>Bên trong một function thông thường sẽ được <em>nhét</em> thêm một object <em>đặc biệt</em> <code class=\"language-text\">arguments</code>, chứa toàn bộ tham số truyền vào cho function đó</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// => { 0: 'a', 1: 'b'}</span></code></pre>\n<p>Arrow function sẽ không có object này, và nếu bạn đặt nó vào trong một function bình thường, thì lúc đó giá trị <code class=\"language-text\">arguments</code> này sẽ của thằng bọc ngoài</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">myRegularFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">myArrowFunction</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">myArrowFunction</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"d\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">myRegularFunction</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// => { 0: 'a', 1: 'b' }</span></code></pre>\n<h2 id=\"4-ngầm-định-có-return\"><a href=\"#4-ng%E1%BA%A7m-%C4%91%E1%BB%8Bnh-c%C3%B3-return\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>4. Ngầm định có <code class=\"language-text\">return</code></h2>\n<p>Với function thông thường, chúng ta phải rất <em>rõ ràng</em> là <code class=\"language-text\">return</code> về cái gì</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword control-flow\">return</span> <span class=\"token number\">42</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// => 42</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">myEmptyFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token number\">42</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">myEmptyFunction2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token number\">42</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword control-flow\">return</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">myEmptyFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// => undefined</span>\n<span class=\"token function\">myEmptyFunction2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// => undefined</span></code></pre>\n<p>Với arrow function nó có hơi đặc biệt, nếu chỉ có một <em>expression</em>, bỏ qua dấu ngoặc đơn luôn, thì giá trị của <em>expression</em> sẽ được return</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">increment</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">num</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> num <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">increment</span><span class=\"token punctuation\">(</span><span class=\"token number\">41</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// => 42</span></code></pre>\n<h2 id=\"5-phương-thức\"><a href=\"#5-ph%C6%B0%C6%A1ng-th%E1%BB%A9c\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>5. Phương thức</h2>\n<p>Các function thông thường sẽ là lựa chọn hàng đầu khi viết phương thức cho <code class=\"language-text\">class</code></p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Hero</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">heroName</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">heroName</span> <span class=\"token operator\">=</span> heroName<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">logName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">heroName</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> batman <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Hero</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Batman\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Nhưng khi bạn không muốn thay đổi giá trị của <code class=\"language-text\">this</code>, arrow function sẽ là lựa chọn hợp lý hơn</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Hero</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">heroName</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">heroName</span> <span class=\"token operator\">=</span> heroName<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function-variable function\">logName</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">heroName</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> batman <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Hero</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Batman\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p><a href=\"https://dmitripavlutin.com/differences-between-arrow-and-regular-functions/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://dmitripavlutin.com/differences-between-arrow-and-regular-functions/</a></p>\n","cover_image":"","related":[{"id":"5392f292106070559f38f68ef156425e","path":"/su-khac-nhau-giua-npm-va-npx/","title":"Sự khác nhau giữa npm và npx?","desc":"Bài viết này sẽ giải thích ngắn gọn nhất có thể sự khác nhau về mục đích của 2 thằng này"},{"id":"ab67ae8850336939a2af1f93578fa95c","path":"/phan-biet-su-khac-nhau-giua-await-return-return-await/","title":"Phân biệt sự khác nhau giữa await-return-return await","desc":"Nắm rõ async không bao giờ là một kiến thức thừa."},{"id":"596a942891a971c827be75655f6b0ffa","path":"/5-kinh-nghiem-khi-viet-arrow-function/","title":"5 kinh nghiệm khi viết arrow function","desc":"Sử dụng arrow function đã quá phổ biến, ai cũng biết nó là gì, không cần một bài giới thiệu vài dòng nữa, bài viết này chia sẻ 5 kinh nghiệm để bạn làm việc với arrow function thêm mượt mà"},{"id":"6b73c7a8d9c5332b2e0a6315fcbcb943","path":"/hoi-2-e-s6-can-ban-arrow-function/","title":"Hồi 2: ES6 căn bản - Arrow Function","desc":"Hồi 2 trong series ES6 căn bản, nói về Arrow Function"}]}},"context":{}}