{"hash":"bb9d7e5a46c25f220b2fd3c7f9d26cdf170dba2b","data":{"post":{"title":"10 câu hỏi javascript để nâng cao trình độ","path":"/10-cau-hoi-javascript-de-nang-cao-trinh-do/","date":"2020-06-18","timeToRead":4,"tags":[{"id":"javascript","title":"javascript","path":"/tag/javascript/"}],"desc":"Cùng ôn luyện kiến thức javascript bằng 10 câu hỏi lắc léo","content":"<!-- TOC -->\n<ul>\n<li><a href=\"#1-so-s%C3%A1nh-sort-c%E1%BB%A7a-array\">1. So sánh sort của Array</a></li>\n<li><a href=\"#2-set-c%E1%BB%A7a-c%C3%A1c-object\">2. Set của các Object</a></li>\n<li><a href=\"#3-mutate-m%E1%BB%99t-object\">3. Mutate một object</a></li>\n<li><a href=\"#4-prototype-inheritance\">4. prototype inheritance</a></li>\n<li><a href=\"#5-th%E1%BB%A9-t%E1%BB%B1-resolve-promiseall\">5. Thứ tự resolve Promise.all</a></li>\n<li><a href=\"#6-t%C3%ADnh-to%C3%A1n-v%E1%BB%9Bi-reduce\">6. Tính toán với reduce</a></li>\n<li><a href=\"#7-%C4%91i%E1%BB%81u-ki%E1%BB%87n-r%C3%BAt-r%E1%BB%8Dn-short-circuit\">7. Điều kiện rút rọn (short-circuit)</a></li>\n<li><a href=\"#8-spread-v%C3%A0-rename\">8. Spread và Rename</a></li>\n<li><a href=\"#9-binding-cho-ph%C6%B0%C6%A1ng-th%E1%BB%A9c-array\">9. Binding cho phương thức array</a></li>\n<li><a href=\"#10-%C4%91%E1%BA%B7t-unique-v%C3%A0-s%E1%BA%AFp-x%E1%BA%BFp\">10. Đặt unique và sắp xếp</a></li>\n</ul>\n<!-- /TOC -->\n<h2 id=\"1-so-sánh-sort-của-array\"><a href=\"#1-so-s%C3%A1nh-sort-c%E1%BB%A7a-array\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>1. So sánh sort của Array</h2>\n<p>Giá trị log ra là gì</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> arr1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> arr2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>\n    arr1<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> arr1\n    arr2<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> arr2\n    arr1<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> arr2<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Trước tiên chúng ta cần biết hàm sort nó làm cái gì, nó sắp xếp lại các phần tử, <em>hiển nhiên</em>, sau đó trả về cho tham chiếu ban đầu, không thay đổi tham chiếu gốc.</p>\n<p>Đáp án: <strong>true, true, false</strong></p>\n<h2 id=\"2-set-của-các-object\"><a href=\"#2-set-c%E1%BB%A7a-c%C3%A1c-object\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>2. Set của các Object</h2>\n<p>Nếu có một <code class=\"language-text\">Set</code> bao gồm các object sau, giá trị log ra là gì</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> mySet <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> a<span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> a<span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token spread operator\">...</span>mySet<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Khi tạo một object <code class=\"language-text\">Set</code> nó sẽ xóa các giá trị trùng nhau, tuy nhiên <code class=\"language-text\">{ a: 1} # { a: 1}</code>, dù là giá trị trùng nhau, nhưng nó vẫn tham chiếu khác nhau. Chỉ khi chúng ta viết như bên dưới nó mới tự xóa giá trị trùng</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> a<span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">Set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>obj<span class=\"token punctuation\">,</span> obj<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Đáp án <strong><code class=\"language-text\">[{a: 1}, {a: 1}]</code></strong></p>\n<h2 id=\"3-mutate-một-object\"><a href=\"#3-mutate-m%E1%BB%99t-object\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>3. Mutate một object</h2>\n<p>Với đoạn code sau, kết quả log ra sẽ được gì</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">\"Joe\"</span><span class=\"token punctuation\">,</span>\n  age<span class=\"token operator\">:</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span>\n  pet<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    type<span class=\"token operator\">:</span> <span class=\"token string\">\"dog\"</span><span class=\"token punctuation\">,</span>\n    name<span class=\"token operator\">:</span> <span class=\"token string\">\"kitty kitty\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token known-class-name class-name\">Object</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">freeze</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nuser<span class=\"token punctuation\">.</span><span class=\"token property-access\">pet</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">name</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"meo meo\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span><span class=\"token property-access\">pet</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">name</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p><code class=\"language-text\">Object.freeze</code> chỉ thực hiện freeze level 1 của object, nếu có mutate những level thấp hơn, vẫn được như thường.</p>\n<p>Đáp án: <strong>meo meo</strong></p>\n<h2 id=\"4-prototype-inheritance\"><a href=\"#4-prototype-inheritance\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>4. prototype inheritance</h2>\n<p>Chúng ta có một constructor function <code class=\"language-text\">Dog</code>. Giá trị log sẽ là gì</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\"><span class=\"token maybe-class-name\">Dog</span></span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">name</span> <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token method-variable function-variable method function property-access\">speak</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">\"woof\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> dog <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Dog</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Pogo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token class-name\">Dog</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">prototype</span><span class=\"token punctuation\">.</span><span class=\"token method-variable function-variable method function property-access\">speak</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token string\">\"chihuahua\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>dog<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">speak</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Khi chúng ta <code class=\"language-text\">new Dog</code>, chúng ta đã gán giá trị cho <code class=\"language-text\">speak</code> là một function trả về <code class=\"language-text\">woof</code>. Phương thức <code class=\"language-text\">speak</code> bên dưới sẽ không bao giờ được gọi.</p>\n<p>Đáp án: <strong>woof</strong></p>\n<h2 id=\"5-thứ-tự-resolve-promiseall\"><a href=\"#5-th%E1%BB%A9-t%E1%BB%B1-resolve-promiseall\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>5. Thứ tự resolve Promise.all</h2>\n<p>Chúng ta có một hàm <code class=\"language-text\">timer</code> trả về một <code class=\"language-text\">Promise</code> sẽ được resolve sau một khoảng thời gian ngẫu nhiên. Chúng ta dùng <code class=\"language-text\">Promise.all</code> để resolve toàn bộ array <code class=\"language-text\">timer</code>. Giá trị log ra là gì, hay là giá trị ngẫu nhiên?</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">timer</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">a</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span>\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">res</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token known-class-name class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> all <span class=\"token operator\">=</span> <span class=\"token known-class-name class-name\">Promise</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token function\">timer</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"first\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">timer</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"second\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span>\n  <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Thứ tự resolve không quan trọng với <code class=\"language-text\">Promise.all</code>, chúng ta có thể hoàn toàn tin tưởng thứ tự trả về sẽ đúng với thứ tự chúng ta khai báo.</p>\n<p>Đáp án: <strong>first, second</strong></p>\n<h2 id=\"6-tính-toán-với-reduce\"><a href=\"#6-t%C3%ADnh-to%C3%A1n-v%E1%BB%9Bi-reduce\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>6. Tính toán với reduce</h2>\n<p>Giá trị log ra sẽ là?</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> x <span class=\"token operator\">*</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> x <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> x <span class=\"token operator\">*</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> x <span class=\"token operator\">*</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">agg<span class=\"token punctuation\">,</span> el</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> agg <span class=\"token operator\">+</span> <span class=\"token function\">el</span><span class=\"token punctuation\">(</span>agg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Với <code class=\"language-text\">Array.reduce</code> được truyền vào giá trị khởi tạo là 1 (cho biến <code class=\"language-text\">agg</code>), chúng ta loop qua các hàm trong mảng theo thứ tự</p>\n<pre class=\"language-text\"><code class=\"language-text\">1 + 1 * 1 = 2\n2 + 2 * 2 = 6\n6 + 6 * 3 = 24\n24 + 24 * 4 = 120</code></pre>\n<p>Đáp án: <strong>120</strong></p>\n<h2 id=\"7-điều-kiện-rút-rọn-short-circuit\"><a href=\"#7-%C4%91i%E1%BB%81u-ki%E1%BB%87n-r%C3%BAt-r%E1%BB%8Dn-short-circuit\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>7. Điều kiện rút rọn (short-circuit)</h2>\n<p>Kết quả log ra là...</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> notifications <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>\n  <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">You have </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>notifications<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> notifications</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>notifications <span class=\"token operator\">!==</span> <span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">\"s\"</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Cầu điều kiện rút gọn <code class=\"language-text\">notifications !== 1 &amp;&amp; &#39;s&#39;</code> sẽ return <code class=\"language-text\">false</code> (dạng chuỗi). Chúng ta phải viết là <code class=\"language-text\">notifications !== 1 ? &#39;&#39; : &#39;s&#39;</code></p>\n<p>Đáp án: <strong>You have 1 notificationfalse</strong></p>\n<h2 id=\"8-spread-và-rename\"><a href=\"#8-spread-v%C3%A0-rename\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>8. Spread và Rename</h2>\n<p>Chuyện gì xảy ra khi chúng ta spread mảng ra và thay đổi giá trị của object đầu tiên</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> arr1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> firstName<span class=\"token operator\">:</span> <span class=\"token string\">\"luckyluu\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> arr2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token spread operator\">...</span>arr1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\narr2<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">firstName</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"vuilaptrinh\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>arr1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Spread chỉ tạo một shallow copy, nghĩa là object bên trong mảng ban đầu cũng chỉ tham chiếu đến <code class=\"language-text\">arr1</code>, nên thay đổi giá trị này từ <code class=\"language-text\">arr2</code> sẽ ảnh hưởng đến <code class=\"language-text\">arr1</code></p>\n<p>Đáp án: <strong>vuilaptrinh</strong></p>\n<h2 id=\"9-binding-cho-phương-thức-array\"><a href=\"#9-binding-cho-ph%C6%B0%C6%A1ng-th%E1%BB%A9c-array\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>9. Binding cho phương thức array</h2>\n<p>Kết quả log ra là gì</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> map <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"c\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">map</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">bind</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">el</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>el<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Khi gọi <code class=\"language-text\">[&#39;a&#39;,&#39;b&#39;,&#39;c&#39;].map</code> nó sẽ gọi <code class=\"language-text\">Array.prototype.map</code> với giá trị <code class=\"language-text\">this</code> là <code class=\"language-text\">[&#39;a&#39;,&#39;b&#39;,&#39;c&#39;]</code>. Tuy nhiên khi sử dụng như một <strong>tham chiếu</strong>, thay vì gọi, nó trỏ đến <code class=\"language-text\">Array.prototype.map</code>, <code class=\"language-text\">bind</code> sẽ đặt giá trị <code class=\"language-text\">this</code> này thành <code class=\"language-text\">[1,2,3]</code></p>\n<p>Đáp án: <strong>1 2 3</strong></p>\n<h2 id=\"10-đặt-unique-và-sắp-xếp\"><a href=\"#10-%C4%91%E1%BA%B7t-unique-v%C3%A0-s%E1%BA%AFp-x%E1%BA%BFp\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>10. Đặt unique và sắp xếp</h2>\n<p>Trong code ở dưới chúng ta dùng object <code class=\"language-text\">Set</code> và spread để tạo một mảng mới. Giá trị log ra là gì ( những phần tử có bị force thành unique? chúng có được sắp xếp không?)</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token spread operator\">...</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">.</span><span class=\"token property-access\">length</span><span class=\"token punctuation\">,</span> arr<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p><code class=\"language-text\">Set</code> sẽ force các phần tử thành unique, trung nhau sẽ bị bỏ qua, nhưng không thay đổi thứ tự. <code class=\"language-text\">arr</code> sẽ có giá trị <code class=\"language-text\">[3, 1, 2, 4]</code></p>\n<p>Đáp án: <strong>4 2</strong></p>\n<p><a href=\"https://dev.to/nas5w/10-javascript-quiz-questions-and-answers-to-sharpen-your-skills-255m\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">10 JavaScript Quiz Questions and Answers to Sharpen Your Skills</a></p>\n","cover_image":""}},"context":{}}