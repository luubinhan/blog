{"hash":"07b5001d3b2d2df5ce1b9bbd1a099b0760e8b129","data":{"post":{"title":"Đo thời gian render bằng Chrome","path":"/2018-10-23-huong-dan-do-toc-do-website-bang-chrome/","date":"2018-10-23","timeToRead":1,"tags":[{"id":"chrome","title":"chrome","path":"/tag/chrome/"},{"id":"performance","title":"performance","path":"/tag/performance/"}],"desc":"Bàn luận kỹ thuật để đo chính xác thời gian render","content":"<p>Để thực hành bài này, bạn có thể sử dụng <a href=\"https://github.com/nolanlawson/measure-style-and-layout\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">source code có sẵn</a> này</p>\n<p>Trên tab Performance của DevTools chúng ta có</p>\n<p><img src=\"https://github.com/nolanlawson/measure-style-and-layout\" alt=\"Đo thời gian render bằng Chrome\"></p>\n<p>Đây là giá trị CPU đã tiêu tốn để render component, theo đơn vị là mili giây. Nó sẽ được thực hiện 4 bước</p>\n<ul>\n<li>Thực thi javascript</li>\n<li>Apply các format bằng CSS</li>\n<li>Tính layout, trình duyệt tiếp tục tính toán để \"đặt\" các element trên màn hình ở chỗ nào</li>\n<li>Render được thực hiện trên một <a href=\"https://blogs.windows.com/msedgedev/2017/08/17/making-web-smoother-independent-rendering/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">thread riêng</a></li>\n</ul>\n<p>Đa phần mọi người sẽ bỏ qua các bước 2, 3, 4 khi đo, chỉ tính toán thời gian thực thi javascript</p>\n<p><img src=\"https://nolanwlawson.files.wordpress.com/2018/09/screenshot-2018-09-22-11-45-56-3-copy.png?w=570&#x26;h=254\" alt=\"Đo thời gian render bằng Chrome\"></p>\n<p>Bước render rất khó có thể đo được chính xác, nó được thực hiện trên threat riêng và dùng GPU</p>\n<p>Phần style và layout thì có thể đo chính xác hơn vì nó block lại main thread</p>\n<h1 id=\"đo-gì\"><a href=\"#%C4%91o-g%C3%AC\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Đo gì?</h1>\n<p>Chúng ta sẽ <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Performance/mark\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">đánh dấu</a> từ khi javascript bắt đầu chạy, đến hết phần render</p>\n<p>Sử dụng <code class=\"language-text\">requestAnimationFrame</code> là chính, nó được gọi trước quá trình style và layout, nhưng thực tế trước Edge v18 và một số bản Safari thì không đúng, nên cũng có thể có chút sai xót</p>\n<p><img src=\"https://nolanwlawson.files.wordpress.com/2018/09/screenshot-2018-09-22-11-45-56-3.png?w=570&#x26;h=254\" alt=\"Đo thời gian render bằng Chrome\"></p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token dom variable\">performance</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">mark</span><span class=\"token punctuation\">(</span><span class=\"token string\">'end'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre>\n<p>Phần code trong <code class=\"language-text\">setTimeOut</code> được gọi ngay sau bước paint</p>\n<p><img src=\"https://nolanwlawson.files.wordpress.com/2018/09/screenshot-2018-09-22-12-15-07.png?w=570&#x26;h=343\" alt=\"Đo thời gian render bằng Chrome\"></p>\n<p><img src=\"https://i.imgur.com/Pwa9tV8.png\" alt=\"Đo thời gian render bằng Chrome\"></p>\n<h1 id=\"một-số-vấn-đề\"><a href=\"#m%E1%BB%99t-s%E1%BB%91-v%E1%BA%A5n-%C4%91%E1%BB%81\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Một số vấn đề</h1>\n<ul>\n<li><code class=\"language-text\">setTimeOut</code> đôi khi có sai lệch tầm 4ms trên một số trình duyệt</li>\n<li>Nếu có một <code class=\"language-text\">setTimeOut</code> callback khác trong code, có thể không còn đúng</li>\n<li>Sau này khi các trình duyệt đã hỗ trợ cách tốt hơn thì setTimeOut kiểu này là dư thừa</li>\n</ul>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://nolanlawson.com/2018/09/25/accurately-measuring-layout-on-the-web/\">Accurately measuring layout on the web</a></p>\n","cover_image":"","related":[{"id":"fd424fd11beb495e0ab4ba9b9cd9d7b8","path":"/2018-03-28-huong-dan-mot-vai-tip-su-dung-chrome-dev-tools/","title":"Một vài tip sử dụng Chrome Dev Tools","desc":"Chrome DevTools càng ngày càng mạnh mấy bạn, bạn nào làm frontend cũng phải biết xài, một vài tip cóp nhặt có thể bạn chưa biết"},{"id":"3468f54867fa0926e25df8a607bbfd7e","path":"/2020-08-19-tim-hieu-cac-thuat-toan-sap-xep-va-hien-thuc-bang-javascript/","title":"Các thuật toán sắp xếp phổ biến và JavaScript","desc":"Chúng ta sẽ điểm qua các thuật toán sắp xếp phổ biến được học trong trường và hiện thực nó bằng JavaScript"},{"id":"1e87499ea6ebb8b16acfd36afb69a738","path":"/2018-11-16-cau-dieu-kien-trong-javascript-phan-nang-cao/","title":"Câu điều kiện trong javascript","desc":"Nắm vững conditional expression trong javascript để viết code sạch sẽ hơn"}]}},"context":{}}