{"hash":"7044f7fad267d6cd2ca838488bf21d29cb9e70de","data":{"post":{"title":"9 câu hỏi lắc léo về Promise","path":"/9-cau-hoi-lac-leo-ve-promise/","slug":"/2019-12-23-9-cau-hoi-ve-promise","date":"2019-12-23","timeToRead":3,"tags":[{"id":"react","title":"react","path":"/tag/react/"}],"desc":"Vài câu hỏi Promise, ôn tập kiến thức cho bạn cần đi phỏng vấn","content":"<h2 id=\"1\"><a href=\"#1\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>1</h2>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> p <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">reject</span><span class=\"token punctuation\">(</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'The Fails!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\np<span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\np<span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Kết quả output</p>\n<ol>\n<li>Kết quả lỗi log ra 1 lần</li>\n<li>Kết quả lỗi log ra 2 lần</li>\n<li>UnhandledPromiseRejectionWarning</li>\n</ol>\n<p><code class=\"language-inline-text\">.catch</code> sẽ làm việc giống như <code class=\"language-inline-text\">.addEventListener(event, callback)</code> hay Event Emitter <code class=\"language-inline-text\">.on(event, callback)</code>. Có thể add thêm bao nhiêu tùy thích, nó sẽ chạy tất cả các callback đã đăng ký</p>\n<p>✅ <em>Đáp án</em></p>\n<ol start=\"2\">\n<li>Kết quả lỗi log ra 2 lần</li>\n</ol>\n<h2 id=\"2\"><a href=\"#2\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>2</h2>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> p <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">reject</span><span class=\"token punctuation\">(</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'The Fails!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\np<span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\np<span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ol>\n<li>Kết quả lỗi log ra 1 lần</li>\n<li>Kết quả lỗi log ra 2 lần</li>\n<li>UnhandledPromiseRejectionWarning</li>\n</ol>\n<p><img src=\"https://danlevy.net/static/question-2-308cbd4ad650e288821fd681a0e745b4-e8b1e.png\"></p>\n<p>Khi khởi tạo một Promise, chúng ta phải gọi một trong hai callback <code class=\"language-inline-text\">resolve()</code> hoặc <code class=\"language-inline-text\">reject()</code>. Nó ko <code class=\"language-inline-text\">return</code> giá trị. Không thể dùng <code class=\"language-inline-text\">Promise.reject()</code> như ở trên.</p>\n<p>✅ <em>Đáp án</em></p>\n<ol start=\"3\">\n<li>UnhandledPromiseRejectionWarning</li>\n</ol>\n<h2 id=\"3\"><a href=\"#3\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>3</h2>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> p <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">reject</span><span class=\"token punctuation\">(</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'The Fails!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Kết quả</p>\n<ol>\n<li>In ra lỗi và <code class=\"language-inline-text\">undefined</code></li>\n<li>in ra lỗi 2 lần</li>\n<li>UnhandledPromiseRejectionWarning</li>\n<li>undefined</li>\n</ol>\n<p><img src=\"https://danlevy.net/static/question-3-a5d5c8df7eb262f3bccc7a5319f53ec2-e8b1e.png\" alt=\"annotated-code/question-3.png\"></p>\n<p>Gợi ý thứ nhất <code class=\"language-inline-text\">console.log()</code> luôn trả về <code class=\"language-inline-text\">undefined</code>. Thứ 2, khi đặt <code class=\"language-inline-text\">.catch</code> trước <code class=\"language-inline-text\">.then</code> như thế, nó sẽ không nhận được giá trị từ hàm trước đó, mọi thứ đã dừng lại ở <code class=\"language-inline-text\">catch</code>.</p>\n<p>✅ <em>Đáp án</em></p>\n<ol>\n<li>In ra lỗi và <code class=\"language-inline-text\">undefined</code></li>\n</ol>\n<h2 id=\"4\"><a href=\"#4\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>4</h2>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> p <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">reject</span><span class=\"token punctuation\">(</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'The Fails!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ol>\n<li>In ra lỗi một lần</li>\n<li>In ra lỗi 2 lần</li>\n<li>UnhandledPromiseRejectionWarning</li>\n</ol>\n<p>Giải thích như trên, câu <code class=\"language-inline-text\">catch</code> thứ 2 không được gọi đến, điều đặc biệt là bạn có thể đặt <code class=\"language-inline-text\">.then</code> ở phía sau <code class=\"language-inline-text\">catch</code> nhưng không thể đặt <code class=\"language-inline-text\">catch</code> sau <code class=\"language-inline-text\">catch</code>.</p>\n<p>✅ <em>Đáp án</em></p>\n<ol>\n<li>In ra lỗi một lần</li>\n</ol>\n<h2 id=\"5\"><a href=\"#5\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>5</h2>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Success!'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">throw</span> <span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Oh noes!'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">\"actually, that worked\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ol>\n<li>In lỗi 1 lần</li>\n<li>In lỗi 2 lần</li>\n<li>UnhandledPromiseRejectionWarning</li>\n<li>Ko in gì cả</li>\n</ol>\n<p><code class=\"language-inline-text\">catch</code> có thể được sử dụng để bỏ qua hoặc ghi đè lên giá trị lỗi bằng cách cho <code class=\"language-inline-text\">return</code> một giá trị. Trò này <strong>chỉ làm được khi trước đó <code class=\"language-inline-text\">then</code> có trả về giá trị</strong>.</p>\n<p>✅ <em>Đáp án</em></p>\n<ol start=\"4\">\n<li>Ko in gì cả</li>\n</ol>\n<h2 id=\"6\"><a href=\"#6\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>6</h2>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">Promise<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Success!'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> data<span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ol>\n<li>In ra \"Success!\" và \"SUCCESS!\"</li>\n<li>In ra \"Success!\"</li>\n<li>In ra \"SUCCESS!\"</li>\n<li>Không in ra gì cả</li>\n</ol>\n<p><code class=\"language-inline-text\">.then</code> sẽ truyền dữ liệu theo thứ tự đã viết, khi <code class=\"language-inline-text\">return</code> giá trị, hàm <code class=\"language-inline-text\">then</code> tiếp theo sẽ nhận giá trị <code class=\"language-inline-text\">return</code> này.</p>\n<p>✅ <em>Đáp án</em></p>\n<ol start=\"3\">\n<li>In ra \"SUCCESS!\"</li>\n</ol>\n<h2 id=\"7\"><a href=\"#7\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>7</h2>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">Promise<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Success!'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> data<span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> data\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>console<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">)</span></code></pre></div>\n<ol>\n<li>In ra \"SUCCESS!\"</li>\n<li>In ra \"Success!\"</li>\n<li>In ra \"SUCCESS!\" và \"SUCCESS!\"</li>\n<li>Không in ra gì cả</li>\n</ol>\n<p>Giải thích tương tự như trên.</p>\n<p>✅ <em>Đáp án</em></p>\n<ol start=\"3\">\n<li>In ra \"SUCCESS!\" và \"SUCCESS!\"</li>\n</ol>\n<h2 id=\"8\"><a href=\"#8\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>8</h2>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">Promise<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Success!'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    data<span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ol>\n<li>In ra \"SUCCESS!\"</li>\n<li>In ra \"Success!\"</li>\n<li>In ra \"SUCCESS!\" và \"SUCCESS!\"</li>\n<li>In ra \"undefined\"</li>\n</ol>\n<p>Nếu muốn truyền giá trị xuống <code class=\"language-inline-text\">.then</code> bên dưới, trước đó phải <code class=\"language-inline-text\">return</code>.</p>\n<p>✅ <em>Đáp án</em></p>\n<ol start=\"4\">\n<li>In ra \"undefined\"</li>\n</ol>\n<h2 id=\"9\"><a href=\"#9\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>9</h2>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">Promise<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Success!'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">throw</span> <span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Oh noes!'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'actually, that worked'</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">throw</span> <span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'The fails!'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ol>\n<li>In ra \"Oh noes!\" và \"The fails!\"</li>\n<li>In ra \"Oh noes!\"</li>\n<li>In ra \"The fails!\"</li>\n<li>In ra  \"actually, that worked\"</li>\n<li>Không in ra gì cả</li>\n</ol>\n<p>Tổng hợp những kiến thức ở trên, hy vọng bạn trả lời đúng câu này.  Ở <code class=\"language-inline-text\">then</code> đầu tiên, chúng ta throw một error, <code class=\"language-inline-text\">catch</code> tiếp theo chúng ta <code class=\"language-inline-text\">return</code> coi như bỏ qua error này, <code class=\"language-inline-text\">then</code> thứ 2, nhận data nhưng chúng ta ko làm gì với nó cả, mà throw một error khác, catch cuối cùng sẽ là giá trị error vừa throw ở trên.</p>\n<p>✅ <em>Đáp án</em></p>\n<ol start=\"3\">\n<li>In ra \"The fails!\"</li>\n</ol>\n<p><a href=\"https://danlevy.net/javascript-promises-quiz/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://danlevy.net/javascript-promises-quiz/</a></p>\n","cover_image":"","related":[{"id":"100640c49411b1ebfd3f20a0be2cdb53","path":"/7-cau-hoi-phong-van-lac-leo-voi-javascript/","title":"7 Câu hỏi phỏng vấn lắc léo với Javascript","desc":"Thử kiến thức javascript của bạn đã đủ cho cuộc phỏng vấn cam go sắp tới chưa"},{"id":"5056f121bf99a2d9c1b987942c928592","path":"/5-cau-hoi-javascript-va-cach-danh-bai-chung/","title":"5 câu hỏi javascript và cách đánh bại chúng","desc":"Mỗi công ty mỗi kiểu phỏng vấn, điều hay bị phàn nàn trong các buổi phỏng vấn là phần lớn nó không liên quan tới những công việc hằng ngày mà vị trí đó đòi hỏi."},{"id":"d1bfc3e5e4598b7902ec8f15e0fb3f4a","path":"/10-cau-hoi-javascript-de-nang-cao-trinh-do/","title":"10 câu hỏi javascript để nâng cao trình độ","desc":"Cùng ôn luyện kiến thức javascript bằng 10 câu hỏi lắc léo"},{"id":"c288e21d08d57a4cc39d7265faf2e95f","path":"/iife-trong-javascript-la-cai-gi-vai/","title":"IIFE trong javascript là cái gì vại","desc":"Giới thiệu về Íp-Phi trong javascript, tuy không còn dùng nhiều nữa, nhưng vẫn là một kiến thức tốt cần biết"}]}},"context":{}}