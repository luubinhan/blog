{"hash":"5d40f4d8ed43f512e4021e3d8491c32126632fe7","data":{"post":{"title":"Giới thiệu RxJS và Redux Observer","path":"/2018-07-18-huong-dan-gioi-thieu-ve-redux-observer/","slug":"/2018-07-18-huong-dan-gioi-thieu-ve-redux-observer","date":"2018-07-18","timeToRead":3,"tags":[{"id":"react","title":"react","path":"/tag/react/"},{"id":"javascript","title":"javascript","path":"/tag/javascript/"}],"desc":"Một middleware mạnh hơn redux-thunk, ít phức tạp hơn redux-saga. Chúng ta sẽ điểm qua những khái niệm chính để bắt đầu với middleware này","content":"<!-- TOC -->\n<ul>\n<li><a href=\"#nh%E1%BB%AFng-kh%C3%A1i-ni%E1%BB%87m-ch%C3%ADnh-c%E1%BA%A7n-hi%E1%BB%83u-khi-l%C3%A0m-vi%E1%BB%87c-v%E1%BB%9Bi-rxjs\">Những khái niệm chính cần hiểu khi làm việc với RxJS</a></li>\n<li>\n<p><a href=\"#kh%E1%BB%9Fi-t%E1%BA%A1o-observable\">Khởi tạo <code class=\"language-inline-text\">Observable</code></a></p>\n<ul>\n<li><a href=\"#m%E1%BB%99t-ho%E1%BA%B7c-nhi%E1%BB%81u-gi%C3%A1-tr%E1%BB%8B\">một hoặc nhiều giá trị</a></li>\n<li><a href=\"#t%E1%BB%AB-m%E1%BB%99t-s%E1%BB%B1-ki%E1%BB%87n\">Từ một sự kiện</a></li>\n<li><a href=\"#t%E1%BB%AB-m%E1%BB%99t-promise\">Từ một promise</a></li>\n</ul>\n</li>\n<li><a href=\"#mergemap--alias-l%C3%A0-flatmap\">mergeMap ( alias là flatMap)</a></li>\n<li><a href=\"#redux-observable\">Redux-Observable</a></li>\n</ul>\n<!-- /TOC -->\n<h2 id=\"những-khái-niệm-chính-cần-hiểu-khi-làm-việc-với-rxjs\"><a href=\"#nh%E1%BB%AFng-kh%C3%A1i-ni%E1%BB%87m-ch%C3%ADnh-c%E1%BA%A7n-hi%E1%BB%83u-khi-l%C3%A0m-vi%E1%BB%87c-v%E1%BB%9Bi-rxjs\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Những khái niệm chính cần hiểu khi làm việc với RxJS</h2>\n<ul>\n<li><strong>Observable</strong> một interface sẽ lắng nghe những notification trong <em>một khoản thời gian</em> và push cho những interface khác sẽ làm gì đó khi có notification này.</li>\n<li><strong>Subscription</strong> Khi <em>observable</em> bắt đầu được thực thi, ví dụ như lắng nghe sự kiện, và push</li>\n<li><strong>Observer</strong> một interface sẽ làm gì đó với data được push từ <em>observable</em></li>\n<li><strong>Operators</strong> các phương thức được sử dụng để tương tác với output của <em>Observable</em></li>\n</ul>\n<p>Ví dụ đăng ký listen lên một sự kiện nào đó</p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> button <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nbutton<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Clicked'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Trong RxJS chúng ta viết như sau</p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> button <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nRx<span class=\"token punctuation\">.</span>Observable<span class=\"token punctuation\">.</span><span class=\"token function\">fromEvent</span><span class=\"token punctuation\">(</span>button<span class=\"token punctuation\">,</span> <span class=\"token string\">'click'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Clicked!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"khởi-tạo-observable\"><a href=\"#kh%E1%BB%9Fi-t%E1%BA%A1o-observable\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Khởi tạo <code class=\"language-inline-text\">Observable</code></h2>\n<p>Chúng ta có thể tạo observable bằng cách convert từ</p>\n<h3 id=\"một-hoặc-nhiều-giá-trị\"><a href=\"#m%E1%BB%99t-ho%E1%BA%B7c-nhi%E1%BB%81u-gi%C3%A1-tr%E1%BB%8B\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>một hoặc nhiều giá trị</h3>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">Rx<span class=\"token punctuation\">.</span>Observable<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"từ-một-sự-kiện\"><a href=\"#t%E1%BB%AB-m%E1%BB%99t-s%E1%BB%B1-ki%E1%BB%87n\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Từ một sự kiện</h3>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">Rx<span class=\"token punctuation\">.</span>Observable<span class=\"token punctuation\">.</span><span class=\"token function\">fromEvent</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'click'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"từ-một-promise\"><a href=\"#t%E1%BB%AB-m%E1%BB%99t-promise\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Từ một promise</h3>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">Rx<span class=\"token punctuation\">.</span>Observable<span class=\"token punctuation\">.</span><span class=\"token function\">fromPromise</span><span class=\"token punctuation\">(</span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/users'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Chúng ta cũng có thể tạo observable sử dụng <code class=\"language-inline-text\">Observable.create</code></p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> foo <span class=\"token operator\">=</span> Rx<span class=\"token punctuation\">.</span>Observable<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">observer</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  observer<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token number\">42</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  observer<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  observer<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    observer<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token number\">300</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  observer<span class=\"token punctuation\">.</span><span class=\"token function\">complete</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nfoo<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Để ý là <code class=\"language-inline-text\">observer</code> có phương thức <code class=\"language-inline-text\">next</code> và <code class=\"language-inline-text\">complete</code>.</p>\n<h2 id=\"mergemap--alias-là-flatmap\"><a href=\"#mergemap--alias-l%C3%A0-flatmap\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>mergeMap ( alias là flatMap)</h2>\n<p>Phương thức phổ biến nhất cho phép transform output của observable.</p>\n<div class=\"gridsome-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>text<span class=\"token punctuation\">'</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>input1<span class=\"token punctuation\">'</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>text<span class=\"token punctuation\">'</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>input2<span class=\"token punctuation\">'</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>Combined value: <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>Nếu chúng ta muốn <code class=\"language-inline-text\">subscribe</code> lên sự kiện user input giá trị vô <code class=\"language-inline-text\">&lt;input/></code></p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> input1 <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#input1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> input2 <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#input2'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> span <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'span'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> obs1 <span class=\"token operator\">=</span> Rx<span class=\"token punctuation\">.</span>Observable<span class=\"token punctuation\">.</span><span class=\"token function\">fromEvent</span><span class=\"token punctuation\">(</span>input1<span class=\"token punctuation\">,</span> <span class=\"token string\">'input'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span> <span class=\"token operator\">=></span> span<span class=\"token punctuation\">.</span>textContext <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> obs2 <span class=\"token operator\">=</span> Rx<span class=\"token punctuation\">.</span>Observable<span class=\"token punctuation\">.</span><span class=\"token function\">fromEvent</span><span class=\"token punctuation\">(</span>input2<span class=\"token punctuation\">,</span> <span class=\"token string\">'input'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span> <span class=\"token operator\">=></span> span<span class=\"token punctuation\">.</span>textContext <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Giá trị span sẽ thay đổi khi ta nhập giá trị cho 1 trong 2 input, tuy nhiên nó sẽ override giá trị cũ. Nếu muốn có một kết quả combine từ cả 2 giá trị nhập vào từ input, ta <code class=\"language-inline-text\">mergeMap</code> 2 observable lại.</p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> obs1 <span class=\"token operator\">=</span> Rx<span class=\"token punctuation\">.</span>Observable<span class=\"token punctuation\">.</span><span class=\"token function\">fromEvent</span><span class=\"token punctuation\">(</span>input1<span class=\"token punctuation\">,</span> <span class=\"token string\">'input'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> obs2 <span class=\"token operator\">=</span> Rx<span class=\"token punctuation\">.</span>Observable<span class=\"token punctuation\">.</span><span class=\"token function\">fromEvent</span><span class=\"token punctuation\">(</span>input2<span class=\"token punctuation\">,</span> <span class=\"token string\">'input'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nobs1<span class=\"token punctuation\">.</span><span class=\"token function\">mergeMap</span><span class=\"token punctuation\">(</span>\n  <span class=\"token parameter\">event1</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> obs2<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event2</span> <span class=\"token operator\">=></span> event1<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value <span class=\"token operator\">+</span> <span class=\"token string\">' '</span> <span class=\"token operator\">+</span> event2<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span>\n  <span class=\"token parameter\">combineValue</span> <span class=\"token operator\">=></span> span<span class=\"token punctuation\">.</span>textContext <span class=\"token operator\">=</span> combineValue\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"redux-observable\"><a href=\"#redux-observable\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Redux-Observable</h2>\n<p>Redux-Observable cho phép chúng ta đưa các khái niệm của RxJS vào trong Redux. Nó sẽ tạo ra các Observable lắng nghe <code class=\"language-inline-text\">action</code>, xào nấu trước khi <code class=\"language-inline-text\">dispatch</code> một action khác đến <code class=\"language-inline-text\">reducer</code>. Nó được gọi một cái tên chảnh chó là <strong>Epic</strong> (mình gọi nó là chảnh chó vì mình thấy nó méo có gì để được gọi là epic cả)</p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ajax <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'rxjs/observable/dom/ajax'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Action creators</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">fetchUser</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">username</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'FETCH_USER'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">payload</span><span class=\"token operator\">:</span> username <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">fetchUserFulfilled</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">payload</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'FETCH_USER_FULFILLED'</span><span class=\"token punctuation\">,</span> payload <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Epic</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">fetchUserEpic</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">action$</span> <span class=\"token operator\">=></span>\n  action$<span class=\"token punctuation\">.</span><span class=\"token function\">ofType</span><span class=\"token punctuation\">(</span><span class=\"token string\">'FETCH_USER'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">mergeMap</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">action</span> <span class=\"token operator\">=></span>\n      ajax<span class=\"token punctuation\">.</span><span class=\"token function\">getJSON</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">https://api.github.com/users/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>action<span class=\"token punctuation\">.</span>payload<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span> <span class=\"token operator\">=></span> <span class=\"token function\">fetchUserFulfilled</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Dispatch FETCH_USER action</span>\n<span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token function\">fetchUser</span><span class=\"token punctuation\">(</span><span class=\"token string\">'torvalds'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Khi action type <code class=\"language-inline-text\">FETCH_USER</code> được dispatch ra, <code class=\"language-inline-text\">fetchUserEpic</code> lắng nghe tất cả sự kiện, nếu type là <code class=\"language-inline-text\">FETCH_USER</code>, nó không đưa ngay xuống <code class=\"language-inline-text\">reducer</code> của redux mà dừng lại và gọi ajax, sau khi có kết quả ajax, nó lại dispatch ra một sự kiện khác với type là <code class=\"language-inline-text\">FETCH_USER_FULFILLED</code>, rồi trả về cho <code class=\"language-inline-text\">reducer</code></p>\n<p><a href=\"https://medium.com/@johnvoon/understanding-rxjs-and-redux-observable-93d953d436c6\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Link bài gốc</a>\n<a href=\"http://www.hay16.com/videob59tcUwfpWU/mergemaprxjs-tutorial-watch.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Video giải thích mergeMap</a></p>\n","cover_image":"","related":[{"id":"1e0772ac7b2ea53e3b8d76415505558f","path":"/2018-11-03-gioi-thieu-markdown/","title":"Giới thiệu Markdown","desc":"Markdown vở lòng cho bạn nào chưa biết"},{"id":"cdd1d46a55ef801cc49f87a7c301b3f4","path":"/2017-07-31-react-router/","title":"Giới thiệu React Router","desc":"React không phải một framework, nó chỉ là một thư viện javascript, bởi vì vậy nó không thể giải quyết tất cả các yêu cầu một ứng dụng. Việc mà React làm rất tốt là tạo component và cách thức quản lý state của component, nhưng để tạo một Single Page App (sẽ viết tắt là SPA) phức tạp, nó cần những thư viện khác nữa, đầu tiên cần nhắc đến là React Router"},{"id":"71fd4dada010b7a40b9dcabe12574c93","path":"/2018-11-04-gioi-thieu-react-memo-moi-trong-react16/","title":"Giới thiệu React.memo","desc":"Api mới của React 16.6"},{"id":"d0d66fad9dc71def2a241115bca3941b","path":"/2018-05-31-huong-dan-gioi-thieu-react-portal/","title":"Giới thiệu React Portal","desc":"Tìm hiểu về Portals, bản hỗ trợ chính thức của react-dom"}]}},"context":{}}