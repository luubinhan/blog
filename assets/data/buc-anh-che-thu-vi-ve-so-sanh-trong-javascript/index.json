{"hash":"7044f7fad267d6cd2ca838488bf21d29cb9e70de","data":{"post":{"title":"Bức ảnh chế thú vị về so sánh trong Javascript","path":"/buc-anh-che-thu-vi-ve-so-sanh-trong-javascript/","slug":"/2019-09-15-anh-che-javascript","date":"2019-09-15","timeToRead":1,"tags":[{"id":"javascript","title":"javascript","path":"/tag/javascript/"},{"id":"hoc-thuat","title":"hoc-thuat","path":"/tag/hoc-thuat/"}],"desc":"Qua bức ảnh chế này, chúng ta biết được nhiều điều hay ho về so sánh trong javascript","content":"<p>Bộ ảnh thú vị mô tả kể chuyện so sánh trong Javascript, vô tình lụm xem được cái hình này trên Reddit</p>\n<p><img src=\"https://miro.medium.com/max/500/0*kjcbVX8Y9TFoHGDO.png\" alt=\"Nguyên tắc bắt cầu javascript\"></p>\n<p>Bạn có thể copy nguyên đoạn code này paste vào trình duyệt để xem kết quả</p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token number\">0</span> <span class=\"token operator\">==</span> <span class=\"token string\">'0'</span>\n<span class=\"token number\">0</span> <span class=\"token operator\">==</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\">// Nguyên tắc bắt cầu có đúng?</span>\n\n<span class=\"token string\">'0'</span> <span class=\"token operator\">==</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p>Chuyện gì đã xảy ra vậy?</p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token number\">0</span> <span class=\"token operator\">==</span> <span class=\"token string\">'0'</span> <span class=\"token comment\">// => true</span></code></pre></div>\n<p>Với các ngôn ngữ lập trình khác thì chưa biết, nhưng với javascript <code class=\"language-inline-text\">==</code> sẽ tự ý <strong>chuyển 2 giá trị muốn so sánh về cùng một kiểu</strong>, hay người ta vẫn gọi là ko quan tâm đến kiểu dữ liệu khi so sánh.</p>\n<p>Trong nhiều trường hợp chúng ta cũng có thể sử dụng cách so sánh <code class=\"language-inline-text\">==</code> để tiện, javascript tự động chuyển về một kiểu, tuy nhiên sẽ ko khuyến khích cách này</p>\n<p>Theo như <a href=\"https://www.ecma-international.org/ecma-262/5.1/#sec-11.9.3\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">specify</a></p>\n<blockquote>\n<p>Nếu x = Number, y = String, trả về x == ToNumber(y),</p>\n</blockquote>\n<p>Nó đưa giá trị bên phải về number mà không báo cho ai biết hết</p>\n<p><img src=\"https://miro.medium.com/max/581/0*njs7mQoUYjWG13Sm.jpeg\" alt=\"Tự động convert string sang number\"></p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token number\">0</span> <span class=\"token operator\">==</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// => true</span></code></pre></div>\n<blockquote>\n<p>Nếu x là String hoặc Number, y là Object, trả về x == ToPrimitive(y)</p>\n</blockquote>\n<p><img src=\"https://miro.medium.com/max/618/0*qN97ouGakJx0Gthb.jpg\" alt=\"Array là object\"></p>\n<p>Đúng! Array trong javascript cũng là object</p>\n<p>ToPrimitive(y) ở đây, JS sẽ gọi vào hàm <code class=\"language-inline-text\">.toString</code> để convert về kiểu primitive, trường hợp là array nó nối toàn bộ giá trị trong array thành chuỗi</p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// => \"1,2,3\"</span>\n<span class=\"token punctuation\">[</span><span class=\"token string\">'hello'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'world'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// => \"hello,world\"</span>\n<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// => \"\"</span></code></pre></div>\n<p>Toàn bộ những điều vô lý này đã được đưa vào <a href=\"https://www.ecma-international.org/ecma-262/5.1/#sec-8.12.8\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">văn bản chính quy!</a></p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token string\">'0'</span> <span class=\"token operator\">==</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p><img src=\"https://miro.medium.com/max/500/0*69mYzhumogiPLSh6.png\" alt=\"So sánh string và array\"></p>\n<p>Cứ theo nguyên tắc đã quy định mà làm</p>\n<blockquote>\n<p>Nếu x là String hoặc Number, y là Object, trả về x == ToPrimitive(y)</p>\n</blockquote>\n<p>Bước một <code class=\"language-inline-text\">ToPrimitive([])</code> => chúng ta sẽ trở thành so sánh <code class=\"language-inline-text\">'0' == \"\"</code>, khác nhau rõ ràng hé.</p>\n","cover_image":"","related":[{"id":"7faee24f9ee3fec6373997f1c4067e06","path":"/dinh-dang-so-trong-java-script/","title":"Định dạng số trong JavaScript","desc":"Cùng nghiên cứu xem Javascript hổ trợ sẵn những hàm nào để định dạng kiểu số trước khi nghĩ đến một thư viện thứ 3"},{"id":"d20bd2704185fc3024048b0381306d4d","path":"/vue-3-co-gi-moi/","title":"Vue 3 có gì mới?","desc":"Điểm mặt một số tính năng mới trong Vue 3"},{"id":"62586b61ec33564f6ff904763725fa4f","path":"/ho-tro-v-model-tren-mot-custom-vue-component/","title":"Hổ trợ v-model trên một custom Vue component","desc":"Hướng dẫn cách viết một component để có thể dùng v-model"}]}},"context":{}}