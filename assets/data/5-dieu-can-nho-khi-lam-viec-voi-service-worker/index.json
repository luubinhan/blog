{"hash":"1f050025b34e11bdb5a1569354f7ba1808a8211b","data":{"post":{"title":"5 điều cần nhớ khi làm việc với service worker","path":"/5-dieu-can-nho-khi-lam-viec-voi-service-worker/","date":"2019-02-20","timeToRead":2,"tags":[{"id":"javascript","title":"javascript","path":"/tag/javascript/"}],"desc":"Năm điều nhỏ nhỏ, nhưng rất hay ho cần thiết, cần biết","content":"<!-- TOC -->\n<ul>\n<li><a href=\"#%C4%91%E1%BA%B7t-file-service-worker-trong-th%C6%B0-m%E1%BB%A5c-root\">Đặt file service worker trong thư mục root</a></li>\n<li><a href=\"#s%E1%BB%AD-d%E1%BB%A5ng-panel-application-tr%C3%AAn-chrome-dev-tools\">Sử dụng Panel Application trên Chrome Dev Tools</a></li>\n<li><a href=\"#kh%C3%B4ng-s%E1%BB%AD-d%E1%BB%A5ng-hard-reload\">Không sử dụng Hard Reload</a></li>\n<li><a href=\"#b%E1%BA%ADt-update-on-reload\">Bật \"Update on Reload\"</a></li>\n<li><a href=\"#inspect-v%C3%A0-manual-delete-cache\">Inspect và manual delete cache</a></li>\n</ul>\n<!-- /TOC -->\n<p>Nếu chưa biết <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Service worker API</a> là gì, bạn hãy vào đọc lại link mình đã gắn sẵn</p>\n<h2 id=\"đặt-file-service-worker-trong-thư-mục-root\"><a href=\"#%C4%91%E1%BA%B7t-file-service-worker-trong-th%C6%B0-m%E1%BB%A5c-root\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Đặt file service worker trong thư mục root</h2>\n<p><img src=\"https://cms-assets.tutsplus.com/uploads/users/53/posts/31424/image/rootdir.jpg\" alt=\"5 điều cần nhớ khi làm việc với service worker\"></p>\n<p>Đừng thấy file service worker là js mà bạn đi bỏ nào trong thư mục <em>js</em> hay <em>scripts</em>, bởi vì file service worker bỏ vào thư mục nó sẽ bị giới hạn hoạt động ở trong thư mục <em>js</em> đó thôi. Nghĩa là nó chỉ can thiệp được khi user truy cập <code class=\"language-text\">www.yoursite.com/js/</code>, tất cả request từ <code class=\"language-text\">www.yoursite.com</code> hay <code class=\"language-text\">www.yoursite.com/news</code> nó sẽ cho qua.</p>\n<p>Tuy nhiên, chúng ta có thể thay đổi scope này</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token dom variable\">navigator</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">serviceWorker</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">register</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/sw.js'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n scope<span class=\"token operator\">:</span> <span class=\"token string\">'/'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Nhưng thật lòng mà nói, bỏ luôn trong thư mục root có phải dễ chịu không, nó tự động handle toàn bộ request ở cả site luôn cho khỏe</p>\n<h2 id=\"sử-dụng-panel-application-trên-chrome-dev-tools\"><a href=\"#s%E1%BB%AD-d%E1%BB%A5ng-panel-application-tr%C3%AAn-chrome-dev-tools\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Sử dụng Panel Application trên Chrome Dev Tools</h2>\n<p><img src=\"https://cms-assets.tutsplus.com/uploads/users/53/posts/31424/image/applicationstab.jpg\" alt=\"5 điều cần nhớ khi làm việc với service worker\"></p>\n<p>Trên tab này chúng ta sẽ biết được mình đã đăng ký file service worker thành công chưa, giả lập offline, bypass cái service worker hoặc gỡ bỏ luôn.</p>\n<h2 id=\"không-sử-dụng-hard-reload\"><a href=\"#kh%C3%B4ng-s%E1%BB%AD-d%E1%BB%A5ng-hard-reload\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Không sử dụng Hard Reload</h2>\n<p><img src=\"https://cms-assets.tutsplus.com/uploads/users/53/posts/31424/image/donthardreload.jpg\" alt=\"5 điều cần nhớ khi làm việc với service worker\"></p>\n<p>Một trong những thói quen của chúng ta là dùng \"Hard Reload\" hay \"Empty Cache and Hard Reload\" trên trình duyệt để xem những thay đổi mới nhất. Tuy nhiên là khi có service worker rồi, nó sẽ tự động bypass vụ \"Hard Reload\" này. Tip tiếp theo sẽ chỉ bạn cách làm ngay thôi</p>\n<h2 id=\"bật-update-on-reload\"><a href=\"#b%E1%BA%ADt-update-on-reload\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Bật \"Update on Reload\"</h2>\n<p><img src=\"https://cms-assets.tutsplus.com/uploads/users/53/posts/31424/image/updateonreload.jpg\" alt=\"5 điều cần nhớ khi làm việc với service worker\"></p>\n<p>Để đảm bảo luôn luôn lấy file mới nhất, trên tab <strong>Application</strong> check vào ô <strong>Update on Reload</strong> là xong. Như vậy thì khi thực hiện reload trang (reload bình thường luôn ấy) trình duyệt tự động update cái service worker luôn.</p>\n<p>Còn muốn thực hiện manual, click vào link <strong>Update</strong> bên dưới màn hình này.</p>\n<h2 id=\"inspect-và-manual-delete-cache\"><a href=\"#inspect-v%C3%A0-manual-delete-cache\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Inspect và manual delete cache</h2>\n<p>Cuối cùng, cũng hay, là trên tab <strong>Application</strong> cho phép chúng ta xóa chỉ định <strong>cụ thể</strong> file cache nào muốn xóa. Cột bên trái, mục <strong>Cache Storage</strong>, click nút expand, bạn sẽ thấy danh sách cache object đang được lưu trên trang này</p>\n<p><img src=\"https://cms-assets.tutsplus.com/uploads/users/53/posts/31424/image/inspectcache.jpg\" alt=\"5 điều cần nhớ khi làm việc với service worker\"></p>\n<p>Muốn xóa? Đơn giản click phải chọn <strong>Delete</strong></p>\n<p><img src=\"https://cms-assets.tutsplus.com/uploads/users/53/posts/31424/image/manuallydeletecache.jpg\" alt=\"5 điều cần nhớ khi làm việc với service worker\"></p>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://webdesign.tutsplus.com/tutorials/5-essential-tips-for-service-worker-development--cms-31424\">5 Essential Tips for Service Worker Development</a></p>\n","cover_image":"","related":[{"id":"b8095fcc4fddb26736d28255b2cd38ed","path":"/lam-viec-voi-form-trong-react/","title":"Làm việc với Form trong React","desc":"Xử lý form trong React, căn bản nhất"},{"id":"261b6ab3101f36044d757da3c9d8d2d0","path":"/lam-viec-voi-console-trong-javascript/","title":"Làm việc với console trong javascript","desc":"Một web developer chân chính là người biết sử dụng console.log :D. Tuy nhiên cũng nên biết rằng console nó còn rất nhiều phương thức khác nữa"},{"id":"dc640bd2ebc8ca9fcd4abedd80d3eb53","path":"/cac-van-de-khi-lam-viec-voi-ngay-thang-trong-javascript/","title":"Các vấn đề khi làm việc với ngày tháng trong javascript","desc":"Bỏ túi kỹ năng thiết yếu khi đụng đến xử lý ngày tháng"},{"id":"67122717b0acf53933fa6e376df98e0c","path":"/lam-viec-voi-css-modules-trong-react/","title":"Làm việc với CSS Modules trong React","desc":"Sau rất nhiều năm kiếm cơm với CSS, và hiện tại vẫn thế, CSS vẫn luôn là niềm hứng thú của cá nhân mình. Ngày nảy ngày nay để làm việc với Component của React, chúng ta sẽ có nhiều lựa chọn hơn khi 'CSS trong JS' đang là lựa chọn hàng đầu. Trong thời đại của component phủ sóng khắp các mặt trận, CSS Modules hứa hiện là món ngon"}]}},"context":{}}