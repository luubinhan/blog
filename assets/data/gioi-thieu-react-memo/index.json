{"hash":"b42727c700336131a477fb600bb04c628a9b0eca","data":{"post":{"title":"Giới thiệu React.memo","path":"/gioi-thieu-react-memo/","date":"2018-11-04","timeToRead":1,"tags":[{"id":"react","title":"react","path":"/tag/react/"}],"desc":"Api mới của React 16.6","content":"<p>Functional Component, hoặc Class Component return <code class=\"language-text\">false</code> trong <code class=\"language-text\">shouldComponentUpdate</code>, component đó sẽ không bị re-render khi <strong>tree</strong> thay đổi, nó chỉ thay đổi khi <code class=\"language-text\">prop</code> truyền vào thay đổi</p>\n<p><code class=\"language-text\">React.memo()</code> hoạt động y chang như <code class=\"language-text\">React.PureComponent()</code>, nhưng nó là function component thay vì class như <code class=\"language-text\">PureComponent</code>.</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token maybe-class-name\">MyComponent</span> <span class=\"token operator\">=</span> <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">memo</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token function\"><span class=\"token maybe-class-name\">MyComponent</span></span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* chỉ render khi prop thay đổi */</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// khai báo bằng arrow function</span>\n<span class=\"token keyword\">const</span> <span class=\"token maybe-class-name\">MyComponent</span> <span class=\"token operator\">=</span> <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">memo</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>my memoized component<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// ngắn hơn nữa</span>\n<span class=\"token keyword\">const</span> <span class=\"token maybe-class-name\">MyComponent</span> <span class=\"token operator\">=</span> <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">memo</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>implicit memoized component<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Vì <code class=\"language-text\">React.memo()</code> là HOC, chúng ta cũng có thể dùng như sau</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\"><span class=\"token maybe-class-name\">RocketComponent</span></span> <span class=\"token operator\">=</span> <span class=\"token parameter\">props</span> <span class=\"token arrow operator\">=></span> <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>my rocket component<span class=\"token punctuation\">.</span> <span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span><span class=\"token property-access\">fuel</span><span class=\"token punctuation\">}</span><span class=\"token operator\">!</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// một version chỉ render khi prop thay đổi</span>\n<span class=\"token keyword\">const</span> <span class=\"token maybe-class-name\">MemoizedRocketComponent</span> <span class=\"token operator\">=</span> <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">memo</span><span class=\"token punctuation\">(</span><span class=\"token maybe-class-name\">RocketComponent</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Tại sao đặt tên là <code class=\"language-text\">memo</code> nghe có vẻ chướng tai? <strong>Memoization</strong> là một kỹ thuật lập trình để optimize tốc độ, thực hiện bằng việc lưu kết quả của một function vào cache để nếu có gọi và truyền vào cùng input thì return cache thay vì thực thi các câu lệnh trong function.</p>\n","cover_image":"","related":[{"id":"0be257d7b6339261c05ba76120350279","path":"/gioi-thieu-react-router/","title":"Giới thiệu React Router","desc":"React không phải một framework, nó chỉ là một thư viện javascript, bởi vì vậy nó không thể giải quyết tất cả các yêu cầu một ứng dụng. Việc mà React làm rất tốt là tạo component và cách thức quản lý state của component, nhưng để tạo một Single Page App (sẽ viết tắt là SPA) phức tạp, nó cần những thư viện khác nữa, đầu tiên cần nhắc đến là React Router"},{"id":"fa886c080ce0cc5ae7c411b14a1be10f","path":"/gioi-thieu-react-portal/","title":"Giới thiệu React Portal","desc":"Tìm hiểu về Portals, bản hỗ trợ chính thức của react-dom"},{"id":"18de52b6667fae340629f0c5b1fb3c22","path":"/gioi-thieu-react-profiler/","title":"Giới thiệu React Profiler","desc":"Từ version React 16.5 bổ sung thêm một plugin DevTool profiler. Plugin này được dùng để thu thập các thông tin về thời gian render một component, xác định nguyên nhân làm trì trệ performance."},{"id":"c919a56a3b126ea31da9b991ff155b3d","path":"/gioi-thieu-react-router-v4-react-router-dom/","title":"Giới thiệu React Router v4 (react router dom)","desc":"Trước đây có bài giới thiệu về React Router rồi, nhưng giờ React Router 4 ra, gần như đập đi làm lại chứ ko kế thừa nhiều."},{"id":"e9d2a9d4a3ed5b8ecc39c580a3f2ffb8","path":"/gioi-thieu-markdown/","title":"Giới thiệu Markdown","desc":"Markdown vở lòng cho bạn nào chưa biết"},{"id":"aef50f5a2dd43730cf89e8a944b6adec","path":"/toi-uu-component-react-bang-react-memo-use-memo-va-use-callback/","title":"Tối ưu component React bằng React.memo, useMemo và useCallback","desc":"Sử dụng những hàm có sẵn của React để viết component ngon hơn"},{"id":"f9b9d628fc5725a639e6c8edff449057","path":"/gioi-thieu-fetch-cua-javascript/","title":"Giới thiệu fetch() của javascript","desc":"Tạm biệt XMLHttpRequest và cách viết dài dòng, giờ đây ta đã có fetch API"},{"id":"0b0388dbdd5fb8e368d89c778ff54334","path":"/gioi-thieu-vuex-cho-nguoi-moi-bat-dau/","title":"Giới thiệu Vuex cho người mới bắt đầu","desc":"Mình không giới thiệu cụ thể từng phần trong Vuex, các bạn cần nắm redux store của React để hiểu được bài này, các khái niệm và nguyên tắc gần như là giống nhau, khác cách đặt tên thôi."},{"id":"2357b01f4fedb762de94f08f22517a13","path":"/gioi-thieu-higher-order-component-trong-react/","title":"Giới thiệu Higher-Order Component trong React","desc":"Higher-Order Component (HOC) là kỹ thuật mà các bạn lập trình viên Việt Nam rất thích khi nhắc đến React, riêng mình thì không"},{"id":"927dd724b9aead5c798297ed8bba807b","path":"/gioi-thieu-ve-window-request-animation-frame/","title":"Giới thiệu về window.requestAnimationFrame","desc":""}]}},"context":{}}