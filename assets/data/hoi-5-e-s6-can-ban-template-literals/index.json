{"hash":"af3c5daaffb7dc8899439685b3381f71faac629f","data":{"post":{"title":"Hồi 5: ES6 căn bản - Template literals","path":"/hoi-5-e-s6-can-ban-template-literals/","date":"2016-11-19","timeToRead":2,"tags":[{"id":"javascript","title":"javascript","path":"/tag/javascript/"}],"desc":"Hồi 5 trong series ES6 căn bản, nói về Template literals, một nâng cấp lớn cho string","content":"<p>Trong Series này</p>\n<ol>\n<li><a href=\"/2016-11-15-chuong-1-es6-can-ban\">Nâng cấp cho Object</a></li>\n<li><a href=\"/2016-11-16-chuong-2-es6-can-ban-arrow-function/\">Arrow function</a></li>\n<li><a href=\"/2016-11-17-phan-3-es6-can-ban-assignment-destructuring\">Assignment Destruction</a></li>\n<li><a href=\"/2016-11-18-phan-4-es6-can-ban-rest-parameters-va-spread-operator\">Rest parameters và spread operator</a></li>\n<li><a href=\"/2016-11-19-phan-5-es6-can-ban-template-literals\">Template literals</a></li>\n<li><a href=\"/2016-11-20-phan-6-es6-can-ban-khai-bao-let-const\">Khai báo biến với let và const</a></li>\n<li><a href=\"/2016-11-21-phan-7-es6-can-ban-classes\">Căn bản class</a></li>\n</ol>\n<!-- TOC -->\n<ul>\n<li><a href=\"#c%C3%BA-ph%C3%A1p\">Cú pháp</a></li>\n<li>[Lưu ý về dấu backslash <code class=\"language-text\">\\</code>](#lưu-ý-về-dấu-backslash-)</li>\n<li><a href=\"#l%E1%BB%93ng-nhau\">Lồng nhau</a></li>\n<li><a href=\"#multi-line-string\">Multi-line String</a></li>\n<li><a href=\"#tagged-templates\">Tagged templates</a></li>\n</ul>\n<!-- /TOC -->\n<p>Template literal là một <code class=\"language-text\">string</code> <strong>đặc biệt</strong>, mình có thể nhúng <strong>expression</strong> vào trong đó.</p>\n<h1 id=\"cú-pháp\"><a href=\"#c%C3%BA-ph%C3%A1p\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Cú pháp</h1>\n<p>Đặt <code class=\"language-text\">string</code> giữa dấu <code><code class=\"language-text\"></code></code></p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> text  <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">First template literal</span><span class=\"token template-punctuation string\">`</span></span></code></pre>\n<p>Chèn giữa <code class=\"language-text\">string</code> đó một đoạn <em>code javascript</em> (expression)</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> name  <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">AnLuu</span><span class=\"token template-punctuation string\">`</span></span>\n<span class=\"token keyword\">var</span> text <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span>code<span class=\"token operator\">></span><span class=\"token maybe-class-name\">Hello</span><span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">!&lt;/code></span><span class=\"token template-punctuation string\">`</span></span>\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// result: Hello, AnLuu</span></code></pre>\n<p>Biến sử dụng trong expression phải được khai báo trước</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">The time and date is </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toLocalString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">The result of 2+3 equals </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span> <span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span></code></pre>\n<h1 id=\"lưu-ý-về-dấu-backslash-\"><a href=\"#l%C6%B0u-%C3%BD-v%E1%BB%81-d%E1%BA%A5u-backslash-\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Lưu ý về dấu backslash <code class=\"language-text\">\\</code></h1>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\\`</span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token operator\">===</span> <span class=\"token string\">'`'</span> <span class=\"token comment\">// --> true</span></code></pre>\n<p>Bình thường sau ký tự <code class=\"language-text\">\\</code> là một ký tự đặc biệt nào đó, ví dụ \\n để thêm dòng mới, nếu không muốn có kết quả này, mà chỉ muốn render ra đúng ký tự \\n, dùng hàm <code class=\"language-text\">String.raw</code></p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> text <span class=\"token operator\">=</span> <span class=\"token known-class-name class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">raw</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">The \"\\n\" new line won't result in a new line. It'll be escapted</span><span class=\"token template-punctuation string\">`</span></span></code></pre>\n<h1 id=\"lồng-nhau\"><a href=\"#l%E1%BB%93ng-nhau\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Lồng nhau</h1>\n<p>Mình có thể lồng code trong code</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">This a template literal </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">with another %{ 'one' } embeded inside it</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n\n<span class=\"token comment\">// Ví dụ khác</span>\n\n<span class=\"token keyword\">const</span> classes <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">header </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span> <span class=\"token function\">isLargeScreen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token string\">''</span> <span class=\"token operator\">:</span>\n <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">icon-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>item<span class=\"token punctuation\">.</span><span class=\"token property-access\">isCollapsed</span> <span class=\"token operator\">?</span> <span class=\"token string\">'expander'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'collapser'</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></code></pre>\n<h1 id=\"multi-line-string\"><a href=\"#multi-line-string\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Multi-line String</h1>\n<p>Để có nhiều dòng trong javascript string, trước ES6 có mấy cách làm như sau</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> multilineString <span class=\"token operator\">=</span>\n    <span class=\"token string\">'The first line\\n\\\n    A second line\\n\\\n    Then a third line'</span>\n\n<span class=\"token keyword\">var</span> multilineString <span class=\"token operator\">=</span>\n    <span class=\"token string\">'The first line\\n'</span> <span class=\"token operator\">+</span>\n    '<span class=\"token constant\">A</span> second line\\n <span class=\"token operator\">+</span>\n    <span class=\"token string\">'Then a third line'</span>\n\n<span class=\"token keyword\">var</span> multilineString <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">'The first line'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'A second line'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'Then a third line'</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">join</span><span class=\"token punctuation\">[</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">]</span></code></pre>\n<p>Với ES6, đơn giản là mình gõ Enter như bình thường</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> multilineString <span class=\"token operator\">=</span>\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">The first line\nThe second line\nThen a third line</span><span class=\"token template-punctuation string\">`</span></span></code></pre>\n<p>Cực kỳ hữu ích khi cần phải chèn một đoạn HTML như sau</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> book <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    title<span class=\"token operator\">:</span> <span class=\"token string\">'Module ES6'</span><span class=\"token punctuation\">,</span>\n    excerpt<span class=\"token operator\">:</span> <span class=\"token string\">'Here goes some properly sanitized HTML'</span><span class=\"token punctuation\">,</span>\n    tags<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'es6'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'template-literals'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'es6-in-depth'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">var</span> html <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;article>\n    &lt;header>\n        &lt;h1></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span> book<span class=\"token punctuation\">.</span><span class=\"token property-access\">title</span> <span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&lt;/h1>\n    &lt;/header>\n    &lt;section> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span> book<span class=\"token punctuation\">.</span><span class=\"token property-access\">excerpt</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&lt;/section>\n    &lt;footer>\n&lt;ul>\n</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>\nbook<span class=\"token punctuation\">.</span><span class=\"token property-access\">tags</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">map</span><span class=\"token punctuation\">(</span> <span class=\"token parameter\">tag</span> <span class=\"token arrow operator\">=></span> <span class=\"token operator\">&lt;</span>code<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">></span> $<span class=\"token punctuation\">{</span>tag<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>code<span class=\"token operator\">></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span>\n<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&lt;/ul>\n&lt;/footer>\n&lt;/article></span><span class=\"token template-punctuation string\">`</span></span></code></pre>\n<h1 id=\"tagged-templates\"><a href=\"#tagged-templates\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Tagged templates</h1>\n<p>Với một template literal như... </p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Hello, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span> name <span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">. I am </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span> emotion <span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> to meet you!</span><span class=\"token template-punctuation string\">`</span></span></code></pre>\n<p>...viết bằng tagged template</p>\n<pre class=\"language-js\"><code class=\"language-js\">    <span class=\"token function\">tag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'Hello,'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'. I am'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'to meet you!'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Maurice'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'thrilled'</span><span class=\"token punctuation\">)</span></code></pre>\n<p>Tagged template là một dạng <strong>cao siêu</strong> của template literal, tham số đầu tiên của nó là một mảng các string, các tham số sau đó, lần lượt được chèn vào giữa các phần tử của mảng.</p>\n<p><code class=\"language-text\">tag</code> ở đây có thể là một hàm tự mình viết luôn</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> person <span class=\"token operator\">=</span> <span class=\"token string\">'Mike'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> age <span class=\"token operator\">=</span> <span class=\"token number\">28</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">myTag</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">strings<span class=\"token punctuation\">,</span> personExp<span class=\"token punctuation\">,</span> ageExp</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> str0 <span class=\"token operator\">=</span> strings<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"That \"</span>\n  <span class=\"token keyword\">var</span> str1 <span class=\"token operator\">=</span> strings<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \" is a \"</span>\n\n  <span class=\"token keyword\">var</span> ageStr<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ageExp <span class=\"token operator\">></span> <span class=\"token number\">99</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    ageStr <span class=\"token operator\">=</span> <span class=\"token string\">'centenarian'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    ageStr <span class=\"token operator\">=</span> <span class=\"token string\">'youngster'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>str0<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>personExp<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>str1<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>ageStr<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> output <span class=\"token operator\">=</span> myTag<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">That </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span> person <span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> is a </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span> age <span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>output<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// That Mike is a youngster</span></code></pre>\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Tham khảo</a></p>\n","cover_image":"","related":[{"id":"1340104aa5d848ae6e871dca2ffcd1b5","path":"/hoi-7-e-s6-can-ban-classes/","title":"Hồi 7: ES6 căn bản - Classes","desc":"Hồi 7 trong series ES6 căn bản, Javascript vốn là ngôn ngữ prototype, class không phải là cái gì đó mới mẻ trong javascript"},{"id":"6b73c7a8d9c5332b2e0a6315fcbcb943","path":"/hoi-2-e-s6-can-ban-arrow-function/","title":"Hồi 2: ES6 căn bản - Arrow Function","desc":"Hồi 2 trong series ES6 căn bản, nói về Arrow Function"},{"id":"1033f1efca1a045faea137fd0c0a873d","path":"/hoi-3-e-s6-can-ban-truy-cap-phan-tu/","title":"Hồi 3: ES6 căn bản - Truy cập phần tử","desc":"Hồi 3 trong series ES6 căn bản, nói về Assignment Destructuring"},{"id":"640a57b49950fe739bdc6e77b9cc51f4","path":"/hoi-4-e-s6-can-ban-rest-parameters-va-spread-operator/","title":"Hồi 4: ES6 căn bản - Rest Parameters và Spread Operator","desc":"Hồi 4 trong series ES6 căn bản, nói về Rest Parameters và Spread Operator"}]}},"context":{}}