{"hash":"af3c5daaffb7dc8899439685b3381f71faac629f","data":{"post":{"title":"Kiểu enum trong TypeScript: làm việc như thế nào, sử dụng ra sao","path":"/kieu-enum-trong-type-script-lam-viec-nhu-the-nao-su-dung-ra-sao/","date":"2020-02-01","timeToRead":4,"tags":[{"id":"hoc-thuat","title":"hoc-thuat","path":"/tag/hoc-thuat/"},{"id":"typescript","title":"typescript","path":"/tag/typescript/"}],"desc":"Chúng ta sẽ trả lời 2 câu hỏi sau: enum của TypeScript làm việc như thế nào, Nó được sử dụng để làm gì. Vở lòng cho người mới viết TypeScript","content":"<h2 id=\"các-khái-niệm-căn-bản-của-enum\"><a href=\"#c%C3%A1c-kh%C3%A1i-ni%E1%BB%87m-c%C4%83n-b%E1%BA%A3n-c%E1%BB%A7a-enum\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Các khái niệm căn bản của enum</h2>\n<p>Javascript chỉ có đúng một kiểu mà giá trị bị ràng buộc <em>rất cụ thể</em>: <code class=\"language-text\">boolean</code>, giá trị chỉ được phép là <code class=\"language-text\">true</code> hoặc <code class=\"language-text\">false</code>, không chấp nhận một giá trị nào khác. <code class=\"language-text\">Enum</code> là phiên bản <em>mở rộng</em> với công dụng tương tự như <code class=\"language-text\">boolean</code></p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">enum</span> NoYes <span class=\"token punctuation\">{</span>\n    No<span class=\"token punctuation\">,</span>\n    Yes\n<span class=\"token punctuation\">}</span></code></pre>\n<p>2 giá trị <code class=\"language-text\">No</code> <code class=\"language-text\">Yes</code> được gọi là thành viên của hội <code class=\"language-text\">enum</code> <code class=\"language-text\">NoYes</code>. Dùng nó như một <code class=\"language-text\">object</code>, chúng ta có thể <em>chấm</em> đến giá trị đó</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">function</span> <span class=\"token function\">toGerman</span><span class=\"token punctuation\">(</span>value<span class=\"token operator\">:</span> NoYes<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> NoYes<span class=\"token punctuation\">.</span>No<span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span> <span class=\"token string\">'Nein'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> NoYes<span class=\"token punctuation\">.</span>Yes<span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span> <span class=\"token string\">'Ja'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Tất cả thành viên của hội <code class=\"language-text\">enum</code> đều được cấp một <em>thẻ thành viên</em> gồm <code class=\"language-text\">name</code> và <code class=\"language-text\">value</code>. Ở trên chúng ta chỉ đang khai báo phần <code class=\"language-text\">name</code> cho enum, <code class=\"language-text\">value</code> lúc đó sẽ lấy mặc định là số từ 0 đi lên</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">enum</span> NoYes <span class=\"token punctuation\">{</span>\n  No<span class=\"token punctuation\">,</span>\n  Yes<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// nếu khai báo một cách tường minh hơn</span>\n<span class=\"token keyword\">enum</span> NoYes <span class=\"token punctuation\">{</span>\n  No <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n  Yes <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\nassert<span class=\"token punctuation\">.</span><span class=\"token function\">equal</span><span class=\"token punctuation\">(</span>NoYes<span class=\"token punctuation\">.</span>No<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nassert<span class=\"token punctuation\">.</span><span class=\"token function\">equal</span><span class=\"token punctuation\">(</span>NoYes<span class=\"token punctuation\">.</span>Yes<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Nếu cà khịa, khai báo như thế này</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">enum</span> Enum <span class=\"token punctuation\">{</span>\n  <span class=\"token constant\">A</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">B</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">C</span> <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">D</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">E</span> <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">F</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Đồng nghĩa là các giá trị kế tiếp sẽ tự động tăng lên một, so với giá trị khai báo trước đó</p>\n<pre class=\"language-ts\"><code class=\"language-ts\">assert<span class=\"token punctuation\">.</span><span class=\"token function\">deepEqual</span><span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">[</span>Enum<span class=\"token punctuation\">.</span><span class=\"token constant\">A</span><span class=\"token punctuation\">,</span> Enum<span class=\"token punctuation\">.</span><span class=\"token constant\">B</span><span class=\"token punctuation\">,</span> Enum<span class=\"token punctuation\">.</span><span class=\"token constant\">C</span><span class=\"token punctuation\">,</span> Enum<span class=\"token punctuation\">.</span><span class=\"token constant\">D</span><span class=\"token punctuation\">,</span> Enum<span class=\"token punctuation\">.</span><span class=\"token constant\">E</span><span class=\"token punctuation\">,</span> Enum<span class=\"token punctuation\">.</span><span class=\"token constant\">F</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Về cách đặt tên (<code class=\"language-text\">name</code>) trong <code class=\"language-text\">enum</code>, cũng có vài ba lựa chọn</p>\n<ul>\n<li>Đặt theo kiểu JavaScript, viết hoa hết, <code class=\"language-text\">Number,MAX_VALUE</code></li>\n<li>Đặt theo kiểu symbol, con lạc đà, chữ đầu viết thường, <code class=\"language-text\">Symbol.asyncIterator</code></li>\n<li>Kiểu TypeScript, con lạc đà, chữ đầu viết hoa, <code class=\"language-text\">Number.MaxValue</code></li>\n</ul>\n<p>Tương tự như object, chúng ta có thể truy xuất đến một thành viên của hội bằng cách viết sau</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">enum</span> HttpRequestField <span class=\"token punctuation\">{</span>\n  <span class=\"token string\">'Accept'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Accept-Charset'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Accept-Datetime'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Accept-Encoding'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Accept-Language'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\nassert<span class=\"token punctuation\">.</span><span class=\"token function\">equal</span><span class=\"token punctuation\">(</span>HttpRequestField<span class=\"token punctuation\">[</span><span class=\"token string\">'Accept-Charset'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Giá trị <code class=\"language-text\">value</code> của enum, không bắt buộc là một number, có thể là một <code class=\"language-text\">string</code></p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">enum</span> NoYes <span class=\"token punctuation\">{</span>\n  No <span class=\"token operator\">=</span> <span class=\"token string\">'No'</span><span class=\"token punctuation\">,</span>\n  Yes <span class=\"token operator\">=</span> <span class=\"token string\">'Yes'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\nassert<span class=\"token punctuation\">.</span><span class=\"token function\">equal</span><span class=\"token punctuation\">(</span>NoYes<span class=\"token punctuation\">.</span>No<span class=\"token punctuation\">,</span> <span class=\"token string\">'No'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nassert<span class=\"token punctuation\">.</span><span class=\"token function\">equal</span><span class=\"token punctuation\">(</span>NoYes<span class=\"token punctuation\">.</span>Yes<span class=\"token punctuation\">,</span> <span class=\"token string\">'Yes'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Còn một cách khai báo, ít được sử dụng, là kiểu xăng pha nhớt, các giá trị trong enum có thể là số cũng có thể là chữ</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">enum</span> Enum <span class=\"token punctuation\">{</span>\n  <span class=\"token constant\">A</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">B</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">C</span> <span class=\"token operator\">=</span> <span class=\"token string\">'C'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">D</span> <span class=\"token operator\">=</span> <span class=\"token string\">'D'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">E</span> <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">F</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\nassert<span class=\"token punctuation\">.</span><span class=\"token function\">deepEqual</span><span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">[</span>Enum<span class=\"token punctuation\">.</span><span class=\"token constant\">A</span><span class=\"token punctuation\">,</span> Enum<span class=\"token punctuation\">.</span><span class=\"token constant\">B</span><span class=\"token punctuation\">,</span> Enum<span class=\"token punctuation\">.</span><span class=\"token constant\">C</span><span class=\"token punctuation\">,</span> Enum<span class=\"token punctuation\">.</span><span class=\"token constant\">D</span><span class=\"token punctuation\">,</span> Enum<span class=\"token punctuation\">.</span><span class=\"token constant\">E</span><span class=\"token punctuation\">,</span> Enum<span class=\"token punctuation\">.</span><span class=\"token constant\">F</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'C'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'D'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Theo như kinh nghiệm từ các bật tiền bối, sử dụng enum thì nên dùng kiểu giá trị <code class=\"language-text\">string</code></p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">enum</span> NoYes <span class=\"token punctuation\">{</span> No <span class=\"token operator\">=</span> <span class=\"token string\">'NO'</span><span class=\"token punctuation\">,</span> Yes <span class=\"token operator\">=</span> <span class=\"token string\">'YES'</span> <span class=\"token punctuation\">}</span></code></pre>\n<p>Nếu có <em>log</em> ra chúng ta cũng biết được giá trị chính xác là gì, đỡ hack não ngồi đếm số thứ tự</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>NoYes<span class=\"token punctuation\">.</span>No<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>NoYes<span class=\"token punctuation\">.</span>Yes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Thêm nữa, ràng buộc được luôn kiểu giá trị</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">function</span> <span class=\"token function\">func</span><span class=\"token punctuation\">(</span>noYes<span class=\"token operator\">:</span> NoYes<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">func</span><span class=\"token punctuation\">(</span><span class=\"token string\">'abc'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">func</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Yes'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<h2 id=\"trường-hợp-sử-dụng-enum\"><a href=\"#tr%C6%B0%E1%BB%9Dng-h%E1%BB%A3p-s%E1%BB%AD-d%E1%BB%A5ng-enum\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Trường hợp sử dụng enum</h2>\n<h3 id=\"hằng-số-nhiều-giá-trị\"><a href=\"#h%E1%BA%B1ng-s%E1%BB%91-nhi%E1%BB%81u-gi%C3%A1-tr%E1%BB%8B\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>hằng số nhiều giá trị</h3>\n<p>Nếu chúng ta có một <em>mớ</em> các hằng số, có quan hệ họ hàng gần với nhau</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">const</span> fatal <span class=\"token operator\">=</span> <span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fatal'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> error <span class=\"token operator\">=</span> <span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token string\">'error'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> warn <span class=\"token operator\">=</span> <span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token string\">'warn'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> info <span class=\"token operator\">=</span> <span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token string\">'info'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> debug <span class=\"token operator\">=</span> <span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> trace <span class=\"token operator\">=</span> <span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token string\">'trace'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Có thể dùng enum</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">enum</span> LogLevel <span class=\"token punctuation\">{</span>\n  fatal <span class=\"token operator\">=</span> <span class=\"token string\">'fatal'</span><span class=\"token punctuation\">,</span>\n  error <span class=\"token operator\">=</span> <span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span>\n  warn <span class=\"token operator\">=</span> <span class=\"token string\">'warn'</span><span class=\"token punctuation\">,</span>\n  info <span class=\"token operator\">=</span> <span class=\"token string\">'info'</span><span class=\"token punctuation\">,</span>\n  debug <span class=\"token operator\">=</span> <span class=\"token string\">'debug'</span><span class=\"token punctuation\">,</span>\n  trace <span class=\"token operator\">=</span> <span class=\"token string\">'trace'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Lợi ích mang lại: nhóm lại với nhau một cục, TypeScript dễ đàng kiểm tra giúp chúng ta</p>\n<h3 id=\"tường-minh-hơn-boolean\"><a href=\"#t%C6%B0%E1%BB%9Dng-minh-h%C6%A1n-boolean\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Tường minh hơn boolean</h3>\n<p>Chúng ta hay dùng boolean để làm <em>cờ</em> bật tắt hoặc đảo ngược giá trị</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">List1</span> <span class=\"token punctuation\">{</span> isOrdered<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span></code></pre>\n<p>Nếu dùng enum, nó sẽ rõ nghĩa hơn, nhiều lựa chọn hơn</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">enum</span> ListKind <span class=\"token punctuation\">{</span> ordered<span class=\"token punctuation\">,</span> unordered <span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">List2</span> <span class=\"token punctuation\">{</span>\n  listKind<span class=\"token operator\">:</span> ListKind<span class=\"token punctuation\">;</span>\n  \n<span class=\"token punctuation\">}</span></code></pre>\n<h3 id=\"string-là-một-hằng-số-đúng-nghĩa-an-toàn-hơn-vì-không-thể-thay-đổi-được-giá-trị\"><a href=\"#string-l%C3%A0-m%E1%BB%99t-h%E1%BA%B1ng-s%E1%BB%91-%C4%91%C3%BAng-ngh%C4%A9a-an-to%C3%A0n-h%C6%A1n-v%C3%AC-kh%C3%B4ng-th%E1%BB%83-thay-%C4%91%E1%BB%95i-%C4%91%C6%B0%E1%BB%A3c-gi%C3%A1-tr%E1%BB%8B\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>String là một hằng số đúng nghĩa, an toàn hơn vì không thể thay đổi được giá trị</h3>\n<p>Ví dụ hàm bên dưới dùng <code class=\"language-text\">const</code></p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">const</span> <span class=\"token constant\">GLOBAL</span> <span class=\"token operator\">=</span> <span class=\"token string\">'g'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token constant\">NOT_GLOBAL</span> <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">Globalness</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">typeof</span> <span class=\"token constant\">GLOBAL</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">typeof</span> <span class=\"token constant\">NOT_GLOBAL</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">createRegExp</span><span class=\"token punctuation\">(</span>source<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span>\n  globalness<span class=\"token operator\">:</span> Globalness <span class=\"token operator\">=</span> <span class=\"token constant\">NOT_GLOBAL</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RegExp</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">,</span> <span class=\"token string\">'u'</span> <span class=\"token operator\">+</span> globalness<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\nassert<span class=\"token punctuation\">.</span><span class=\"token function\">deepEqual</span><span class=\"token punctuation\">(</span>\n  <span class=\"token function\">createRegExp</span><span class=\"token punctuation\">(</span><span class=\"token string\">'abc'</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">GLOBAL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token language-regex\">abc</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">ug</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>dùng enum tiện hơn</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">enum</span> Globalness <span class=\"token punctuation\">{</span>\n  <span class=\"token constant\">GLOBAL</span> <span class=\"token operator\">=</span> <span class=\"token string\">'g'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">NOT_GLOBAL</span> <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">createRegExp</span><span class=\"token punctuation\">(</span>source<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> globalness <span class=\"token operator\">=</span> Globalness<span class=\"token punctuation\">.</span><span class=\"token constant\">NOT_GLOBAL</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RegExp</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">,</span> <span class=\"token string\">'u'</span> <span class=\"token operator\">+</span> globalness<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nassert<span class=\"token punctuation\">.</span><span class=\"token function\">deepEqual</span><span class=\"token punctuation\">(</span>\n  <span class=\"token function\">createRegExp</span><span class=\"token punctuation\">(</span><span class=\"token string\">'abc'</span><span class=\"token punctuation\">,</span> Globalness<span class=\"token punctuation\">.</span><span class=\"token constant\">GLOBAL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token language-regex\">abc</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">ug</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<h2 id=\"enum-lúc-chạy-thì-sẽ-trở-thành-gì\"><a href=\"#enum-l%C3%BAc-ch%E1%BA%A1y-th%C3%AC-s%E1%BA%BD-tr%E1%BB%9F-th%C3%A0nh-g%C3%AC\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Enum lúc chạy thì sẽ trở thành gì?</h2>\n<p>Sau khi TypeScript đã compile, enum sẽ được được chuyển thành javascript object</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">enum</span> NoYes <span class=\"token punctuation\">{</span>\n  No<span class=\"token punctuation\">,</span>\n  Yes<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> <span class=\"token maybe-class-name\">NoYes</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token maybe-class-name\">NoYes</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token maybe-class-name\">NoYes</span><span class=\"token punctuation\">[</span><span class=\"token maybe-class-name\">NoYes</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"No\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"No\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token maybe-class-name\">NoYes</span><span class=\"token punctuation\">[</span><span class=\"token maybe-class-name\">NoYes</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"Yes\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"Yes\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token maybe-class-name\">NoYes</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span><span class=\"token maybe-class-name\">NoYes</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p><a href=\"https://2ality.com/2020/01/typescript-enums.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">TypeScript enums: How do they work? What can they be used for?</a></p>\n","cover_image":"","related":[{"id":"b8095fcc4fddb26736d28255b2cd38ed","path":"/lam-viec-voi-form-trong-react/","title":"Làm việc với Form trong React","desc":"Xử lý form trong React, căn bản nhất"},{"id":"261b6ab3101f36044d757da3c9d8d2d0","path":"/lam-viec-voi-console-trong-javascript/","title":"Làm việc với console trong javascript","desc":"Một web developer chân chính là người biết sử dụng console.log :D. Tuy nhiên cũng nên biết rằng console nó còn rất nhiều phương thức khác nữa"},{"id":"f8528e820fefc73636e76fd4e555b660","path":"/su-dung-css-content-nhu-the-nao-cho-dung/","title":"Sử dụng CSS content như thế nào cho đúng","desc":"Thuộc tính content trong CSS thường được sử dụng cùng với 2 ghost element là after và before, những giá trị nào có thể đưa vào cho thuộc tính content này"},{"id":"cb3f4bb6b7e51df501700726716dff04","path":"/tai-sao-su-dung-flow-va-su-dung-flow-nhu-the-nao-trong-react/","title":"Tại sao sử dụng Flow, và sử dụng Flow như thế nào trong React","desc":"Tại sao chúng ta cần type checking trong javascript, tại sao Flow lại là lựa chọn của nhiều developer hiện nay"}]}},"context":{}}