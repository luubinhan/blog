{"hash":"361ad3b65d86d8c5f4c864e53c3c55284437656f","data":{"post":{"title":"Intersection Observer API","path":"/intersection-observer-api/","slug":"2021-07-24-huong-dan-su-dung-intersection-observer-api","date":"2021-07-24","timeToRead":3,"tags":[{"id":"javascript","title":"javascript","path":"/tag/javascript/"}],"desc":"Làm sao để chạy một hàm khi element bắt đầu xuất hiện trên màn hình?","content":"<!-- TOC -->\n<ul>\n<li><a href=\"#%E1%BB%A9ng-d%E1%BB%A5ng-1-lazy-load-image\">Ứng dụng 1: lazy load image</a></li>\n<li><a href=\"#%E1%BB%A9ng-d%E1%BB%A5ng-2-t%E1%BB%B1-%C4%91%E1%BB%99ng-pause-video-khi-ra-kh%E1%BB%8Fi-m%C3%A0n-h%C3%ACnh\">Ứng dụng 2: Tự động pause video khi ra khỏi màn hình</a></li>\n<li><a href=\"#%E1%BB%A9ng-d%E1%BB%A5ng-3-toggle-class-khi-header-sticky\">Ứng dụng 3: Toggle class khi header sticky</a></li>\n</ul>\n<!-- /TOC -->\n<p>Chúng ta thường phải đặt <code>listener</code> trên sự kiện <code>window.scroll</code> thực hiện một số thao tác tính toán, so sánh với thanh <em>scroll</em> để biết được khi nào element bắt đầu xuất hiện.</p>\n<p>Cách làm này gây nhiều vấn đề hiệu năng và tương đối rườm rà. Giờ các trình duyệt đã đồng loạt hỗ trợ <strong>Intersection Observer API</strong>, chúng ta có một cách hoàn toàn <em>gọn gàng, sạch sẽ</em> mà lại tối ưu hiệu năng hơn nhiều.</p>\n<p>Cách sử dụng như sau, chúng ta khởi tạo một <em>instance</em> <code>IntersectionObserver</code> và gọi <code>observe</code> trên element muốn theo dõi (<em>watch</em> là thuật ngữ chuyên ngành hơn)</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> myImg <span class=\"token operator\">=</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.animate-me'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> observer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IntersectionObserver</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">entry<span class=\"token punctuation\">,</span> observer</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> entry <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> observer <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\nobserver<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">observe</span><span class=\"token punctuation\">(</span>myImg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Trong trường hợp chúng ta muốn <strong>observe</strong> trên nhiều element cùng lúc</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> myImgs <span class=\"token operator\">=</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.animate-me'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> observer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IntersectionObserver</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">entries</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>entries<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmyImgs<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">image</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  observer<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">observe</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Để thực thi một tác vụ nào đó khi element bắt đầu xuất hiện trong viewport hoặc leave khỏi viewport</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> myImgs <span class=\"token operator\">=</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.animate-me'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nobserver <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IntersectionObserver</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">entries</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  entries<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">entry</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>entry<span class=\"token punctuation\">.</span><span class=\"token property-access\">intersectionRatio</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'in the view'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword control-flow\">else</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'out of view'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmyImgs<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">image</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  observer<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">observe</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Với điều kiện <code>intersectionRatio > 0</code> chúng ta biết được element đã xuất hiện trong viewport hay không</p>\n<p>Với lazy load, chúng ta chỉ cần observe ở lần đầu tiên khi xuất hiện trên viewport, chúng ta sẽ <code>unobserve</code> nó đi vì không cần <strong>tracking</strong> tiếp nữa</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> myImgs <span class=\"token operator\">=</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.animate-me'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nobserver <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IntersectionObserver</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">entries</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  entries<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">entry</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>entry<span class=\"token punctuation\">.</span><span class=\"token property-access\">intersectionRatio</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'in the view'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      observer<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">unobserve</span><span class=\"token punctuation\">(</span>entry<span class=\"token punctuation\">.</span><span class=\"token property-access\">target</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword control-flow\">else</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'out of view'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmyImgs<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">image</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  observer<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">observe</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p><code>IntersectionObserver</code> API nhận thêm params thứ 2, để chúng ta truyền một số config</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> config <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  rootMargin<span class=\"token operator\">:</span> <span class=\"token string\">'50px 20px 75px 30px'</span><span class=\"token punctuation\">,</span>\n  threshold<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.75</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> observer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IntersectionObserver</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">entry</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Các giá trị có thể truyền vào cho config</p>\n<ul>\n<li><code>root</code> element dùng để kiểm tra intersection, nếu <code>null</code> nó sẽ lấy <code>document</code> viewport</li>\n<li><code>rootMargin</code>:  khai báo như giá trị margin css, ví dụ <code>3rem 2rem</code>, có thể dùng để thêm <code>offset</code> cho intersection point</li>\n<li><code>threhold</code>: mảng giá trị từ 0 đến 1, tương ứng với ratio xuất hiện của element, 0 = hoàn toàn ra khỏi viewport, 1 là đang nằm trong viewport hoàn toàn, <code>callback</code> sẽ được gọi vào tất cả các giá trị đã khai báo</li>\n</ul>\n<p><img src=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/769b2733-5700-4d2d-a32f-6850a173abaa/1-dynamic-header-intersection-observer.png\"></p>\n<p>Element được xem là nằm ngoài viewport khi nó đã nằm ngoài viewport + 15px margin</p>\n<p><img src=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a5908e69-f81a-4e1c-81e6-aae2f1b96a28/2-dynamic-header-intersection-observer.png\"></p>\n<p><img src=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b95822cd-d3e8-4b71-9d38-862e6d39990a/3-dynamic-header-intersection-observer.png\"></p>\n<h2 id=\"ứng-dụng-1-lazy-load-image\"><a href=\"#%E1%BB%A9ng-d%E1%BB%A5ng-1-lazy-load-image\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Ứng dụng 1: lazy load image</h2>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> observer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IntersectionObserver</span><span class=\"token punctuation\">(</span>\n<span class=\"token punctuation\">(</span><span class=\"token parameter\">entries<span class=\"token punctuation\">,</span> observer</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span> \nentries<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">entry</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/* Placeholder replacement */</span>\n    entry<span class=\"token punctuation\">.</span><span class=\"token property-access\">target</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">src</span> <span class=\"token operator\">=</span> entry<span class=\"token punctuation\">.</span><span class=\"token property-access\">target</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">dataset</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">src</span><span class=\"token punctuation\">;</span>\n    observer<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">unobserve</span><span class=\"token punctuation\">(</span>entry<span class=\"token punctuation\">.</span><span class=\"token property-access\">target</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> \n<span class=\"token punctuation\">{</span>rootMargin<span class=\"token operator\">:</span> <span class=\"token string\">\"0px 0px -200px 0px\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'img'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">img</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span> observer<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">observe</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<h2 id=\"ứng-dụng-2-tự-động-pause-video-khi-ra-khỏi-màn-hình\"><a href=\"#%E1%BB%A9ng-d%E1%BB%A5ng-2-t%E1%BB%B1-%C4%91%E1%BB%99ng-pause-video-khi-ra-kh%E1%BB%8Fi-m%C3%A0n-h%C3%ACnh\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Ứng dụng 2: Tự động pause video khi ra khỏi màn hình</h2>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> video <span class=\"token operator\">=</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'video'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> isPaused <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* Flag for auto-paused video */</span>\n<span class=\"token keyword\">let</span> observer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IntersectionObserver</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">entries<span class=\"token punctuation\">,</span> observer</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span> \n  entries<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">entry</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">if</span><span class=\"token punctuation\">(</span>entry<span class=\"token punctuation\">.</span><span class=\"token property-access\">intersectionRatio</span><span class=\"token operator\">!=</span><span class=\"token number\">1</span>  <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>video<span class=\"token punctuation\">.</span><span class=\"token property-access\">paused</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      video<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">pause</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> isPaused <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword control-flow\">else</span> <span class=\"token keyword control-flow\">if</span><span class=\"token punctuation\">(</span>isPaused<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>video<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> isPaused<span class=\"token operator\">=</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>threshold<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nobserver<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">observe</span><span class=\"token punctuation\">(</span>video<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<h2 id=\"ứng-dụng-3-toggle-class-khi-header-sticky\"><a href=\"#%E1%BB%A9ng-d%E1%BB%A5ng-3-toggle-class-khi-header-sticky\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Ứng dụng 3: Toggle class khi header sticky</h2>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> primaryNav <span class=\"token operator\">=</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'primaryNav'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">callBack</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    e<span class=\"token punctuation\">.</span><span class=\"token property-access\">target</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">classList</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toggle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sticky\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span><span class=\"token property-access\">intersectionRatio</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> observer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IntersectionObserver</span><span class=\"token punctuation\">(</span> \n    callBack<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> threshold<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nobserver<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">observe</span><span class=\"token punctuation\">(</span>primaryNav<span class=\"token punctuation\">)</span></code></pre>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token property\">prefers-reduced-motion</span><span class=\"token punctuation\">:</span> no-preference<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token selector\"><span class=\"token class\">.scroller</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">scroll-behavior</span><span class=\"token punctuation\">:</span> smooth<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Tham khảo</p>\n<ul>\n<li><a href=\"https://alligator.io/js/intersection-observer/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://alligator.io/js/intersection-observer/</a></li>\n<li><a href=\"https://css-tricks.com/a-few-functional-uses-for-intersection-observer-to-know-when-an-element-is-in-view/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://css-tricks.com/a-few-functional-uses-for-intersection-observer-to-know-when-an-element-is-in-view/</a></li>\n<li><a href=\"https://www.smashingmagazine.com/2021/07/dynamic-header-intersection-observer/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.smashingmagazine.com/2021/07/dynamic-header-intersection-observer/</a></li>\n</ul>\n","cover_image":"","related":[{"id":"89de1c757498a4b9f6dfef7a689dd2a6","path":"/lua-chon-framework-frontend-nao-trong-thoi-diem-hien-tai/","title":"Lựa chọn framework frontend nào trong thời điểm hiện tại","desc":"Đây không phải là một bài so sánh đâu mới là framework chạy nhanh nhất"},{"id":"2a76cc1592a0e7b9c770d44021f6c9dd","path":"/5-diem-khac-nhau-giua-function-thuong-va-arrow-function/","title":"5 điểm khác nhau giữa function thường và arrow function","desc":"Lựa chọn cách viết nào cho phù hợp theo tính huống đang cần là cái chúng ta sẽ có được câu trả lời khi đi qua 5 điểm khác biệt này"},{"id":"3a6380cc71f067cbeb40825b4adb02e4","path":"/giai-thich-flux-pattern-theo-phong-cach-john-wick/","title":"Giải thích Flux Pattern theo phong cách John Wick","desc":"Điểm lại các khái niệm trong Flux action, dispatch, store, điều kiện tiên quyết đề đọc bài này là nên xem lại John Wick"}]}},"context":{}}