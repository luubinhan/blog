{"hash":"6000b69201124b9452c41d38889aba5b11cf5e89","data":{"post":{"title":"Tổng quát về canh lề với Flexbox display","path":"/2018-07-04-huong-dan-tong-hop-canh-le-voi-flexbox-alignment/","date":"2018-07-04","timeToRead":1,"tags":[{"id":"css","title":"css","path":"/tag/css/"},{"id":"mobile-web-specialist","title":"mobile-web-specialist","path":"/tag/mobile-web-specialist/"}],"desc":"Bây giờ chưa nắm vững về flexbox và cách canh lề trong flexbox thì thật là thiếu xót trong thời đại 2018, chúng ta đã qua thời xài float, clearfix","content":"<!-- TOC -->\n<ul>\n<li><a href=\"#c%E1%BA%A7n-n%E1%BA%AFm\">Cần nắm</a></li>\n<li><a href=\"#flex-direction\">flex-direction</a></li>\n<li><a href=\"#justify-content\">justify-content</a></li>\n<li><a href=\"#align-items-v%C3%A0-align-self\">align-items và align-self</a></li>\n</ul>\n<!-- /TOC -->\n<h2 id=\"cần-nắm\"><a href=\"#c%E1%BA%A7n-n%E1%BA%AFm\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Cần nắm</h2>\n<p>Khi sử dụng <code class=\"language-text\">display: flex</code> các element con bên trong chúng ta sẽ canh theo 2 phương, gọi là phương ngang và phương đứng</p>\n<p><img src=\"https://cms-assets.tutsplus.com/uploads/users/30/posts/30183/image/axes.png\"></p>\n<h2 id=\"flex-direction\"><a href=\"#flex-direction\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>flex-direction</h2>\n<p><code class=\"language-text\">flex-direction</code> sẽ có 4 giá trị để ta set</p>\n<ol>\n<li><code class=\"language-text\">flex-direction: row</code>: element con xếp theo từng hàng, chỉ xuống hàng khi set <code class=\"language-text\">flex-wrap: wrap</code>, hoặc viết tắt 2 thuộc tính này lại thành <code class=\"language-text\">flex-flow: row wrap</code></li>\n<li><code class=\"language-text\">flex-direction: row-reserve</code>: element con xếp thèo hàng đi từ phải qua trái</li>\n<li><code class=\"language-text\">flex-direction: column</code>: element con xếp theo cột từ trên xuống dưới</li>\n<li><code class=\"language-text\">flex-direction: column-reserve</code>: element con xếp theo cột từ dưới lên trên</li>\n</ol>\n<p><img src=\"http://codropspz.tympanus.netdna-cdn.com/codrops/wp-content/uploads/2015/02/flex-direction-illustration.jpg\"></p>\n<h2 id=\"justify-content\"><a href=\"#justify-content\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>justify-content</h2>\n<p>Với <code class=\"language-text\">justify-content</code> sẽ ảnh hưởng tới <strong>phương ngang</strong> của các element con, nếu <code class=\"language-text\">.container</code> chúng ta xếp các element theo dạng row (mặc định khi set <code class=\"language-text\">display: flex</code>), chúng ta can thiệp chiều xếp element con trong row này bằng <code class=\"language-text\">justify-content</code></p>\n<ol>\n<li><code class=\"language-text\">flex-start</code> : elements từ trái qua phải trong 1 row</li>\n<li><code class=\"language-text\">flex-end</code>: elements từ phải qua trái trong 1 row</li>\n<li><code class=\"language-text\">center</code>: dàn các element từ giữa ra 2 bên</li>\n<li><code class=\"language-text\">space-between</code>: dàn các element đều hết 1 row, chỉ chừa khoảng trống giữa 2 element, không chừa khoảng trống 2 element cuối</li>\n<li><code class=\"language-text\">space-around</code>: tương tự như <code class=\"language-text\">space-around</code> nhưng chừa luôn khoảng trống 2 element cuối</li>\n</ol>\n<p><img src=\"https://uploads.toptal.io/blog/image/122559/toptal-blog-image-1490181185089.2_newsletter_copy_11-ac07811eeed0c992b21c660cd6119ca8.jpg\"></p>\n<h2 id=\"align-items-và-align-self\"><a href=\"#align-items-v%C3%A0-align-self\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>align-items và align-self</h2>\n<p>Thuộc tính <code class=\"language-text\">align-items</code> sẽ ảnh hưởng đến <strong>phương đứng</strong> của element con, nếu <code class=\"language-text\">align-items</code> dùng để set ở <code class=\"language-text\">.container</code>, thì <code class=\"language-text\">align-self</code> sẽ set ở element con để đè lại giá trị trên từng thằng con</p>\n<p>Cả 2 thằng này đều có thể dùng các giá trị sau</p>\n<ol>\n<li><code class=\"language-text\">auto</code> giá trị <code class=\"language-text\">align-self</code> kế thừa từ <code class=\"language-text\">align-items</code>, mặc định của <code class=\"language-text\">align-self</code></li>\n<li><code class=\"language-text\">flex-start</code>: canh từ trên xuống</li>\n<li><code class=\"language-text\">flex-end</code>: canh từ dưới lên</li>\n<li><code class=\"language-text\">center</code>: canh từ giữa ra trên dưới</li>\n<li><code class=\"language-text\">baseline</code>: canh theo baseline của các element nằm ngang nhau</li>\n<li><code class=\"language-text\">stretch</code>: kéo độ cao của element để phủ hết chiều đứng của <code class=\"language-text\">.container</code></li>\n</ol>\n<p><img src=\"https://image.slidesharecdn.com/css3-layoutinctrlpdf-130218082731-phpapp01/95/slide-53-1024.jpg\"></p>\n","cover_image":"","related":[{"id":"cae4956884d6ce9480251db3294a42ca","path":"/2019-10-17-viet-test-js/","title":"Tổng quát về viết unit test cho FE","desc":"Cái nhìn tổng quát để bạn có thể bắt đầu làm quen với test, những khái niệm, vấn đề gặp thường xuyên khi viết test"},{"id":"cad93a1c7d14fac9d3f26a77aff31d1d","path":"/2016-11-19-phan-5-es6-can-ban-template-literals/","title":"Hồi 5: ES6 căn bản - Template literals","desc":"Hồi 5 trong series ES6 căn bản, nói về Template literals, một nâng cấp lớn cho string"},{"id":"1ba061475abb23bc0355ce6df2e57b4c","path":"/2020-02-15-7-ly-do-chinh-dang-khuyen-ban-khong-nen-dung-typescript/","title":"7 lý do bạn không nên sử dụng TypeScript","desc":"TypeScript có phải là con ác chủ bài, ngôn ngữ của tương lai, viết TypeScript thì mọi thứ sẽ không thể nào còn lỗi, những lý do khiến bạn phải suy nghĩ lại những nhận định trên"}]}},"context":{}}