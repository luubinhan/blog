{"hash":"6175dd7c207af29dae90f46c78c7f1565a54745e","data":{"post":{"title":"5 cách viết hay sử dụng trong React","path":"/5-cach-viet-hay-su-dung-trong-react/","slug":"/2018-12-30-mot-so-pattern-hay-su-dung-trong-react","date":"2018-12-30","timeToRead":4,"tags":[{"id":"react","title":"react","path":"/tag/react/"}],"desc":"Điểm qua 6 React Pattern hay gặp trong React","content":"<!-- TOC -->\n<ul>\n<li><a href=\"#render-theo-%C4%91i%E1%BB%81u-ki%E1%BB%87n\">Render theo điều kiện</a></li>\n<li><a href=\"#truy%E1%BB%81n-prop-xu%E1%BB%91ng-c%C3%A1c-component-children\">Truyền prop xuống các component children</a></li>\n<li><a href=\"#higher-order-component\">Higher Order Component</a></li>\n<li><a href=\"#server-side-rendering-%C4%91%E1%BB%83-t%E1%BB%91i-%C6%B0u-seo\">Server-side rendering để tối ưu SEO</a></li>\n<li><a href=\"#inline-style-v%C3%A0-css-import\">Inline style và CSS Import</a></li>\n</ul>\n<!-- /TOC -->\n<h2 id=\"render-theo-điều-kiện\"><a href=\"#render-theo-%C4%91i%E1%BB%81u-ki%E1%BB%87n\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Render theo điều kiện</h2>\n<p>Nếu đang viết câu render theo điều kiện như bên dưới.</p>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> condition <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\"><span class=\"token maybe-class-name\">App</span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">const</span> innerContent <span class=\"token operator\">=</span> condition <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n\t\t\t</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Show me</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n\t\t</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token keyword null nil\">null</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">(</span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n\t\t\t</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Always visible</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n\t\t\t</span><span class=\"token punctuation\">{</span> innerContent <span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n\t\t</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Cách viết ở trên có sẽ dễ rơi vào tình trạng mất kiểm soát khi có nhiều hơn 1 câu điều kiện rút gọn ở trước hàm <code>render</code>. Bạn phải mò mẫm lại các hàm bên trong để biết element nào sẽ được render.</p>\n<p>Xem xét cách viết sau</p>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> condition <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\"><span class=\"token maybe-class-name\">App</span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n\t\t</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Always visible</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n\t\t</span><span class=\"token punctuation\">{</span>\n\t\t\tcondition <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n\t\t\t\t\t</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Show me</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n\t\t\t\t</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n\t</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">)</span></code></pre>\n<p>Nếu giá trị của <code>condition</code> là <code>false</code>, đoạn sau <code>&#x26;&#x26;</code>  sẽ ko được đếm xỉa.</p>\n<h2 id=\"truyền-prop-xuống-các-component-children\"><a href=\"#truy%E1%BB%81n-prop-xu%E1%BB%91ng-c%C3%A1c-component-children\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Truyền prop xuống các component children</h2>\n<p>Khi chúng ta cần truyền các prop xuống các component bên dưới, dùng kiểu <strong>destructuring object</strong>, không cần quan tâm đến tên chính xác truyền qua từng prop</p>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\"><span class=\"token maybe-class-name\">Details</span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span> <span class=\"token parameter\"><span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">,</span> language <span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n\t\t</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span> name <span class=\"token punctuation\">}</span><span class=\"token plain-text\"> works with </span><span class=\"token punctuation\">{</span> language <span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n\t</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\"><span class=\"token maybe-class-name\">Layout</span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span> <span class=\"token parameter\"><span class=\"token punctuation\">{</span> title<span class=\"token punctuation\">,</span> <span class=\"token spread operator\">...</span>props <span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n\t\t</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>title<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n\t\t</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Details</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token spread operator\">...</span>props<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n\t</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\"><span class=\"token maybe-class-name\">App</span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Layout</span></span>\n\t\t<span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>I<span class=\"token punctuation\">'</span>m here to stay<span class=\"token punctuation\">\"</span></span>\n\t\t<span class=\"token attr-name\">language</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Javascript<span class=\"token punctuation\">\"</span></span>\n\t\t<span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Alex<span class=\"token punctuation\">\"</span></span>\n\t<span class=\"token punctuation\">/></span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<h2 id=\"higher-order-component\"><a href=\"#higher-order-component\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Higher Order Component</h2>\n<p>React đã bỏ <code>React.createElement</code> và <em>mixins</em>, HOCs là lựa chọn còn lại duy nhất khi bạn muốn sử dụng cùng 1 component với nhiều version khác nhau.</p>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">withProps</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">newProps</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">(</span> <span class=\"token parameter\"><span class=\"token maybe-class-name\">WrappedComponent</span></span> <span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">const</span> <span class=\"token function-variable function\"><span class=\"token maybe-class-name\">ModifiedComponent</span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">ownProps</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">(</span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">WrappedComponent</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token spread operator\">...</span>ownProps<span class=\"token punctuation\">}</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token spread operator\">...</span>newProps<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span>\n\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword control-flow\">return</span> <span class=\"token maybe-class-name\">ModifiedComponent</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\"><span class=\"token maybe-class-name\">Details</span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">,</span> title<span class=\"token punctuation\">,</span> language <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n\t\t</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"> </span><span class=\"token punctuation\">{</span>title<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n\t\t</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> works with </span><span class=\"token punctuation\">{</span>language<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n\t</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> newProps <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">\"An\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token maybe-class-name\">ModifiedDetails</span> <span class=\"token operator\">=</span> <span class=\"token function\">withProps</span><span class=\"token punctuation\">(</span>newProps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token maybe-class-name\">Details</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\"><span class=\"token maybe-class-name\">App</span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token operator\">&lt;</span><span class=\"token maybe-class-name\">ModifiedDetails</span>\n\t\ttitle<span class=\"token operator\">=</span><span class=\"token string\">\"I'm here to stay\"</span>\n\t\tlanguage<span class=\"token operator\">=</span>\"<span class=\"token maybe-class-name\">Javascript”</span>\n\t<span class=\"token operator\">/</span><span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span></code></pre>\n<p>Nếu bạn quá thích HOC, có thể tham khảo để dùng thêm thư viện này <a href=\"https://github.com/acdlite/recompose\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/acdlite/recompose</a></p>\n<h2 id=\"server-side-rendering-để-tối-ưu-seo\"><a href=\"#server-side-rendering-%C4%91%E1%BB%83-t%E1%BB%91i-%C6%B0u-seo\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Server-side rendering để tối ưu SEO</h2>\n<p>Với các ứng dụng Single Page App, có 2 issue thường được đề cập.</p>\n<ol>\n<li>Load lần đầu, javascript không được cache. Và nếu file javascript ban đầu quá lớn thì sẽ ảnh hưởng tới tốc độ load (lazy load sẽ giải quyết vấn đề này)</li>\n<li>Vì javascript sẽ đảm nhiệm render ở client, các con crawler của search engine sẽ không thể đọc được nội dung trang.</li>\n</ol>\n<p>Chúng ta giải quyết các issue này bằng Server Side Rendering. Tuy nhiên chi phí phát triển sẽ tăng lên bởi chúng ta buộc phải mua server chạy Node/Express.</p>\n<p>Trong trường hợp bạn chỉ quan tâm tới Server Rendering vì SEO, thì google giờ đây đã cập nhập con crawler của nó để đọc được nội dung file javascript, Google đã phát triển nó từ năm 2016 và giờ đây thuật toán đã chạy hết sức trơn tru.</p>\n<p>Trường hợp bạn quan tâm tới một số lợi ích khác của SSR như cache file, thì xài Next.js luôn chứ đừng ngồi mò config thủ công mất thời gian công sức.</p>\n<h2 id=\"inline-style-và-css-import\"><a href=\"#inline-style-v%C3%A0-css-import\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Inline style và CSS Import</h2>\n<p>React khuyến khích chúng ta nhìn ứng dụng trên góc độ các component, stylesheet được khuyến khích \"dính\" chặt với từng component.</p>\n<p>Có rất nhiều cách được giới thiệu để viết CSS chung trong file JS. Kiểu inline style cũng được dùng rộng rãi trong React Native.</p>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> divStyle <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\tmargin<span class=\"token operator\">:</span> <span class=\"token string\">'40px'</span><span class=\"token punctuation\">,</span>\n\tborder<span class=\"token operator\">:</span> <span class=\"token string\">'5px solid pink'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> pStyle <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\tfontSize<span class=\"token operator\">:</span> <span class=\"token string\">'15px'</span><span class=\"token punctuation\">,</span>\n\ttextAlign<span class=\"token operator\">:</span> <span class=\"token string\">'center'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\"><span class=\"token maybe-class-name\">TextBox</span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>divStyle<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n\t\t</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>pStyle<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Yeah!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n\t</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">)</span></code></pre>\n<p>Chúng ta không còn phải import CSS, tuy nhiên bạn có bao giờ nghĩ đến chuyện maintain và đọc lại những đoạn code CSS như thế ?. Bạn cũng không có <em>media queries</em> nữa, <em>pseudo class</em> và <em>pseudo element</em> cũng không còn.</p>\n<p>Nếu cảm thấy mệt với kiểu inline style, bạn xem thử cách sau, CSS-in-JS, hay còn gọi <em>styled-component</em>.</p>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> <span class=\"token maybe-class-name\">Text</span> <span class=\"token operator\">=</span> styled<span class=\"token punctuation\">.</span><span class=\"token property-access\">div</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token css language-css\">\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token color\">white</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> <span class=\"token color\">black</span>\n</span><span class=\"token template-punctuation string\">`</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Text</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">This is CSS-in-JS</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Text</span></span><span class=\"token punctuation\">></span></span></code></pre>\n<p>Lúc render thì nó sẽ thành như vầy</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n<span class=\"token selector\"><span class=\"token class\">.hash234dd2</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> <span class=\"token color\">black</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token color\">white</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>hash234dd3<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>This is CSS-in-JS<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>Khác với kiểu render inline, nó vẫn render thẻ style và CSS</p>\n<p>Các Pattern để viết trong React có thể nói phát triển không ngừng, bạn thấy cái nào tiện và hay thì dùng, không thì tự tạo ra một kiểu riêng của mình cũng là ý hay.</p>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://medium.freecodecamp.org/evolving-patterns-in-react-116140e5fe8f\">Evolving Patterns in React</a></p>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://blog.logrocket.com/5-common-practices-that-you-can-stop-doing-in-react-9e866df5d269\">5 common practices that you can stop doing in React</a></p>\n","cover_image":"","related":[{"id":"02a02d68e2737698423d912c23786ac2","path":"/mot-so-cach-viet-su-dung-trong-react/","title":"Một số cách viết sử dụng trong React","desc":"Tổng hợp các cách làm phổ biến trong React"},{"id":"7463e8e291593f59cc7f6e6c332d9315","path":"/mot-vai-tips-rat-hay-su-dung-trong-javascript/","title":"Một vài tips rất hay sử dụng trong javascript","desc":"Tổng hợp một số cú pháp, cách viết hay dùng hằng ngày"},{"id":"8cd9d8c2dba06fb83a1f7d2ff11853f6","path":"/cach-viet-react-render-props/","title":"Cách viết React render props","desc":"Một trong những pattern để chúng ta có thể sử dụng lại logic"},{"id":"431b04c69be9d0d7ae9bcf9c672a6d4f","path":"/cach-su-dung-ref-trong-react/","title":"Cách sử dụng ref trong React","desc":"Công dụng của ref là để truy cập đến DOM thật trong React, một vài tính huống sử dụng và dùng ref"}]}},"context":{}}