{"hash":"af3c5daaffb7dc8899439685b3381f71faac629f","data":{"post":{"title":"5 kinh nghiệm khi viết arrow function","path":"/5-kinh-nghiem-khi-viet-arrow-function/","date":"2020-02-09","timeToRead":2,"tags":[{"id":"thu-thuat","title":"thu-thuat","path":"/tag/thu-thuat/"},{"id":"javascript","title":"javascript","path":"/tag/javascript/"}],"desc":"Sử dụng arrow function đã quá phổ biến, ai cũng biết nó là gì, không cần một bài giới thiệu vài dòng nữa, bài viết này chia sẻ 5 kinh nghiệm để bạn làm việc với arrow function thêm mượt mà","content":"<!-- TOC -->\n<ul>\n<li><a href=\"#g%C3%A1n-t%C3%AAn-cho-arrow-function\">Gán tên cho arrow function</a></li>\n<li><a href=\"#inline-khi-n%C3%A0o-c%C3%B3-th%E1%BB%83\">Inline khi nào có thể</a></li>\n<li><a href=\"#s%E1%BB%AD-d%E1%BB%A5ng-v%E1%BB%9Bi-ph%C3%A9p-so-s%C3%A1nh\">Sử dụng với phép so sánh</a></li>\n<li><a href=\"#s%E1%BB%AD-d%E1%BB%A5ng-v%E1%BB%9Bi-object-literal\">Sử dụng với object literal</a></li>\n<li><a href=\"#h%E1%BA%A1n-ch%E1%BA%BF-l%E1%BB%93ng-nhi%E1%BB%81u-arrow-function\">Hạn chế lồng nhiều arrow function</a></li>\n</ul>\n<!-- /TOC -->\n<h2 id=\"gán-tên-cho-arrow-function\"><a href=\"#g%C3%A1n-t%C3%AAn-cho-arrow-function\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Gán tên cho arrow function</h2>\n<p>arrow function trong javascript là một <code class=\"language-text\">anonymous</code> (hàm không có tên), nếu gọi vào <code class=\"language-text\">name</code> của nó chúng ta sẽ nhận được một chuỗi rỗng</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">(</span><span class=\"token parameter\">number</span> <span class=\"token arrow operator\">=></span> number <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">name</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// => ''</span></code></pre>\n<p>Trong lúc debug hoặc phân tích call stack, hàm dạng <code class=\"language-text\">anonymous</code> rất khó chịu vì không biết đang chạy <em>cái gì</em></p>\n<p><img src=\"https://dmitripavlutin.com/static/da011c996cd4544e2e5131e5862c85b6/f8b1b/anonymous-arrow-functions-3.webp\" alt=\"Đó mà biết được đang chạy cái gì nếu chỉ hiện thị anonymous\"></p>\n<p>Bên cột call stack có 2 function <code class=\"language-text\">anonymous</code>, không có bất kỳ thông tin nào được trích xuất ra cho chúng ta ở đây.</p>\n<p>Nhưng nếu chúng ta khai báo một biến nắm giữ arrow function, Javascript lúc này lại <em>ngầm</em> hiểu nó là tên cho function đó (các đặc tính khác của arrow function không đổi)</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">increaseNumber</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">number</span> <span class=\"token arrow operator\">=></span> number <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\nincreaseNumber<span class=\"token punctuation\">.</span><span class=\"token property-access\">name</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// => 'increaseNumber'</span></code></pre>\n<p>Lúc debug, nó đã hiện nguyên hình</p>\n<p><img src=\"https://dmitripavlutin.com/static/7cf0de61d6b0cd2fb01e9cfb145e8708/c04be/named-arrow-functions-2.png\" alt=\"Anonymous arrow functions call stack\" title=\"Anonymous arrow functions call stack\"></p>\n<h2 id=\"inline-khi-nào-có-thể\"><a href=\"#inline-khi-n%C3%A0o-c%C3%B3-th%E1%BB%83\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Inline khi nào có thể</h2>\n<p>Thay vì phải viết một cách dài dòng</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\narray<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">number</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> number <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Chúng ta có thể bỏ hẳn <code class=\"language-text\">{}</code> và <code class=\"language-text\">return</code>, ở dạng một expression</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\narray<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">number</span> <span class=\"token arrow operator\">=></span> number <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<h2 id=\"sử-dụng-với-phép-so-sánh\"><a href=\"#s%E1%BB%AD-d%E1%BB%A5ng-v%E1%BB%9Bi-ph%C3%A9p-so-s%C3%A1nh\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Sử dụng với phép so sánh</h2>\n<p>Các phép so sánh <code class=\"language-text\">&lt;=</code>, <code class=\"language-text\">&gt;=</code> nhiều khi dễ gây nhầm lẫn khi đứng chung với <code class=\"language-text\">=&gt;</code></p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">negativeToZero</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">number</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">(</span>number <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Để không <em>đánh đố</em> người đọc, bọc nó lại trong dấu ngoặc đơn <code class=\"language-text\">()</code></p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">negativeToZero</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">number</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">(</span>number <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//hoặc một cách tường minh</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">negativeToZero</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">number</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> number <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> number<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre>\n<h2 id=\"sử-dụng-với-object-literal\"><a href=\"#s%E1%BB%AD-d%E1%BB%A5ng-v%E1%BB%9Bi-object-literal\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Sử dụng với object literal</h2>\n<p>Nếu viết object literal như bên dưới chắc chắn bạn bị báo lỗi</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// throws SyntaxError!</span>\narray<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">number</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span> <span class=\"token string\">'number'</span><span class=\"token operator\">:</span> number <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Đừng quên thêm ngoặc đơn cho nó</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Works!</span>\narray<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">number</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token string\">'number'</span><span class=\"token operator\">:</span> number <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// có nhiều property</span>\narray<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">number</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">'number'</span><span class=\"token operator\">:</span> number\n  <span class=\"token string\">'propA'</span><span class=\"token operator\">:</span> <span class=\"token string\">'value A'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'propB'</span><span class=\"token operator\">:</span> <span class=\"token string\">'value B'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<h2 id=\"hạn-chế-lồng-nhiều-arrow-function\"><a href=\"#h%E1%BA%A1n-ch%E1%BA%BF-l%E1%BB%93ng-nhi%E1%BB%81u-arrow-function\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Hạn chế lồng nhiều arrow function</h2>\n<p>Thí dụ có một button, sau khi click chúng ta request lên server, sau khi nhận được giá trị, log xuống trình duyệt</p>\n<pre class=\"language-js\"><code class=\"language-js\">myButton<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/items.json'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span> <span class=\"token arrow operator\">=></span> response<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">json</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n      json<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">.</span><span class=\"token property-access\">name</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Viết vậy, <em>thiên hạ</em> chê khó đọc. Cân nhắc cách viết sau</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">readItemsJson</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">json</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  json<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span> <span class=\"token arrow operator\">=></span> <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">.</span><span class=\"token property-access\">name</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handleButtonClick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/items.json'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span> <span class=\"token arrow operator\">=></span> response<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span>readItemsJson<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nmyButton<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> handleButtonClick<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Muốn <em>ngon</em> hơn là dùng <code class=\"language-text\">async/await</code></p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handleButtonClick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/items.json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> json <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> response<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  json<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span> <span class=\"token arrow operator\">=></span> <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">.</span><span class=\"token property-access\">name</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nmyButton<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> handleButtonClick<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p><a href=\"https://dmitripavlutin.com/javascript-arrow-functions-best-practices/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">5 Best Practices to Write Quality Arrow Functions</a></p>\n","cover_image":"","related":[{"id":"947609e16439d2c38254d1167ee07c91","path":"/10-kinh-nghiem-khi-lam-viec-voi-cac-du-an-lon-viet-bang-vue-js/","title":"10 kinh nghiệm khi làm việc với các dự án lớn viết bằng Vue.js","desc":"Đây là 10 kinh nghiệm được đúc kết trong lúc làm việc với các bộ source lớn. Vấn đề với tất cả các bộ source lớn là nó rất khó để bảo trì."},{"id":"0183c70aa00c719cd899fece97b05577","path":"/kinh-nghiem-to-chuc-vuex-cho-ung-dung-lon/","title":"Kinh nghiệm tổ chức Vuex cho ứng dụng lớn","desc":"Nếu bạn đã sử dụng thông thạo Vuex để tạo các ứng dụng be bé như ToDo list, Shopping Cart, hãy nâng trình của mình lên bằng các ứng dụng có nhiều dữ liệu hơn."},{"id":"4be93db6e537bdcb646a0586abd148e5","path":"/kinh-nghiem-to-chuc-file-va-thu-muc-react-project/","title":"Kinh nghiệm tổ chức file và thư mục React project","desc":"Có bao giờ cảm thấy lạc lối trong đóng code ngày càng lúc bự ra, một vài tip từ người có kinh nghiệm"},{"id":"2a76cc1592a0e7b9c770d44021f6c9dd","path":"/5-diem-khac-nhau-giua-function-thuong-va-arrow-function/","title":"5 điểm khác nhau giữa function thường và arrow function","desc":"Lựa chọn cách viết nào cho phù hợp theo tính huống đang cần là cái chúng ta sẽ có được câu trả lời khi đi qua 5 điểm khác biệt này"}]}},"context":{}}