{"hash":"8b75f5cf7fb75a286e305cc75095c7218ff05729","data":{"post":{"title":"Quản lý state: nhận định boolean tốt và không tốt","path":"/quan-ly-state-nhan-dinh-boolean-tot-va-khong-tot/","slug":"2021-05-31-huong-dan-viet-boolean","date":"2021-05-31","timeToRead":1,"tags":[{"id":"js","title":"js","path":"/tag/js/"}],"desc":"","content":"<p>Tóm tắt nếu bạn lười đọc:</p>\n<blockquote>\n<p><code class=\"language-text\">boolean</code> không tốt đại diện cho <code class=\"language-text\">state</code>, <code class=\"language-text\">boolean</code> tốt là kết quả tính từ <code class=\"language-text\">state</code></p>\n</blockquote>\n<p>Một ví dụ dễ thấy nhất với <code class=\"language-text\">boolean</code> không tốt là cách thiết kế <code class=\"language-text\">state</code> như vầy</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> isLoading <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> isComplete <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> hasError <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Thoạt nhìn chúng ta sẽ nghĩ nó tốt. Chúng ta đưa ra 3 <code class=\"language-text\">state</code> khác nhau ứng với 3 giá trị <code class=\"language-text\">boolean</code> riêng biệt, chỉ duy nhất một giá trị là <code class=\"language-text\">true</code> </p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">makeFetch</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  isLoading <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword control-flow\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/users'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    isComplete <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword control-flow\">catch</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    hasErrored <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  isLoading <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Nhưng khi nghĩ kỹ lại, chúng ta sẽ nhận được 2 giá trị <code class=\"language-text\">true</code> nếu <code class=\"language-text\">makeFetch</code> được gọi lại lần nữa</p>\n<pre class=\"language-js\"><code class=\"language-js\">isLoading <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\nisComplete <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\nhasError <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></code></pre>\n<p><strong>Vậy làm sao để thiết kế một <code class=\"language-text\">boolean</code> tốt cho trường hợp trên?</strong></p>\n<p><code class=\"language-text\">State</code> ở đây chúng ta sẽ có tất cả các giá trị sau</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> statusEnum <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\tidle<span class=\"token operator\">:</span> <span class=\"token string\">'idle'</span><span class=\"token punctuation\">,</span>\n\tloading<span class=\"token operator\">:</span> <span class=\"token string\">'loading'</span><span class=\"token punctuation\">,</span>\n\tcomplete<span class=\"token operator\">:</span> <span class=\"token string\">'complete'</span><span class=\"token punctuation\">,</span>\n\terror<span class=\"token operator\">:</span> <span class=\"token string\">'error'</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Và chúng ta dùng nó trong hàm <code class=\"language-text\">makeFetch</code></p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">makeFetch</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  status <span class=\"token operator\">=</span> statusEnum<span class=\"token punctuation\">.</span><span class=\"token property-access\">loading</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword control-flow\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/users'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    status <span class=\"token operator\">=</span> statusEnum<span class=\"token punctuation\">.</span><span class=\"token property-access\">complete</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword control-flow\">catch</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    status <span class=\"token operator\">=</span> statusEnum<span class=\"token punctuation\">.</span><span class=\"token property-access\">error</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Cần giá trị <code class=\"language-text\">boolean</code> bạn <em>tính</em> từ giá trị <code class=\"language-text\">state</code></p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">isLoading</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">status</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> status <span class=\"token operator\">===</span> statusEnum<span class=\"token punctuation\">.</span><span class=\"token property-access\">loading</span><span class=\"token punctuation\">;</span></code></pre>\n","cover_image":"","related":[{"id":"399b91323d4985064172d8d9c1bb57c4","path":"/functional-programing-nen-va-khong-nen/","title":"Functional programing nên và không nên","desc":""},{"id":"756b1766138731f4a766ba12486ddb4c","path":"/tom-tat-qua-trinh-render-cua-trinh-duyet/","title":"Tóm tắt quá trình render của trình duyệt","desc":"Tóm lược các bước chính trình duyệt cần thực hiện để render một trang web"},{"id":"d7c5a1be37f6b7aa2083d3afe80563b9","path":"/nhung-tinh-nang-co-ban-cua-firebase/","title":"Những tính năng cở bản của Firebase","desc":"Năm 2016 google giới thiệu Firebase. Khi bắt đầu phát triển ứng dụng điện thoại, bạn sẽ cần đến server và một developer để làm việc với server"},{"id":"472aed2f456f73d1de1bf6c896eea774","path":"/quan-ly-du-an-theo-agile-va-scrum-cho-nguoi-moi-bat-dau/","title":"Quản lý dự án theo Agile và Scrum cho người mới bắt đầu","desc":"Giải thích một trong những thuật ngữ rất phổ biến của quy trình phát triển phần mềm"}]}},"context":{}}