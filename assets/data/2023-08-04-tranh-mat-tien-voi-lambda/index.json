{"hash":"e1532d0aebaf3bcf47bbf8a08cbde03cecbbc9cf","data":{"post":{"title":"Lưu ý khi sử dụng AWS Lambda để tránh mất tiền","path":"/2023-08-04-tranh-mat-tien-voi-lambda/","slug":"2023-08-04-tranh-mat-tien-voi-lambda","date":"2023-08-04","timeToRead":5,"tags":[{"id":"aws","title":"aws","path":"/tag/aws/"},{"id":"beginner","title":"beginner","path":"/tag/beginner/"},{"id":"dev-ops","title":"dev-ops","path":"/tag/dev-ops/"}],"desc":"Khi chúng ta sử dụng đúng lúc đúng nơi, những dịch vụ serverless như Lambda sẽ rẻ hơn so với hệ thống bình thường, chúng ta vẫn nghe quảng cáo nhan nhản serverless thì xài nhiêu trả nhiêu, an toàn hơn, khả năng mở rộng và phục hồi tốt hơn cách truyền thống, có thật sự đúng như quảng cáo không?","content":"<!-- TOC -->\n<ul>\n<li><a href=\"#kh%C3%B4ng-%C4%91%E1%BB%83-%C3%BD-chi-ph%C3%AD-logging-v%C3%A0-monitor\">Không để ý chi phí logging và monitor</a></li>\n<li><a href=\"#%C4%91%E1%BB%8Dc-k%E1%BB%B9-h%C6%B0%E1%BB%9Bng-d%E1%BA%ABn-s%E1%BB%AD-d%E1%BB%A5ng-tr%C6%B0%E1%BB%9Bc-khi-d%C3%B9ng\">Đọc kỹ hướng dẫn sử dụng trước khi dùng</a></li>\n<li><a href=\"#kh%C3%B4ng-ch%E1%BB%8Bu-b%E1%BA%ADt-th%C3%B4ng-b%C3%A1o\">Không chịu bật thông báo</a></li>\n<li><a href=\"#lambda-g%E1%BB%8Di-lambda-theo-c%C6%A1-ch%E1%BA%BF-synchronous\">Lambda gọi Lambda theo cơ chế Synchronous</a></li>\n<li><a href=\"#kh%C3%B4ng-cache\">Không cache</a></li>\n<li><a href=\"#c%E1%BA%A5p-qu%C3%A1-nhi%E1%BB%81u-t%C3%A0i-nguy%C3%AAn\">Cấp quá nhiều tài nguyên</a></li>\n<li><a href=\"#ki%E1%BA%BFn-tr%C3%BAc-c%E1%BB%A7-chu%E1%BB%91i\">Kiến trúc củ chuối</a></li>\n</ul>\n<!-- /TOC -->\n<p>Vâng đúng nhưng không phải trong mọi hoàn cảnh, chiếc chìa khóa vạn năngcó thể giải quyết mọi yêu cầu hệ thống. Khi thiết kế một hệ thống chúng ta phải cân nhắc đến việc cho nó tiến hóa theo nhu cầu, cũng giống như những phần mềm chúng ta viết ra điều phải thay đổi để thích nghi và đáp ứng nhu cầu mới của khách hàng</p>\n<p>Chúng ta cùng đi qua một vài lỗi hay gặp và cách khắc phục để tiết kiệm chi phí tối đa</p>\n<h2 id=\"không-để-ý-chi-phí-logging-và-monitor\"><a href=\"#kh%C3%B4ng-%C4%91%E1%BB%83-%C3%BD-chi-ph%C3%AD-logging-v%C3%A0-monitor\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Không để ý chi phí logging và monitor</h2>\n<p>Ghi log và monitor ứng dụng để có thể tìm lỗi và phát hiện nguyên nhân gây lỗi là bắt buộc, nhưng nó đi đôi với chi phí. AWS CloudWatch tính phí cả 2 phần ghi log và lưu trữ log</p>\n<p>Bạn sẽ ngạc nhiên khi phát hiện ra rằng chi phí cho CloudWatch đôi khi còn cao hơn cả cho Lambda và API Gateway</p>\n<p>Để giải quyết:</p>\n<ol>\n<li>Log <code class=\"language-inline-text\">INFO</code> hay <code class=\"language-inline-text\">ERROR</code> chỉ trên môi trường production</li>\n<li>Chỉ giữ log thật sự hữu ích nhất để debug trên production</li>\n<li>Lưu log trong 30 ngày là vừa đủ để debug mà không làm đội chi phí lưu trữ</li>\n</ol>\n<p>Nếu đã có log được lưu ở một bên thứ 3 khác có thể bỏ qua log CloudWatch</p>\n<h2 id=\"đọc-kỹ-hướng-dẫn-sử-dụng-trước-khi-dùng\"><a href=\"#%C4%91%E1%BB%8Dc-k%E1%BB%B9-h%C6%B0%E1%BB%9Bng-d%E1%BA%ABn-s%E1%BB%AD-d%E1%BB%A5ng-tr%C6%B0%E1%BB%9Bc-khi-d%C3%B9ng\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Đọc kỹ hướng dẫn sử dụng trước khi dùng</h2>\n<p>Để khỏi “hết hồn” lúc nhận bill cuối tháng, chúng ta cần biết khi bật một tính năng lên sẽ phát sinh thêm những phụ phí, rất nhiều phí chỉ được áp dụng trong những điều kiện cụ thể. Ví dụ như chọn <em>provisioned concurrency</em> cho Lambda sẽ thêm một số phụ phí</p>\n<p><img src=\"https://lumigo.io/wp-content/uploads/2023/07/1_ER0It8JsAuL3D1ECFlUBog-768x349.jpg\"></p>\n<p>Đừng nóng vội hãy luôn nhớ chậm lại một nhịp rồi tìm hiểu cho đầy đủ trước khi muốn sử dụng một dịch vụ nào khác.</p>\n<h2 id=\"không-chịu-bật-thông-báo\"><a href=\"#kh%C3%B4ng-ch%E1%BB%8Bu-b%E1%BA%ADt-th%C3%B4ng-b%C3%A1o\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Không chịu bật thông báo</h2>\n<p>Mọi người cũng hay quên dùng tính năng <em>billing alarm</em> của AWS. Một công cụ tuyệt vời để báo liền cho chúng ta để biết được những khoản chi chúng ta đã bỏ ra có vượt ngoài tầm kiểm soát không</p>\n<p>Cài đặt Billing Alarm nên là điều đầu tiên chúng ta cần làm khi sử dụng AWS trước khi mọi thứ ra vượt ra ngoài tầm kiểm soát.</p>\n<h2 id=\"lambda-gọi-lambda-theo-cơ-chế-synchronous\"><a href=\"#lambda-g%E1%BB%8Di-lambda-theo-c%C6%A1-ch%E1%BA%BF-synchronous\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Lambda gọi Lambda theo cơ chế Synchronous</h2>\n<p>Một Lambda gọi một Lambda khác synchronous nghĩa là Lambda đầu nguồn sẽ <em>ngồi đợi</em> Lambda thứ 2 chạy xong trước khi nó tiếp tục chạy. Nó làm đội lên chi phí khá nhiều vì thời gian ngồi đợi vẫn bị tính phí, giống như lên xe taxi bạn ngồi đợi nhưng đồng hồ đếm tiền vẫn nhảy dù xe không chạy.</p>\n<p>Hãy luôn nhớ gọi Lambda asynchronous bất cứ ở đâu cho phép</p>\n<p><img src=\"https://lumigo.io/wp-content/uploads/2023/07/1__Z1-AG9GVnzRSQW_a77yYQ-768x334.png\"></p>\n<h2 id=\"không-cache\"><a href=\"#kh%C3%B4ng-cache\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Không cache</h2>\n<p>Caching là người bạn thân thiết, hay khắc cốt ghi tâm điều này, caching nghĩa là Lambda sẽ không cần gọi và làm gì cả, kết quả được trả thằng ngay từ API Gateway hay CloudFront. Bên cạnh đó ở ứng dụng có thể cân nhắc sử dụng thêm dịch vụ chuyên cache như ElastiCache hay Memento, hay DynamoDB Accelerator</p>\n<p><img src=\"https://lumigo.io/wp-content/uploads/2023/07/0_9V50W4A0o6-r7bce-768x329.png\"></p>\n<h2 id=\"cấp-quá-nhiều-tài-nguyên\"><a href=\"#c%E1%BA%A5p-qu%C3%A1-nhi%E1%BB%81u-t%C3%A0i-nguy%C3%AAn\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Cấp quá nhiều tài nguyên</h2>\n<p>Cấp quá nhiều memory cho Lambda cũng là một lỗi hay mắc. Lambda được tính phí theo 2 tiêu chi: lượng memory đã sử dụng và thời gian chạy của hàm.</p>\n<p>Câu hỏi là cấp bao nhiêu cho đủ? Công cụ <a href=\"https://github.com/alexcasalboni/aws-lambda-power-tuning\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Lambda Power Tuning</a> sẽ giúp chúng ta xác định lượng memory cần thiết để cân bằng giữa chi phí và hiệu năng</p>\n<p><img src=\"https://lumigo.io/wp-content/uploads/2023/07/0_V70C8Qw83OYgW5FW.png\"></p>\n<h2 id=\"kiến-trúc-củ-chuối\"><a href=\"#ki%E1%BA%BFn-tr%C3%BAc-c%E1%BB%A7-chu%E1%BB%91i\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Kiến trúc củ chuối</h2>\n<p>Kiến trúc mà củ chuối quá thì hậu quả là nhản tiền, vừa tốn chi phí, hiệu năng không tối ưu và lại còn khó vận hành bảo trì</p>\n<p>AWS có rất nhiều service để thực hiện gửi nhận message, như SNS, SQS, EventBridge, Kinesis, ưu nhược điểm là khác nhau và phải hiểu để sử dụng cho đúng mục đích, không khéo chúng ta là đi lấy giao chặt thịt heo đi giết kiến</p>\n<p><img src=\"https://lumigo.io/wp-content/uploads/2023/07/1_WQOGHnPyWMfVIR3yO3D0zA-768x485.jpg\"></p>\n<p>Tương tự, API Gateway cũng tốn khá khá tiền so với ALB nhưng nó có nhiều đồ chơi vượt trội hơn, tiền nào của đó thôi, liệu cơm gấp mắm</p>\n<p><img src=\"https://lumigo.io/wp-content/uploads/2023/07/1_gpJi-nd7tx8etGi0nvKR2A-768x383.png\"></p>\n<p>Mọi sai làm điều là một cơ hội để học hỏi, nên không sợ sai chỉ sợ không học được gì từ những gì mình đã làm sai. Chúc các bạn có một cuộc chơi đỡ tốn tiền hơn trên AWS</p>\n<p><a href=\"https://lumigo.io/blog/save-money-on-serverless-common-costly-mistakes-and-how-to-avoid-them/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Save money on Serverless: common costly mistakes and how to avoid them</a></p>\n","cover_image":"","related":[{"id":"bfa175b4ea3e9a150e447b42a8510c43","path":"/2023-01-21-gioi-thieu-max-concurrency-lambda-sqs/","title":"Giới thiệu maximum concurrency của Lambda khi sử dụng với SQS","desc":"Khi một SQS gọi lambda function chúng ta có thể quyết định số lượng tối đa concurrency của Lambda"},{"id":"965d9068d9d5a644537b89db120d084e","path":"/2021-03-28-mot-vai-luu-y-voi-javascript/","title":"Một vài điều cần lưu ý khi bạn làm việc với JS","desc":"Khi bạn làm việc với JS đủ lâu và ăn hành đủ nhiều bạn sẽ cần biết đến những đặc điểm rất riêng của JS"},{"id":"f535766d417badcb135cb627fa5ea2a6","path":"/2020-02-03-huong-dan-cai-dat-eslint-react-javascript-typescript-vscode/","title":"Thiết đặt ESLint khi sử dụng với Javascript, Typescript, React","desc":"Chúng ta bắt đầu với Javascript trước, sau đó sẽ là TypeScript, và React. Mục tiêu là làm đúng, tránh trường hợp cài package không cần thiết hoặc copy/paste các config tới khi nó chạy được thì thôi."},{"id":"634deea5dc91ddc391f4887cca60e23f","path":"/2017-11-02-mot-vai-cai-tien-google-calendar/","title":"Một vài cải tiến của Google Calendar","desc":"Cách đây hơn một tuần Google Calendar vừa có nâng cấp lên bản mới, cùng nhìn thử giao diện có gì thay đổi"}]}},"context":{}}