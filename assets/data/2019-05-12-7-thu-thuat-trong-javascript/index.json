{"hash":"17f2ebf8e3fad07decd82f546fca8c1f827fe682","data":{"post":{"title":"7 thủ thuật trong javascript","path":"/2019-05-12-7-thu-thuat-trong-javascript/","date":"2019-05-12","timeToRead":2,"tags":[{"id":"javascript","title":"javascript","path":"/tag/javascript/"}],"desc":"7 thủ thuật hữu ích trong javascript","content":"<!-- TOC -->\n<ul>\n<li><a href=\"#l%E1%BA%A5y-t%E1%BA%A5t-c%E1%BA%A3-gi%C3%A1-tr%E1%BB%8B-kh%C3%B4ng-gi%E1%BB%91ng-nhau-trong-array\">Lấy tất cả giá trị không giống nhau trong array</a></li>\n<li><a href=\"#b%E1%BB%8F-qua-t%E1%BA%A5t-c%E1%BA%A3-gi%C3%A1-tr%E1%BB%8B-falsy\">Bỏ qua tất cả giá trị falsy</a></li>\n<li><a href=\"#t%E1%BA%A1o-m%E1%BB%99t-object-r%E1%BB%97ng\">Tạo một object rỗng</a></li>\n<li><a href=\"#merge-object\">Merge object</a></li>\n<li><a href=\"#y%C3%AAu-c%E1%BA%A7u-parameter-cho-function\">Yêu cầu parameter cho function</a></li>\n<li><a href=\"#destructuring-v%C3%A0-alias\">Destructuring và alias</a></li>\n<li><a href=\"#l%E1%BA%A5y-gi%C3%A1-tr%E1%BB%8B-query-string\">Lấy giá trị query string</a></li>\n</ul>\n<!-- /TOC -->\n<h2 id=\"lấy-tất-cả-giá-trị-không-giống-nhau-trong-array\"><a href=\"#l%E1%BA%A5y-t%E1%BA%A5t-c%E1%BA%A3-gi%C3%A1-tr%E1%BB%8B-kh%C3%B4ng-gi%E1%BB%91ng-nhau-trong-array\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Lấy tất cả giá trị không giống nhau trong array</h2>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> j <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token spread operator\">...</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\">// 1,2,3</span></code></pre>\n<h2 id=\"bỏ-qua-tất-cả-giá-trị-falsy\"><a href=\"#b%E1%BB%8F-qua-t%E1%BA%A5t-c%E1%BA%A3-gi%C3%A1-tr%E1%BB%8B-falsy\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Bỏ qua tất cả giá trị falsy</h2>\n<p>Khi cần bỏ quá các giá trị falsy (<code class=\"language-text\">0</code>, <code class=\"language-text\">undefined</code>, <code class=\"language-text\">null</code>, <code class=\"language-text\">false</code>, ... ) khỏi một array</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token maybe-class-name\">MyArray</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">filter</span><span class=\"token punctuation\">(</span><span class=\"token known-class-name class-name\">Boolean</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Đơn giản là đưa vào <code class=\"language-text\">Boolean</code> cho hàm filter</p>\n<h2 id=\"tạo-một-object-rỗng\"><a href=\"#t%E1%BA%A1o-m%E1%BB%99t-object-r%E1%BB%97ng\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Tạo một object rỗng</h2>\n<p>Tất nhiên chúng ta tạo một object rỗng bằng <code class=\"language-text\">{}</code> là chuyện ai cũng biết. Chuyện ít ai biết là với cách đó object tạo ra vẫn chứa <code class=\"language-text\">__proto__</code> và phương thức <code class=\"language-text\">hasOwnProperty</code>. Để thực sự tạo một object rỗng đúng chất rỗng</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> dict <span class=\"token operator\">=</span> <span class=\"token known-class-name class-name\">Object</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">create</span><span class=\"token punctuation\">(</span><span class=\"token keyword null nil\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// dict.__proto__ === \"undefined\"</span></code></pre>\n<h2 id=\"merge-object\"><a href=\"#merge-object\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Merge object</h2>\n<p>Một trong những công việc bạn sẽ làm hàng ngày như ăn cơm bửa, có nhiều bài viết mình đã nhắc đến, nhưng nhắc lại vẫn là ko thừa.</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> person <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">'David Walsh'</span><span class=\"token punctuation\">,</span> gender<span class=\"token operator\">:</span> <span class=\"token string\">'Male'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> tools <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> computer<span class=\"token operator\">:</span> <span class=\"token string\">'Mac'</span><span class=\"token punctuation\">,</span> editor<span class=\"token operator\">:</span> <span class=\"token string\">'Atom'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> attributes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> handsomeness<span class=\"token operator\">:</span> <span class=\"token string\">'Extreme'</span><span class=\"token punctuation\">,</span> hair<span class=\"token operator\">:</span> <span class=\"token string\">'Brown'</span><span class=\"token punctuation\">,</span> eyes<span class=\"token operator\">:</span> <span class=\"token string\">'Blue'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> summary <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token spread operator\">...</span>person<span class=\"token punctuation\">,</span> <span class=\"token spread operator\">...</span>tools<span class=\"token punctuation\">,</span> <span class=\"token spread operator\">...</span>attributes<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">/*\nObject {\n  \"computer\": \"Mac\",\n  \"editor\": \"Atom\",\n  \"eyes\": \"Blue\",\n  \"gender\": \"Male\",\n  \"hair\": \"Brown\",\n  \"handsomeness\": \"Extreme\",\n  \"name\": \"David Walsh\",\n}\n*/</span></code></pre>\n<h2 id=\"yêu-cầu-parameter-cho-function\"><a href=\"#y%C3%AAu-c%E1%BA%A7u-parameter-cho-function\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Yêu cầu parameter cho function</h2>\n<p>Bạn đã biết dùng parameter mặc định cho function nếu ko truyền vào, vậy ngược lại, bắt buộc cung cấp một parameter nào đó thì sao?</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">isRequired</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span> <span class=\"token keyword control-flow\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'param is required'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">hello</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">name <span class=\"token operator\">=</span> <span class=\"token function\">isRequired</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">hello </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Lỗi ngay</span>\n<span class=\"token function\">hello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Lỗi luôn</span>\n<span class=\"token function\">hello</span><span class=\"token punctuation\">(</span><span class=\"token keyword nil\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// OK</span>\n<span class=\"token function\">hello</span><span class=\"token punctuation\">(</span><span class=\"token keyword null nil\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">hello</span><span class=\"token punctuation\">(</span><span class=\"token string\">'David'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<h2 id=\"destructuring-và-alias\"><a href=\"#destructuring-v%C3%A0-alias\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Destructuring và alias</h2>\n<p>Đây cũng chẳng có gì lạ nếu bạn đã nắm destructuring, chúng ta có thể đặt một tên khác để sử dụng</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> x<span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// cách bình thường</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> x <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// dùng tên khác obj.x thành otherName</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> x<span class=\"token operator\">:</span> otherName <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">;</span></code></pre>\n<p>Hay sử dụng cách nào khi bị trùng tên biến</p>\n<h2 id=\"lấy-giá-trị-query-string\"><a href=\"#l%E1%BA%A5y-gi%C3%A1-tr%E1%BB%8B-query-string\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Lấy giá trị query string</h2>\n<p>Trước đây chúng ta có thể sử dụng regular expression để lấy query string, giờ chúng ta có cách chính thức thông qua hàm <code class=\"language-text\">URLSearchParams</code></p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// query string \"?post=1234&amp;action=edit\"</span>\n\n<span class=\"token keyword\">var</span> urlParams <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">URLSearchParams</span><span class=\"token punctuation\">(</span><span class=\"token dom variable\">window</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">location</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">search</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>urlParams<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">has</span><span class=\"token punctuation\">(</span><span class=\"token string\">'post'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>urlParams<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'action'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// edit</span>\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>urlParams<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'action'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [\"edit\"]</span>\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>urlParams<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// \"?post=1234&amp;action=edit\" </span>\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>urlParams<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">'active'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// \"?post=1234&amp;action=edit&amp;active=1\"</span></code></pre>\n<p>Nếu bạn còn trick nào hay ho khác, có thể chia sẽ cùng mọi người?</p>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://davidwalsh.name/javascript-tricks\">7 Useful JavaScript Tricks</a></p>\n","cover_image":"","related":[{"id":"3c61ae3af0a208aaced877dc81a02150","path":"/2019-03-31-huong-dan-7-thu-thuat-trong-gatsby/","title":"7 thủ thuật trong gatsby","desc":"Tập hợp những thủ thuật khi làm việc với gatsby"},{"id":"c764b91e3b81ee538e35cfc01d180b37","path":"/2020-03-12-thu-thuat-su-dung-don-vi-viewport-tren-mobile/","title":"Thủ thuật sử dụng đơn vị viewport trên mobile","desc":"Để có thể quản lý được state của ứng dụng một cách tốt nhất, chúng ta cần sự phân chia phù hợp giữa local state (internal state của component) và state cửa ứng dụng đặt trong React Context. Một vài điều muốn chia sẽ để nâng cao khả năng bảo trì và trải nghiệm nếu sử dụng đến context trong React."},{"id":"6c9e83d801157396289a748804460b25","path":"/2019-11-02-gioi-thieu-thuat-toan-quicksort/","title":"Thuật toán QuickSort","desc":"Một thuật toán rất phổ biến mà chúng ta phải nắm thật chắc và hình dung được cách hiện thực nó ngay khi được nhắc tới."},{"id":"8a96e1bde836a981c3694b7c5bb64b27","path":"/2019-03-23-thu-thuat-lam-viec-voi-object/","title":"8 thủ thuật khi làm việc với Object sử dụng resting và spreading","desc":"Những đoạn code bỏ túi hay xài nhất khi đụng tới object"}]}},"context":{}}