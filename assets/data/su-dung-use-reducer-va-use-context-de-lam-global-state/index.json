{"hash":"e83c60f745ac15ce64c8b2f7d122127cea6c3388","data":{"post":{"title":"Sử dụng useReducer và useContext để làm global state","path":"/su-dung-use-reducer-va-use-context-de-lam-global-state/","date":"2020-01-08","timeToRead":3,"tags":[{"id":"thu-thuat","title":"thu-thuat","path":"/tag/thu-thuat/"},{"id":"react","title":"react","path":"/tag/react/"}],"desc":"","content":"<p>Thông thường chúng ta sẽ dùng một <em>nhà kho</em> để chứa dữ liệu <code class=\"language-text\">state</code> như <em>Redux</em>, một component container bọc ở nút đầu tiên trong app, các component con bên trong có thể truy xuất và cập nhập các dữ liệu một cách dễ dàng</p>\n<p>Với các API mới được React bổ sung là <code class=\"language-text\">useState</code>, <code class=\"language-text\">createContext</code>, <code class=\"language-text\">useContext</code> chúng ta có <em>thêm một lựa chọn</em> để làm <em>nhà kho</em> mà ko cần dùng đến Redux</p>\n<p>Ví dụ chúng ta có 3 dữ liệu như bên dưới</p>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> teamMembersNames <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"John\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Mary\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Jason\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"David\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>sharing<span class=\"token punctuation\">,</span> setSharing<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>help<span class=\"token punctuation\">,</span> setHelp<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>pairing<span class=\"token punctuation\">,</span> setPairing<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">useState</span><span class=\"token punctuation\">(</span>teamMembersNames<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Câu hỏi là làm sao chúng ta đưa dữ liệu vào <em>nhà kho</em>. Chúng ta sẽ dùng API <code class=\"language-text\">createContext</code> (tạo em cái kho)</p>\n<p>Khi sử dụng <code class=\"language-text\">React.createContext</code> chúng ta sẽ nhận về 2 component là <code class=\"language-text\">Provider</code> (anh tung) và <code class=\"language-text\">Consumer</code> (em hứng).</p>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// ./src/utils/store.js</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">const</span> <span class=\"token maybe-class-name\">StoreContext</span> <span class=\"token operator\">=</span> <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">createContext</span><span class=\"token punctuation\">(</span><span class=\"token keyword null nil\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword module\">export</span> <span class=\"token keyword module\">default</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> children <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// các em đã vào nhà kho</span>\n  <span class=\"token keyword\">const</span> teamMembersNames <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"John\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Mary\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Jason\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"David\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>sharing<span class=\"token punctuation\">,</span> setSharing<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>help<span class=\"token punctuation\">,</span> setHelp<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>pairing<span class=\"token punctuation\">,</span> setPairing<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">useState</span><span class=\"token punctuation\">(</span>teamMembersNames<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    sharing<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>sharing<span class=\"token punctuation\">,</span> setSharing<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    help<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>help<span class=\"token punctuation\">,</span> setHelp<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    pairing<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>pairing<span class=\"token punctuation\">,</span> setPairing<span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">StoreContext.Provider</span></span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>store<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">StoreContext.Provider</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Để các component bên trong <code class=\"language-text\">&lt;App/&gt;</code> đều dùng được <code class=\"language-text\">&lt;Consumer /&gt;</code></p>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// ./index.js</span>\n<span class=\"token keyword module\">import</span> <span class=\"token maybe-class-name\">React</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token maybe-class-name\">ReactDOM</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"react-dom\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword module\">import</span> <span class=\"token maybe-class-name\">App</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"./App\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token maybe-class-name\">StoreProvider</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"./utils/store\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token maybe-class-name\">ReactDOM</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">render</span><span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">StoreProvider</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">StoreProvider</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">,</span>\n  <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"root\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Với bất kỳ component nào muốn sử dụng, để lấy được dữ liệu trong store, chúng ta sử dụng <code class=\"language-text\">useContext</code></p>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword module\">import</span> <span class=\"token maybe-class-name\">React</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">StoreContext</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"../utils/store\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\"><span class=\"token maybe-class-name\">SomeComponent</span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// dữ liệu dùng chung</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> sharing <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">useContext</span><span class=\"token punctuation\">(</span><span class=\"token maybe-class-name\">StoreContext</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Hoặc nếu thích dùng cách viết render props, có thể dùng luôn component <code class=\"language-text\">&lt;Consumer/&gt;</code></p>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">StoreContext.Consumer</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token punctuation\">{</span><span class=\"token parameter\">store</span> <span class=\"token arrow operator\">=></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">InputComponent</span></span> <span class=\"token attr-name\">store</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>store<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">StoreContext.Consumer</span></span><span class=\"token punctuation\">></span></span></code></pre>\n<h2 id=\"ứng-dụng-làm-useauth\"><a href=\"#%E1%BB%A9ng-d%E1%BB%A5ng-l%C3%A0m-useauth\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Ứng dụng làm <code class=\"language-text\">useAuth</code></h2>\n<p>Một trong những ví dụ dễ thấy, phần dữ liệu nên đưa vào <em>nhà kho chung</em> là phần thông tin user đang đăng nhập</p>\n<p>Chúng ta sẽ cần 3 phần</p>\n<ol>\n<li>Khai báo một nhà kho bằng <code class=\"language-text\">createContext</code></li>\n<li>Bộ <code class=\"language-text\">reducer</code> làm nhiệm vụ cập nhập xử lý <code class=\"language-text\">state</code></li>\n<li>Một hook tùy biến <code class=\"language-text\">useAuth</code> cung cấp các API cần thiết để tương tác với <em>nhà kho chung</em> đã khai báo</li>\n</ol>\n<p>1) <strong>AuthProvider.js</strong> Khai báo nhà kho (bản rút gọn)</p>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// AuthProvider.js</span>\n<span class=\"token keyword module\">import</span> authReducer <span class=\"token keyword module\">from</span> <span class=\"token string\">\"authReducer\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">const</span> <span class=\"token maybe-class-name\">AuthContext</span> <span class=\"token operator\">=</span> <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">createContext</span><span class=\"token punctuation\">(</span><span class=\"token keyword null nil\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\"><span class=\"token maybe-class-name\">AuthProvider</span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> children <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// khởi tạo</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>state<span class=\"token punctuation\">,</span> dispatch<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useReducer</span><span class=\"token punctuation\">(</span>authReducer<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">AuthContext.Provider</span></span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">[</span>state<span class=\"token punctuation\">,</span> dispatch<span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">AuthContext.Provider</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre>\n<ol start=\"2\">\n<li><strong>authReducer.js</strong> (bản rút gọn)</li>\n</ol>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// authReducer.js</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">authReducer</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state<span class=\"token punctuation\">,</span> action</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">.</span><span class=\"token property-access\">type</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"login\"</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> authResult<span class=\"token punctuation\">,</span> user <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> action<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> expiresAt <span class=\"token operator\">=</span> authResult<span class=\"token punctuation\">.</span><span class=\"token property-access\">expiresIn</span> <span class=\"token operator\">*</span> <span class=\"token number\">1000</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token dom variable\">localStorage</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"expires_at\"</span><span class=\"token punctuation\">,</span> <span class=\"token known-class-name class-name\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">stringify</span><span class=\"token punctuation\">(</span>expiresAt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token dom variable\">localStorage</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">,</span> <span class=\"token known-class-name class-name\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">stringify</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> user<span class=\"token punctuation\">,</span> expiresAt <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"logout\"</span><span class=\"token operator\">:</span>\n      <span class=\"token dom variable\">localStorage</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">removeItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"expires_at\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token dom variable\">localStorage</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">removeItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> user<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> expiresAt<span class=\"token operator\">:</span> <span class=\"token keyword null nil\">null</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword module\">default</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span> state<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<ol start=\"3\">\n<li>Một hook tùy biến <strong><code class=\"language-text\">useAuth</code></strong></li>\n</ol>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// useAuth.js</span>\n<span class=\"token keyword module\">import</span> <span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">AuthProvider</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"AuthProvider\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">useAuth</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> state<span class=\"token punctuation\">,</span> dispatch <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">userContext</span><span class=\"token punctuation\">(</span><span class=\"token maybe-class-name\">AuthContext</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">login</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// làm gì đó ở đây</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">logout</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// làm gì đó ở đây</span>\n        <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> type<span class=\"token operator\">:</span> <span class=\"token string\">\"logout\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// ...  còn một số thức khác</span>\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">isAuthenticated</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> state<span class=\"token punctuation\">.</span><span class=\"token property-access\">expiresAt</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> state<span class=\"token punctuation\">.</span><span class=\"token property-access\">expiresAt</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// ...  còn một số thức khác</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n        isAuthenticated<span class=\"token punctuation\">,</span>\n        user<span class=\"token operator\">:</span> state<span class=\"token punctuation\">.</span><span class=\"token property-access\">user</span><span class=\"token punctuation\">,</span>\n        userId<span class=\"token operator\">:</span> state<span class=\"token punctuation\">.</span><span class=\"token property-access\">user</span> <span class=\"token operator\">?</span> state<span class=\"token punctuation\">.</span><span class=\"token property-access\">user</span> <span class=\"token operator\">:</span> <span class=\"token keyword null nil\">null</span><span class=\"token punctuation\">;</span>\n        login<span class=\"token punctuation\">,</span>\n        logout<span class=\"token punctuation\">,</span>\n        handleAuthentication\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Với cách làm này, bất kỳ component nào sử dụng <code class=\"language-text\">useAuth</code> đều sẽ truy xuất đến một kho dữ liệu <em>chung</em></p>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword module\">import</span> useAuth <span class=\"token keyword module\">from</span> <span class=\"token string\">\"useAuth\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\"><span class=\"token maybe-class-name\">MyCom</span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/* quá trời thứ linh tinh trả về */</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">useAuth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">//...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre>\n<p><a href=\"https://swizec.com/blog/usereducer-usecontext-for-easy-global-state-without-libraries/swizec/9182\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">useReducer + useContext for easy global state without libraries</a></p>\n<p><a href=\"https://dev.to/nazmifeeroz/using-usecontext-and-usestate-hooks-as-a-store-mnm\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Using useContext and useState hooks as a store</a></p>\n","cover_image":"","related":[{"id":"34e1a6e4e7dac657edca4c9832d737dc","path":"/su-dung-tabindex/","title":"Sử dụng tabindex","desc":"Mặc định thứ tự tab theo vị trí của DOM rất hữu dụng, tuy nhiên có trường hợp chúng ta sẽ muốn thay đổi thứ tự tab này. Cùng nghiên cứu tabindex để set thứ tự tab"},{"id":"4c523279be8f4f4319a15bbafd883c6f","path":"/su-dung-flat-state-trong-vue-store/","title":"Sử dụng flat state trong Vue Store","desc":"Nhét những tập dữ liệu lớn trong Vuex store, đặc biệt là các cấu trúc dữ liệu lồng nhau luôn gây ra vấn đề không sớm thì muộn. Bài viết giới thiệu cách tiếp cận với flat state trong Vuex store"},{"id":"12b2cd38bed043dbfa473bf29abfdeb6","path":"/su-dung-react-lazy-ra-lam-sao/","title":"Sử dụng React.lazy ra làm sao?","desc":"Api mới của React 16.6"}]}},"context":{}}