{"hash":"758a6cb1620fd44d4d49859fe95b9857298eb57d","data":{"post":{"title":"Hướng dẫn viết điều kiện security rules cho Cloud Firestore - Phần 2","path":"/huong-dan-viet-dieu-kien-security-rules-cho-cloud-firestore-phan-2/","date":"2018-08-18","timeToRead":3,"tags":[{"id":"firestore","title":"firestore","path":"/tag/firestore/"},{"id":"firebase","title":"firebase","path":"/tag/firebase/"},{"id":"security","title":"security","path":"/tag/security/"}],"desc":"Series hướng dẫn sử dụng các service Firebase","content":"<!-- TOC -->\n<ul>\n<li><a href=\"#x%C3%A1c-th%E1%BB%B1c\">Xác thực</a></li>\n<li><a href=\"#ki%E1%BB%83m-tra-d%E1%BB%AF-li%E1%BB%87u\">Kiểm tra dữ liệu</a></li>\n<li><a href=\"#truy-c%E1%BA%ADp-%C4%91%E1%BA%BFn-c%C3%A1c-documents-kh%C3%A1c\">Truy cập đến các documents khác</a></li>\n<li><a href=\"#h%C3%A0m-t%C3%B9y-bi%E1%BA%BFn\">Hàm tùy biến</a></li>\n</ul>\n<!-- /TOC -->\n<h1 id=\"xác-thực\"><a href=\"#x%C3%A1c-th%E1%BB%B1c\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Xác thực</h1>\n<p>Một trong những tình huống phổ biến nhất là cho phép truy cập dữ liệu nếu user đã đăng nhập (còn gọi là xác thực, authentication).</p>\n<pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">service</span> cloud.firestore <span class=\"token punctuation\">{</span>\n  match /databases/<span class=\"token punctuation\">{</span>database<span class=\"token punctuation\">}</span>/documents <span class=\"token punctuation\">{</span>\n    // Cho phép user truy cập document\n    // trong collection cities nếu đã đăng nhập\n    match /cities/<span class=\"token punctuation\">{</span>city<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span>\n      allow read, write: <span class=\"token keyword\">if</span> request.auth.uid <span class=\"token operator\">!=</span> null<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Hoặc một tình huống phổ biến thứ 2 là cho phép user read và write lên dữ liệu của chính user đó</p>\n<pre class=\"language-shell\"><code class=\"language-shell\">services cloud.firestore <span class=\"token punctuation\">{</span>\n  match /databases/<span class=\"token punctuation\">{</span>database<span class=\"token punctuation\">}</span>/documents <span class=\"token punctuation\">{</span>\n    // chỉ cho phép uid khớp với userId trong document.\n    // Dùng ký tự đại diện <span class=\"token punctuation\">{</span>userId<span class=\"token punctuation\">}</span> như một biến bên trong câu điều kiện\n    match /users/<span class=\"token punctuation\">{</span>userId<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span>\n      allow read, update, delete: <span class=\"token keyword\">if</span> request.auth.uid <span class=\"token operator\">==</span> userId<span class=\"token punctuation\">;</span>\n      allow create: <span class=\"token keyword\">if</span> request.auth.uid <span class=\"token operator\">!=</span> null<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Nếu đang sử dụng Firebase Authentication, biến <code class=\"language-text\">request.auth</code> sẽ chưa thông tin của user gởi request, xem thêm chi tiết <a href=\"https://firebase.google.com/docs/reference/rules/rules.firestore.Request#auth\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ở đây.</a></p>\n<h1 id=\"kiểm-tra-dữ-liệu\"><a href=\"#ki%E1%BB%83m-tra-d%E1%BB%AF-li%E1%BB%87u\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Kiểm tra dữ liệu</h1>\n<p>Nếu muốn can thiệp việc cho phép hoặc từ chối truy cập theo dữ liệu trong document</p>\n<pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">service</span> cloud.firestore <span class=\"token punctuation\">{</span>\n  match /databases/<span class=\"token punctuation\">{</span>database<span class=\"token punctuation\">}</span>/documents <span class=\"token punctuation\">{</span>\n    // cho phép truy cập nếu giá trị của visibility bằng public\n    match /cities/<span class=\"token punctuation\">{</span>city<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span>\n      allow read: <span class=\"token keyword\">if</span> resource.data.visibility <span class=\"token operator\">==</span> <span class=\"token string\">'public'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Biến <code class=\"language-text\">resource</code> tương ứng với dữ liệu của document đang request, <code class=\"language-text\">request.data</code> sẽ là toàn bộ các field lưu trong document</p>\n<p>Trước khi write dữ liệu xuống, chúng ta sẽ muốn kiểm tra dữ liệu đang có và dữ liệu mới. Nếu chúng ta đang set rule pending write (không write dữ liệu ngay lập tức mà đợi xí), biến <code class=\"language-text\">request.resource</code> lúc này sẽ chứa dữ liệu mới.</p>\n<pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">service</span> cloud.firestore <span class=\"token punctuation\">{</span>\n  match /databases/<span class=\"token punctuation\">{</span>database<span class=\"token punctuation\">}</span>/documents <span class=\"token punctuation\">{</span>\n    match /cities/<span class=\"token punctuation\">{</span>city<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span>\n      allow update: <span class=\"token keyword\">if</span> request.resource.data.population <span class=\"token operator\">></span> <span class=\"token number\">0</span>\n      <span class=\"token operator\">&amp;&amp;</span> request.resource.data.name <span class=\"token operator\">==</span> resource.data.name\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h1 id=\"truy-cập-đến-các-documents-khác\"><a href=\"#truy-c%E1%BA%ADp-%C4%91%E1%BA%BFn-c%C3%A1c-documents-kh%C3%A1c\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Truy cập đến các documents khác</h1>\n<p>Sử dụng <code class=\"language-text\">get()</code> và <code class=\"language-text\">exists()</code> chúng ta có thể đánh giá các request với các documents trong database. Cả hai hàm này đều yêu cầu chỉ định đường dẫn đầy đủ, và phải đưa biến theo cú pháp <code class=\"language-text\">$(biến)</code> trong đường dẫn</p>\n<pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">service</span> cloud.firestore <span class=\"token punctuation\">{</span>\n  match /databases/<span class=\"token punctuation\">{</span>database<span class=\"token punctuation\">}</span>/documents <span class=\"token punctuation\">{</span>\n    match /cities/<span class=\"token punctuation\">{</span>city<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span>\n      // kiểm tra user hiện tại\n      // có tồn tại bên trong collections <span class=\"token function\">users</span>\n      // trước khi cho phép tạo thêm city mới\n      allow create: <span class=\"token keyword\">if</span> exists<span class=\"token punctuation\">(</span>/databases/<span class=\"token variable\"><span class=\"token variable\">$(</span>database<span class=\"token variable\">)</span></span>/documents/users/<span class=\"token variable\"><span class=\"token variable\">$(</span>request.auth.uid<span class=\"token variable\">)</span></span><span class=\"token punctuation\">)</span>\n\n      // cho phép user xóa city nếu user này là admin\n      allow delete: <span class=\"token keyword\">if</span> get<span class=\"token punctuation\">(</span>/databases/<span class=\"token variable\"><span class=\"token variable\">$(</span>database<span class=\"token variable\">)</span></span>/documents/users/<span class=\"token variable\"><span class=\"token variable\">$(</span>request.auth.id<span class=\"token variable\">)</span></span>.data.admin <span class=\"token operator\">==</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Đối với thao tác write, chúng ta có thể sử dụng <code class=\"language-text\">getAfter()</code> để truy cập dữ liệu của document sau khi thực hiện, thằng này cũng giống như <code class=\"language-text\">get</code> phải dùng đường dẫn đầy đủ.</p>\n<h1 id=\"hàm-tùy-biến\"><a href=\"#h%C3%A0m-t%C3%B9y-bi%E1%BA%BFn\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Hàm tùy biến</h1>\n<p>Một khi các rule security này trở nên phức tạp, chúng ta sẽ muốn gom các điều kiện này vào trong một hàm để tái sử dụng. Firestore hỗ trợ luôn. Nó sẽ như Javascript, tuy nhiên không hẳn là javascript đâu, nó có một số hạn chế</p>\n<ul>\n<li>Hàm này luôn chỉ chứa 1 return, không chạy loop, gọi service bên ngoài</li>\n<li>Hàm có thể access được các hàm và biến có cùng scope.</li>\n<li>Hàm có thể gọi đến hàm khác nhưng không được recurse, tối đa là sâu đến 10 thôi.</li>\n</ul>\n<p>Ví dụ kết hợp cả 2 điều kiện ở trên thành một hàm</p>\n<pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">service</span> cloud.firestore <span class=\"token punctuation\">{</span>\n  match /databases/<span class=\"token punctuation\">{</span>database<span class=\"token punctuation\">}</span>/documents <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function-name function\">signedInOrPublic</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token builtin class-name\">return</span> request.auth.uid <span class=\"token operator\">!=</span><span class=\"token operator\">=</span> null <span class=\"token operator\">||</span> resource.data.visibility <span class=\"token operator\">==</span> <span class=\"token string\">'public'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    match /cities/<span class=\"token punctuation\">{</span>city<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span>\n      allow read, write: <span class=\"token keyword\">if</span> signedInOrPublic<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    match /users/<span class=\"token punctuation\">{</span>user<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span>\n      allow read, write: <span class=\"token keyword\">if</span> signedInOrPublic<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p><a href=\"https://firebase.google.com/docs/firestore/security/rules-conditions\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Link bài gốc</a></p>\n","cover_image":""}},"context":{}}