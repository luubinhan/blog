{"hash":"aa1b14b28c6a95ff3b4e2423c3c2ee3502c18cfa","data":{"post":{"title":"Giới thiệu Javascript Proxy object","path":"/2021-09-06-gioi-thieu-proxy-cua-javascript/","slug":"/2021-09-06-gioi-thieu-proxy-cua-javascript","date":"2021-09-06","timeToRead":3,"tags":[{"id":"hoc-thuat","title":"hoc-thuat","path":"/tag/hoc-thuat/"},{"id":"javascript","title":"javascript","path":"/tag/javascript/"}],"desc":"","content":"<blockquote>\n<p>Một object <code class=\"language-inline-text\">Proxy</code> sẽ bọc một object khác, và can thiệp trước khi truyền xử lý đó xuống object chính chủ, giống như một middleware</p>\n</blockquote>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> proxy <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Proxy</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> handler<span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li><code class=\"language-inline-text\">target</code> là object chính chủ</li>\n<li><code class=\"language-inline-text\">handler</code> khai báo các phương thức sẽ bị can thiệp</li>\n</ul>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> target <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">let</span> proxy <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Proxy</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\nproxy<span class=\"token punctuation\">.</span>test <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 5</span>\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>proxy<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 5</span></code></pre></div>\n<p>Do không truyền một handler nào, nên <code class=\"language-inline-text\">test</code> sẽ không thay đổi</p>\n<p>Giờ chúng ta muốn can thiệp vào phương thức <code class=\"language-inline-text\">get</code> (khi chúng ta gọi <code class=\"language-inline-text\">object.prop</code>)</p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> number <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\n\nnumbers <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Proxy</span><span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">get</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> prop<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>prop <span class=\"token keyword\">in</span> target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> target<span class=\"token punctuation\">[</span>prop<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token number\">0</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span>\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">[</span><span class=\"token number\">123</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 0</span></code></pre></div>\n<p>Ví dụ khác, chúng ta có một dãy số, chỉ cho phép thêm vào kiểu <code class=\"language-inline-text\">number</code>, nếu cố tình thêm vào một kiểu dữ liệu khác sẽ không thực hiện được và trả về lỗi</p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> numbers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\nnumbers <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Proxy</span><span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">,</span>\n<span class=\"gridsome-highlight-code-line\">    <span class=\"token function\">set</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> prop<span class=\"token punctuation\">,</span> val<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> val <span class=\"token operator\">==</span> <span class=\"token string\">'number'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            target<span class=\"token punctuation\">[</span>prop<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> val<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// trả về lỗi</span>\n<span class=\"gridsome-highlight-code-line\">            <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></span>        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\nnumbers<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ok</span>\n<span class=\"gridsome-highlight-code-line\">numbers<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// TypeError ('set' on proxy returned false)</span></span></code></pre></div>\n<p>Một ứng dụng khác, bảo vệ các thuộc tính <code class=\"language-inline-text\">internal</code> của một object, ví dụ chúng ta có một số property bắt đầu bằng <code class=\"language-inline-text\">_</code>, chúng ta không cho phép truy cập các property</p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> user <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"John\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">_password</span><span class=\"token operator\">:</span> <span class=\"token string\">\"****\"</span>\n<span class=\"token punctuation\">}</span>\n\nuser <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Proxy</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n<span class=\"gridsome-highlight-code-line\">    <span class=\"token function\">get</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> prop<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>prop<span class=\"token punctuation\">.</span><span class=\"token function\">startWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">'_'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Access denied\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">let</span> value <span class=\"token operator\">=</span> target<span class=\"token punctuation\">[</span>prop<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> value <span class=\"token operator\">===</span> <span class=\"token string\">'function'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token function\">value</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> value<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"gridsome-highlight-code-line\">    <span class=\"token function\">set</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> prop<span class=\"token punctuation\">,</span> val<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>prop<span class=\"token punctuation\">.</span><span class=\"token function\">startsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">'_'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Access denied\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n          target<span class=\"token punctuation\">[</span>prop<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> val<span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"gridsome-highlight-code-line\">    <span class=\"token function\">deleteProperty</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">target<span class=\"token punctuation\">,</span> prop</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>prop<span class=\"token punctuation\">.</span><span class=\"token function\">startsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">'_'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Access denied\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">delete</span> target<span class=\"token punctuation\">[</span>prop<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"gridsome-highlight-code-line\">    <span class=\"token function\">ownKeys</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">target</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span>        <span class=\"token keyword\">return</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">key</span> <span class=\"token operator\">=></span> <span class=\"token operator\">!</span>key<span class=\"token punctuation\">.</span><span class=\"token function\">startsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">'_'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span>_password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Error: Access denied</span>\n<span class=\"token keyword\">delete</span> user<span class=\"token punctuation\">.</span>_password<span class=\"token punctuation\">;</span> <span class=\"token comment\">// Error: Access denied</span></code></pre></div>\n<p>Nếu object của chúng ta là một function thì sao nhỉ?</p>\n<p>Ví dụ với hàm <code class=\"language-inline-text\">delay</code> sau, hàm này cho phép <em>delay</em> thời gian hàm được thực thi bằng <code class=\"language-inline-text\">setTimeout</code></p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">f<span class=\"token punctuation\">,</span> ms</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">f</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> arguments<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ms<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">sayHi</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">user</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Hello, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>user<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">!</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\nsayHi <span class=\"token operator\">=</span> <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span>sayHi<span class=\"token punctuation\">,</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token function\">sayHi</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"John\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Chúng ta sẽ có một cách viết khác với <code class=\"language-inline-text\">Proxy</code>, điểm khác biệt là <code class=\"language-inline-text\">Proxy</code> sẽ chuyển tiếp luôn tất cả những property khác của function (như <code class=\"language-inline-text\">name</code>, <code class=\"language-inline-text\">length</code>)</p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">f<span class=\"token punctuation\">,</span> ms</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Proxy</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n<span class=\"gridsome-highlight-code-line\">        <span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">target<span class=\"token punctuation\">,</span> thisArg<span class=\"token punctuation\">,</span> args</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span>            <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">target</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>thisArg<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ms<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">sayHi</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">user</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Hello, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>user<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">!</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nsayHi <span class=\"token operator\">=</span> <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span>sayHi<span class=\"token punctuation\">,</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gridsome-highlight-code-line\"><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>sayHi<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span></span><span class=\"token function\">sayHi</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"John\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Chúng đã đề cập đến các phương thức <em>tiền</em> xử lý <code class=\"language-inline-text\">ownKeys</code>, <code class=\"language-inline-text\">deleteProperty</code>, <code class=\"language-inline-text\">get</code>, <code class=\"language-inline-text\">set</code>, <code class=\"language-inline-text\">apply</code>. Ngoài ra nó còn có các phương thức khác các bạn có thể thảm khảo thêm</p>\n<ul>\n<li><code class=\"language-inline-text\">has</code>: trigger khi thực thi <code class=\"language-inline-text\">in</code></li>\n<li><code class=\"language-inline-text\">apply</code>: trigger khi thực thi một function</li>\n<li><code class=\"language-inline-text\">construct</code>: trigger với <code class=\"language-inline-text\">new</code></li>\n<li><code class=\"language-inline-text\">getPrototypeOf</code>: <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/getPrototypeOf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"> Object.getPrototypeOf</a></li>\n<li><code class=\"language-inline-text\">setPrototypeOf</code>: <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Object.setPrototypeOf</a></li>\n<li><code class=\"language-inline-text\">isExtensible</code>: <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isExtensible\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Object.isExtensible</a></li>\n<li><code class=\"language-inline-text\">preventExtensions</code>: <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/preventExtensions\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Object.preventExtensions</a></li>\n<li><code class=\"language-inline-text\">defineProperty</code>: <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"> Object.defineProperty</a></li>\n<li><code class=\"language-inline-text\">getOwnPropertyDescriptor</code>: <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyDescriptor\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Object.getOwnPropertyDescriptor</a></li>\n</ul>\n<p>Ví dụ lấy từ Javascript.info</p>\n","cover_image":"","related":[{"id":"e9d2a9d4a3ed5b8ecc39c580a3f2ffb8","path":"/2018-11-03-gioi-thieu-markdown/","title":"Giới thiệu Markdown","desc":"Markdown vở lòng cho bạn nào chưa biết"},{"id":"f9b9d628fc5725a639e6c8edff449057","path":"/2018-10-01-huong-dan-gioi-thieu-fetch-javascript/","title":"Giới thiệu fetch() của javascript","desc":"Tạm biệt XMLHttpRequest và cách viết dài dòng, giờ đây ta đã có fetch API"},{"id":"0be257d7b6339261c05ba76120350279","path":"/2017-07-31-react-router/","title":"Giới thiệu React Router","desc":"React không phải một framework, nó chỉ là một thư viện javascript, bởi vì vậy nó không thể giải quyết tất cả các yêu cầu một ứng dụng. Việc mà React làm rất tốt là tạo component và cách thức quản lý state của component, nhưng để tạo một Single Page App (sẽ viết tắt là SPA) phức tạp, nó cần những thư viện khác nữa, đầu tiên cần nhắc đến là React Router"},{"id":"5d93819d1a5c10be427112a7e0bf625b","path":"/2018-11-04-gioi-thieu-react-memo-moi-trong-react16/","title":"Giới thiệu React.memo","desc":"Api mới của React 16.6"}]}},"context":{}}