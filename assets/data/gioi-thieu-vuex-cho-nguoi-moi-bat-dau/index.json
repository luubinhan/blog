{"hash":"1f050025b34e11bdb5a1569354f7ba1808a8211b","data":{"post":{"title":"Giới thiệu Vuex cho người mới bắt đầu","path":"/gioi-thieu-vuex-cho-nguoi-moi-bat-dau/","date":"2018-11-08","timeToRead":3,"tags":[{"id":"vuejs","title":"vuejs","path":"/tag/vuejs/"}],"desc":"Mình không giới thiệu cụ thể từng phần trong Vuex, các bạn cần nắm redux store của React để hiểu được bài này, các khái niệm và nguyên tắc gần như là giống nhau, khác cách đặt tên thôi.","content":"<!-- TOC -->\n<ul>\n<li><a href=\"#state\">state</a></li>\n<li><a href=\"#mutations\">mutations</a></li>\n<li><a href=\"#actions\">actions</a></li>\n<li><a href=\"#getters\">getters</a></li>\n<li><a href=\"#modules\">modules</a></li>\n</ul>\n<!-- /TOC -->\n<p>Vuex là một cái store cho Vue, nó giống hệt như redux store của React, cũng giải quyết những vấn đề như redux, nên nếu bạn ko biết tại sao nó lại cần thì có thể đọc lại <a href=\"/2018-02-14-huong-dan-redux-la-gi-tai-sao-phai-dung\">Redux là gì và tại sao phải dùng</a>.</p>\n<p>Một số khái niệm chính của Vuex, các khái niệm này gần như là tương đồng với redux</p>\n<p><img src=\"https://cms-assets.tutsplus.com/uploads/users/2028/posts/32354/image/vueccvuex.png\" alt=\"Giới thiệu Vuex cho người mới bắt đầu\"></p>\n<p>Trong store có</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue<span class=\"token punctuation\">.</span>Store</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  state<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  mutations<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  actions<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  getters<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  modules<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<h2 id=\"state\"><a href=\"#state\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>state</h2>\n<p>Tất cả dữ liệu mà store nắm giữ</p>\n<h2 id=\"mutations\"><a href=\"#mutations\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>mutations</h2>\n<p><code class=\"language-text\">mutations</code> được config trong store (nó như reducer của redux) là tập những phương thức được dùng để update state. Chúng ta không update state trực tiếp, không gọi đến các hàm mutation trực tiếp, chúng ta gọi <code class=\"language-text\">this.$store.commit(&#39;ten-phuong-thuc&#39;, payload)</code> để gọi các phương thức này.</p>\n<div class=\"note\">Mutation là những phương thức synchronous</div>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// gọi mutation</span>\nmethods<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">unregister</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">registration</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">$store</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">commit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      type<span class=\"token operator\">:</span> <span class=\"token string\">'unregister'</span><span class=\"token punctuation\">,</span>\n      userId<span class=\"token operator\">:</span> registration<span class=\"token punctuation\">.</span><span class=\"token property-access\">userId</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token comment\">// khai báo mutation trong lúc tạo store</span>\nmutations<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">register</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state<span class=\"token punctuation\">,</span> userId</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    state<span class=\"token punctuation\">.</span><span class=\"token property-access\">registrations</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">push</span><span class=\"token punctuation\">(</span>userId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h2 id=\"actions\"><a href=\"#actions\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>actions</h2>\n<div class=\"note\">Sự khác biệt lớn nhất giữa action và mutation là trong action có thể return promise, nó có thể thực hiện các thao tác asynchronous</div>\n<p>Nếu trong redux bạn cần một middleware để xử lý các thao tác asynchronous, thì action trong vue store chính là các hàm bạn dùng để làm chuyện này.\nChúng ta cũng không gọi trực tiếp đến các hàm của <code class=\"language-text\">actions</code> mà phải gọi qua dispatch. Mục đích cuối cùng của action cũng là commit một mutation, nó cũng không chỉnh sửa gì state.</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// gọi một action ở component, map nó vô phương thức</span>\nmethods<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">registerUser</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">user</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">$store</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'register'</span><span class=\"token punctuation\">,</span> user<span class=\"token punctuation\">.</span><span class=\"token property-access\">id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// khai báo action trong store</span>\nactions<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">register</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">context<span class=\"token punctuation\">,</span> userId</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// vẫn commit lên mutation                </span>\n      context<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">commit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'register'</span><span class=\"token punctuation\">,</span> userId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h2 id=\"getters\"><a href=\"#getters\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>getters</h2>\n<p>Trong store chúng ta khai báo các phương thức gọi chung là <code class=\"language-text\">getters</code>, nó giống như các <code class=\"language-text\">computed property</code> của store.</p>\n<div class='note'>Các hàm `getters` luôn trả về giá trị</div>\n<p>Nếu bạn chưa biết computed property là gì, mình quote lại ngắn gọn cho các bạn nhớ</p>\n<div class=\"note\">Computed property là những giá trị cần tính lại khi một biến nó phụ thuộc thay đổi giá trị.</div>\n<p>Ví dụ, giỏ hàng, tổng tiền là computed property được tính lại khi trên tất cả sản phẩm có trong giỏ hàng.</p>\n<pre class=\"language-js\"><code class=\"language-js\">getters<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// == computed properties</span>\n  <span class=\"token function\">availableProducts</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state<span class=\"token punctuation\">,</span> getters</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> state<span class=\"token punctuation\">.</span><span class=\"token property-access\">products</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">product</span> <span class=\"token arrow operator\">=></span> product<span class=\"token punctuation\">.</span><span class=\"token property-access\">inventory</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">cartTotals</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state<span class=\"token punctuation\">,</span> getters</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> cartTotal <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> item <span class=\"token keyword\">of</span> state<span class=\"token punctuation\">.</span><span class=\"token property-access\">cart</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      cartTotal <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">.</span><span class=\"token property-access\">price</span> <span class=\"token operator\">*</span> item<span class=\"token punctuation\">.</span><span class=\"token property-access\">quantity</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> cartTotal<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre>\n<h2 id=\"modules\"><a href=\"#modules\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>modules</h2>\n<p>Khi ứng dụng của chúng ta lớn lên, để hết mọi quản lý ở một chỗ như vậy sẽ rất mệt. Modules giúp chúng ta tách cái store ra theo từng feature</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> moduleA <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  state<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token spread operator\">...</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  mutations<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token spread operator\">...</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  actions<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token spread operator\">...</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  getters<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token spread operator\">...</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> moduleB <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  state<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token spread operator\">...</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  mutations<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token spread operator\">...</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  actions<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token spread operator\">...</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vuex<span class=\"token punctuation\">.</span>Store</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  modules<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    a<span class=\"token operator\">:</span> moduleA<span class=\"token punctuation\">,</span>\n    b<span class=\"token operator\">:</span> moduleB\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\nstore<span class=\"token punctuation\">.</span><span class=\"token property-access\">state</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">a</span> <span class=\"token comment\">// -> `moduleA`'s state</span>\nstore<span class=\"token punctuation\">.</span><span class=\"token property-access\">state</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">b</span> <span class=\"token comment\">// -> `moduleB`'s state</span></code></pre>\n<p>Các phần còn lại: getters, actions, mutations truy cập trực tiếp như bình thường, KHÔNG cần thông qua store.actions.moduleName. Nó sẽ được lồng vào trong module name khi chúng ta bật <code class=\"language-text\">namespaced: true</code></p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vuex<span class=\"token punctuation\">.</span>Store</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  modules<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    account<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      namespaced<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// module assets</span>\n      state<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token spread operator\">...</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> \n      getters<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">isAdmin</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token spread operator\">...</span> <span class=\"token punctuation\">}</span> <span class=\"token comment\">// -> getters['account/isAdmin']</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      actions<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">login</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token spread operator\">...</span> <span class=\"token punctuation\">}</span> <span class=\"token comment\">// -> dispatch('account/login')</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      mutations<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">login</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token spread operator\">...</span> <span class=\"token punctuation\">}</span> <span class=\"token comment\">// -> commit('account/login')</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// nested modules</span>\n      modules<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// kế thừa namespace từ module cha</span>\n        myPage<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          state<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token spread operator\">...</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          getters<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">profile</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token spread operator\">...</span> <span class=\"token punctuation\">}</span> <span class=\"token comment\">// -> getters['account/profile']</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        posts<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          namespaced<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n          state<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token spread operator\">...</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          getters<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">popular</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token spread operator\">...</span> <span class=\"token punctuation\">}</span> <span class=\"token comment\">// -> getters['account/posts/popular']</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre>\n","cover_image":"","related":[{"id":"c4bb677484b7819976aa13db2c48fbab","path":"/gioi-thieu-typeof-trong-javascript-cho-nguoi-moi-bat-dau/","title":"Giới thiệu typeof trong Javascript cho người mới bắt đầu","desc":"Hiểu cách hoạt động của typeof, một số vấn đề liên quan đến check type"},{"id":"fea12ab11892947c407484df390517cb","path":"/viet-unit-test-cho-vue-component-cho-nguoi-moi-bat-dau/","title":"Viết Unit Test cho Vue component cho người mới bắt đầu","desc":"Cái nhìn về unit test cho component, test cái gì, cái gì không test khi viết unit test"},{"id":"02a5a60cd7a087f460f4ccfd777912ea","path":"/su-dung-middleware-voi-redux-danh-cho-nguoi-moi-bat-dau/","title":"Sử dụng Middleware với Redux dành cho người mới bắt đầu","desc":"Nếu đã nắm rõ redux, bước tiếp theo phải tìm hiểu là middleware"},{"id":"0183c70aa00c719cd899fece97b05577","path":"/kinh-nghiem-to-chuc-vuex-cho-ung-dung-lon/","title":"Kinh nghiệm tổ chức Vuex cho ứng dụng lớn","desc":"Nếu bạn đã sử dụng thông thạo Vuex để tạo các ứng dụng be bé như ToDo list, Shopping Cart, hãy nâng trình của mình lên bằng các ứng dụng có nhiều dữ liệu hơn."}]}},"context":{}}