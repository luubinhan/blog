{"hash":"07b5001d3b2d2df5ce1b9bbd1a099b0760e8b129","data":{"post":{"title":"3 điều bạn có thể không biết về biến trong CSS","path":"/2020-10-07-ban-co-the-lam-gi-voi-bien-css/","date":"2020-10-07","timeToRead":2,"tags":[{"id":"css","title":"css","path":"/tag/css/"},{"id":"hoc-thuat","title":"hoc-thuat","path":"/tag/hoc-thuat/"}],"desc":"Bài này chúng ta sẽ đi qua ba thứ chúng ta có thể làm được với biến trong css, có thể bạn chưa biết","content":"<h2 id=\"chuyện-gì-xảy-ra-nếu-chúng-ta-dùng-var-với-một-biến-undefined\"><a href=\"#chuy%E1%BB%87n-g%C3%AC-x%E1%BA%A3y-ra-n%E1%BA%BFu-ch%C3%BAng-ta-d%C3%B9ng-var-v%E1%BB%9Bi-m%E1%BB%99t-bi%E1%BA%BFn-undefined\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Chuyện gì xảy ra nếu chúng ta dùng <code class=\"language-text\">var()</code> với một biến undefined</h2>\n<p>Trước hết phải nói CSS và HTML là ngôn ngữ không quá strictly, một vài lỗi nhỏ không làm làm chết nguyên trang, nếu dùng <code class=\"language-text\">var()</code> với một biến không tồn tại, không gây ra ảnh hưởng parsing.</p>\n<p>Sẽ có nhiều lý do cho việc xuất biến undefined trong <code class=\"language-text\">var</code>, có thể là</p>\n<ul>\n<li>Gõ nhầm tên biến</li>\n<li>Tưởng là có nhưng chưa define biến này</li>\n<li>Biến đó ko tồn tại trên trang đang xem</li>\n</ul>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">ol li</span> <span class=\"token punctuation\">{</span> <span class=\"token variable\">--foo</span><span class=\"token punctuation\">:</span> <span class=\"token color\">red</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token selector\">ul li</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span><span class=\"token variable\">--foo</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span></code></pre>\n<p>Bởi, lời khuyên là luôn đặt biết ở node trên cùng như <code class=\"language-text\">:root</code> hay <code class=\"language-text\">html</code>, như vậy biến có thể truy xuất ở bất cứ đâu trong DOM.</p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\"><span class=\"token pseudo-class\">:root</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">--main-color</span><span class=\"token punctuation\">:</span> <span class=\"token hexcode color\">#f06</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\"><span class=\"token class\">.my-lovely-component</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token unit\">px</span> solid <span class=\"token function\">var</span><span class=\"token punctuation\">(</span><span class=\"token variable\">--main-color</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Vậy nếu biến đó <code class=\"language-text\">undefined</code> thì sao? Thứ tự xử lý sẽ là</p>\n<ol>\n<li>Nếu property đó ko <em>inheritable</em> (ví dụ như <code class=\"language-text\">border</code>) nó được đưa về <code class=\"language-text\">initial</code></li>\n<li>Nếu là property kế thừa, như <code class=\"language-text\">color</code>, thì <code class=\"language-text\">inherited</code> giá trị từ thằng cha, nếu không có cái nào hết, thì sẽ dùng <code class=\"language-text\">initial</code></li>\n</ol>\n<p>Giá trị initial của <code class=\"language-text\">border</code> sẽ là <code class=\"language-text\">medium none currentColor</code>, cái này siêng thì kiểm tra trên <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/border#Formal_definition\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">MDN</a></p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\"><span class=\"token pseudo-class\">:root</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">--main-color</span><span class=\"token punctuation\">:</span> <span class=\"token hexcode color\">#f06</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">body</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token color\">gold</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\"><span class=\"token class\">.my-lovely-component</span></span> <span class=\"token punctuation\">{</span>\n    // nó sẽ dùng giá trị `<span class=\"token color\">gold</span>` kế thừa từ body\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span><span class=\"token variable\">--secondary-color</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h2 id=\"fallback-value-khi-giá-trị-biến-không-tìm-thấy\"><a href=\"#fallback-value-khi-gi%C3%A1-tr%E1%BB%8B-bi%E1%BA%BFn-kh%C3%B4ng-t%C3%ACm-th%E1%BA%A5y\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Fallback value khi giá trị biến không tìm thấy</h2>\n<p>Đây cũng ít ai để ý mà dùng, <code class=\"language-text\">var()</code> có thể truyền thêm tham số thứ 2, là giá trị fallback khi không tìm thấy biến</p>\n<pre class=\"language-css\"><code class=\"language-css\">// dùng <span class=\"token color\">red</span> nếu không thấy <span class=\"token variable\">--theme-color</span>\n<span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span><span class=\"token variable\">--theme-color</span><span class=\"token punctuation\">,</span> <span class=\"token color\">red</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Khá clear đúng không, nhưng bạn cũng có thể viết như thế này cho nó <em>rắc rối</em> đồng đội chơi</p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span><span class=\"token variable\">--foo</span><span class=\"token punctuation\">,</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span><span class=\"token variable\">--bar</span><span class=\"token punctuation\">,</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span><span class=\"token variable\">--baz</span><span class=\"token punctuation\">,</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span><span class=\"token variable\">--are</span><span class=\"token punctuation\">,</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span><span class=\"token variable\">--you</span><span class=\"token punctuation\">,</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span><span class=\"token variable\">--crazy</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Cú pháp trên hoàn toàn hợp lệ, nhưng không nên làm khó nhau như vậy. Ngoài ra đây cũng là một cách viết hợp lệ </p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token variable\">--my-variable</span><span class=\"token punctuation\">:</span> one<span class=\"token punctuation\">,</span> two<span class=\"token punctuation\">,</span> three<span class=\"token punctuation\">;</span>\n<span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span><span class=\"token variable\">--foo</span><span class=\"token punctuation\">,</span> one<span class=\"token punctuation\">,</span> two<span class=\"token punctuation\">,</span> three<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Hãy nhớ, làm mọi thứ đơn giản nhất thôi các bạn, đừng nghĩ mình viết như vậy sẽ thông minh hơn người khác.</p>\n<h2 id=\"devtool-của-trình-duyệt-giúp-được-gì\"><a href=\"#devtool-c%E1%BB%A7a-tr%C3%ACnh-duy%E1%BB%87t-gi%C3%BAp-%C4%91%C6%B0%E1%BB%A3c-g%C3%AC\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>DevTool của trình duyệt giúp được gì</h2>\n<p>Rắc rối là như vậy, may mà chúng ta có DevTool cứu giúp</p>\n<p><strong>Tự động điền tên biến</strong></p>\n<p>Khi cần quick change trên trình duyệt, sau khi gõ <code class=\"language-text\">var(</code>, nó tự động gợi ý các biến hợp lệ</p>\n<p><img src=\"https://patrickbrosset.com/assets/firefox-css-var-autocomplete.png\" alt=\"Screenshot of Firefox&#x27;s css var autocomplete\"></p>\n<p>Firefox, Edge, Chrome đều có</p>\n<p><strong>Biết giá trị nào đang được sử dụng</strong></p>\n<p>Bên trong tab <strong>Computed</strong>, giá trị cuối cùng đang sử dụng sau cả tá kế thừa sẽ được hiện ra</p>\n<p><img src=\"https://patrickbrosset.com/assets/edge-computed-css-var.png\" alt=\"Screenshot of the tooltip that appears in Edge when you hover over a var() function\"></p>\n<p>Hy vọng trong tương lai DevTool sẽ có nhiều hỗ trợ hơn như xác định biến <code class=\"language-text\">undefined</code></p>\n<p><a href=\"https://patrickbrosset.com/articles/2020-09-21-3-things-about-css-variables-you-might-not-know/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">3 things about CSS variables you might not know</a></p>\n","cover_image":"","related":[{"id":"6e12ee448b407c69e13739fd004305be","path":"/2020-09-28-lam-theme-cho-web-nam-2020/","title":"Hướng dẫn dùng biến trong CSS để làm dark/light mode","desc":"Nếu bạn cũng như mình, mặc kệ những đứa xài IE11, mình chỉ hỗ  trợ cho đối tượng người sử dụng là những người trẻ thông minh, xài Edge, xài Chrome, xài Firefox, đọc ngay bài viết này mình chỉ cách làm."},{"id":"936bd0d7d301376494576278881f51ac","path":"/2018-03-09-huong-dan-su-dung-bien-enviroment-nhu-the-nao/","title":"Sử dụng biến Node Environment","desc":"Biến environment là một phần cơ bản cần biết khi làm việc với Node"},{"id":"88961dd95c384a396295f4eaba6f7986","path":"/2016-11-07-wordpress-va-google-accelerated-mobile-pages-amp-tat-ca-nhung-gi-ban-can-biet/","title":"Wordpress và Google Accelerated Mobile Pages (AMP): Tất cả những gì bạn cần biết","desc":"Trong giới làm web ai cũng biết một điều Speed is King. Dân tình thích mua một gói hàng trên mạng và phải được giao ngay lập tức, ít nhất là trong 24g, chậm trễ vài ngày là thấy hông vui, thích post tấm hình lên facebook có triệu triệu lượt người like ngay lập tức."},{"id":"8905cbcbcbfca00a569175a000425311","path":"/2017-09-25-10-khai-niem-javascript-can-biet/","title":"7 khái niệm JavaScript cần biết","desc":"Một vài khái niệm căn bản trong javascript cần nắm nếu bạn là frontend developer"}]}},"context":{}}