{"hash":"5c36ce9365cdf048413216aa95f8ff64d5cbd5b8","data":{"post":{"title":"JSON.stringify vở lòng cho người mới","path":"/2019-06-01-huong-dan-vo-long-su-dung-json-stringify/","date":"2019-06-01","timeToRead":2,"tags":[{"id":"javascript","title":"javascript","path":"/tag/javascript/"},{"id":"hoc-thuat","title":"hoc-thuat","path":"/tag/hoc-thuat/"}],"desc":"Một trong hàm kinh điển bắt buộc phải biết của mội frontend developer","content":"<!-- TOC -->\n<ul>\n<li><a href=\"#tr%C6%B0%E1%BB%9Dng-h%E1%BB%A3p-%C4%91%E1%BA%B7c-bi%E1%BB%87t-v%C3%A0-l%E1%BB%97i\">Trường hợp đặc biệt và lỗi</a></li>\n<li><a href=\"#c%C3%A1c-tham-s%E1%BB%91-c%C3%B2n-l%E1%BA%A1i-c%E1%BB%A7a-jsonstringify\">Các tham số còn lại của <code class=\"language-text\">JSON.stringify</code></a></li>\n<li><a href=\"#h%C3%A0m-tojson\">Hàm <code class=\"language-text\">toJSON()</code></a></li>\n</ul>\n<!-- /TOC -->\n<p><code class=\"language-text\">JSON.stringify</code> là hàm kinh điển để chuyển một object trong javascript sang JSON. Bài viết này sẽ nhìn lại những kiến thức vở lòng của <code class=\"language-text\">JSON.stringify</code></p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> answer<span class=\"token operator\">:</span> <span class=\"token number\">42</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> str <span class=\"token operator\">=</span> <span class=\"token known-class-name class-name\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">stringify</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// '{\"answer\":42}'</span>\n<span class=\"token comment\">// typeof str = string</span></code></pre>\n<p><code class=\"language-text\">JSON.stringify</code> hay sử dụng chung với <code class=\"language-text\">JSON.parse</code>. Đây là cách chúng ta có thể sao chép một object trong javascript (không bị dính trường hợp reference đến object cũ)</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> answer<span class=\"token operator\">:</span> <span class=\"token number\">42</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> clone <span class=\"token operator\">=</span> <span class=\"token known-class-name class-name\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">parse</span><span class=\"token punctuation\">(</span><span class=\"token known-class-name class-name\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">stringify</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// clone.answer = 42</span>\n<span class=\"token comment\">// clone !== obj</span></code></pre>\n<h2 id=\"trường-hợp-đặc-biệt-và-lỗi\"><a href=\"#tr%C6%B0%E1%BB%9Dng-h%E1%BB%A3p-%C4%91%E1%BA%B7c-bi%E1%BB%87t-v%C3%A0-l%E1%BB%97i\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Trường hợp đặc biệt và lỗi</h2>\n<p>Khi object <code class=\"language-text\">obj</code> có 1 property mà giá trị là <code class=\"language-text\">obj</code> (trỏ về chính nó), <code class=\"language-text\">JSON.stringify</code> trả về một error</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\nobj<span class=\"token punctuation\">.</span><span class=\"token property-access\">answer</span> <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">;</span>\n\n<span class=\"token known-class-name class-name\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">stringify</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// TypeError: TypeError: Converting circular structure to JSON</span></code></pre>\n<p>Các trường hợp đặc biệt như <code class=\"language-text\">NaN</code> và <code class=\"language-text\">Infinity</code>, <code class=\"language-text\">JSON.stringify</code> sẽ chuyển về <code class=\"language-text\">null</code>, chứ ko trả lỗi</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> nan<span class=\"token operator\">:</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span><span class=\"token string\">'not a number'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> inf<span class=\"token operator\">:</span> <span class=\"token known-class-name class-name\">Number</span><span class=\"token punctuation\">.</span><span class=\"token constant\">POSITIVE_INFINITY</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token known-class-name class-name\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">stringify</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// '{\"nan\": null, \"inf\": null}'</span></code></pre>\n<p>Nó cũng sẽ lọc bỏ hết các property giá trị là <code class=\"language-text\">undefined</code> hoặc function</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token function-variable function\">fn</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> undef<span class=\"token operator\">:</span> <span class=\"token keyword nil\">undefined</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token known-class-name class-name\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">stringify</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token comment\">// '{}'</span></code></pre>\n<h2 id=\"các-tham-số-còn-lại-của-jsonstringify\"><a href=\"#c%C3%A1c-tham-s%E1%BB%91-c%C3%B2n-l%E1%BA%A1i-c%E1%BB%A7a-jsonstringify\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Các tham số còn lại của <code class=\"language-text\">JSON.stringify</code></h2>\n<p><code class=\"language-text\">JSON.stringify</code> nhận vào 3 tham số, đa phần chúng ta ít biết tới 2 tham số còn lại.</p>\n<p>Tham số thứ 2 là <code class=\"language-text\">replacer</code>, một hàm nhận vào cặp <code class=\"language-text\">key/value</code> có thể dụng để thay đổi giá trị output sau cùng.</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> a<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> b<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> c<span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> d<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> e<span class=\"token operator\">:</span> <span class=\"token number\">4</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// nếu giá trị là number, cộng thêm 1</span>\n<span class=\"token known-class-name class-name\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">stringify</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token function\">replacer</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">key<span class=\"token punctuation\">,</span> value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> value <span class=\"token operator\">===</span> <span class=\"token string\">'number'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> value <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> value<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// '{\"a\":2,\"b\":3,\"c\":4,\"d\":{\"e\":5}}'</span></code></pre>\n<p>Tham số thứ 3 là <code class=\"language-text\">spaces</code>, cho phép format lại output theo dạng dễ đọc</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> a<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> b<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> c<span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> d<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> e<span class=\"token operator\">:</span> <span class=\"token number\">4</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token known-class-name class-name\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">stringify</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// '{\"a\":1,\"b\":2,\"c\":3,\"d\":{\"e\":4}}'</span>\n\n<span class=\"token known-class-name class-name\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">stringify</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> <span class=\"token keyword null nil\">null</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'  '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token known-class-name class-name\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">stringify</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> <span class=\"token keyword null nil\">null</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// kết quả tương tự</span>\n<span class=\"token comment\">// {</span>\n<span class=\"token comment\">//   \"a\": 1,</span>\n<span class=\"token comment\">//   \"b\": 2,</span>\n<span class=\"token comment\">//   \"c\": 3,</span>\n<span class=\"token comment\">//   \"d\": {</span>\n<span class=\"token comment\">//     \"e\": 4</span>\n<span class=\"token comment\">//   }</span>\n<span class=\"token comment\">// }</span>\n\n<span class=\"token comment\">// Ko nhất thiết phải là dấu khoảng trắng</span>\n<span class=\"token known-class-name class-name\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">stringify</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> <span class=\"token keyword null nil\">null</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'__'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// {</span>\n<span class=\"token comment\">// __\"a\": 1,</span>\n<span class=\"token comment\">// __\"b\": 2,</span>\n<span class=\"token comment\">// __\"c\": 3,</span>\n<span class=\"token comment\">// __\"d\": {</span>\n<span class=\"token comment\">// ____\"e\": 4</span>\n<span class=\"token comment\">// __}</span>\n<span class=\"token comment\">// }</span></code></pre>\n<p>Ví dụ như ta có thể để lọc bỏ các dữ liệu nhạy cảm như password</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">'Jean-Luc Picard'</span><span class=\"token punctuation\">,</span>\n  password<span class=\"token operator\">:</span> <span class=\"token string\">'stargazer'</span><span class=\"token punctuation\">,</span>\n  nested<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    hashedPassword<span class=\"token operator\">:</span> <span class=\"token string\">'c3RhcmdhemVy'</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token known-class-name class-name\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">stringify</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token function\">replacer</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">key<span class=\"token punctuation\">,</span> value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">match</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token language-regex\">password</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword nil\">undefined</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> value<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// '{\"name\":\"Jean-Luc Picard\",\"nested\":{}}'</span></code></pre>\n<h2 id=\"hàm-tojson\"><a href=\"#h%C3%A0m-tojson\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Hàm <code class=\"language-text\">toJSON()</code></h2>\n<p>Khi đi qua các property trong object, nếu bên trong object có hàm <code class=\"language-text\">toJSON()</code>, <code class=\"language-text\">JSON.stringify</code> dùng giá trị trả về của hàm này</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">'Jean-Luc Picard'</span><span class=\"token punctuation\">,</span>\n  nested<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    test<span class=\"token operator\">:</span> <span class=\"token string\">'not in output'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">toJSON</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token string\">'test'</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token known-class-name class-name\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">stringify</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// '{\"name\":\"Jean-Luc Picard\",\"nested\":\"test\"}'</span></code></pre>\n<p>Rất nhiều thư viện sử dụng <code class=\"language-text\">JSON.stringify()</code> kết hợp với <code class=\"language-text\">toJSON()</code> để đảm bảo output lúc serialize ra đúng như mong muốn (như <a href=\"https://momentjs.com/docs/#/displaying/as-json/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Moment JS</a></p>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://thecodebarbarian.com/the-80-20-guide-to-json-stringify-in-javascript.html\">The 80/20 Guide to JSON.stringify in JavaScript</a></p>\n","cover_image":"","related":[{"id":"3ad2e9e7003506e22a151e23675c3fe1","path":"/2018-10-16-huong-dan-progressive-web-app-cho-nguoi-moi-bat-dau/","title":"Làm Progressive Web App cho người mới","desc":"Cùng mình đú trend, dựng một Progressive Web App theo chỉ dẫn của Google"},{"id":"279a88e44a33e49f28daacde42d9d2c6","path":"/2019-09-27-huong-dan-su-dung-media-query/","title":"Căn bản cách sử dụng media query","desc":"Những kiến thức căn bản bắt buộc nhất để bạn làm responsive"},{"id":"640a57b49950fe739bdc6e77b9cc51f4","path":"/2016-11-18-phan-4-es6-can-ban-rest-parameters-va-spread-operator/","title":"Hồi 4: ES6 căn bản - Rest Parameters và Spread Operator","desc":"Hồi 4 trong series ES6 căn bản, nói về Rest Parameters và Spread Operator"}]}},"context":{}}