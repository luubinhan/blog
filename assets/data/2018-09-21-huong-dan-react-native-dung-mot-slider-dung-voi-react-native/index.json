{"hash":"e150ec07f11d4d640e5ab6b3dfc7216b64634be9","data":{"post":{"title":"Tạo slider component trong React Native bằng PanResponder","path":"/2018-09-21-huong-dan-react-native-dung-mot-slider-dung-voi-react-native/","slug":"/2018-09-21-huong-dan-react-native-dung-mot-slider-dung-voi-react-native","date":"2018-09-21","timeToRead":3,"tags":[{"id":"javascript","title":"javascript","path":"/tag/javascript/"},{"id":"react-native","title":"react-native","path":"/tag/react-native/"}],"desc":"Tuts này sẽ hướng dẫn các bạn tạo một slider component đơn giản trong React Native bằng PanResponder","content":"<p>Đây là cái chúng ta sẽ tạo</p>\n<p><img src=\"https://blog.bam.tech/hs-fs/hubfs/slider.gif?t=1537455804760&#x26;width=1122&#x26;name=slider.gif\"></p>\n<p>Phân tích một chút, chúng ta có thể chọn 1 trong 2 cách</p>\n<ul>\n<li>Xử lý gesture bằng React Native Gesture Responder System</li>\n<li>Xử lý gesture mằng một thư viện native khác, cho phép chúng ta can thiệp nhiều dạng gesture phức tạp hơn như xoay, chụm ngón tay (pinch), nhấn và dữ lâu.</li>\n</ul>\n<p>Với các marker như hình trên, chúng ta chỉ cần dùng React-Native Gesture Responder là đủ.</p>\n<p>Nếu muốn dùng thư viện, bạn có thể tìm hiểu <a href=\"https://kmagiera.github.io/react-native-gesture-handler/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">React Native Gesture Handler</a></p>\n<h1 id=\"dựng-static-ui\"><a href=\"#d%E1%BB%B1ng-static-ui\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Dựng static UI</h1>\n<div class=\"gridsome-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> styled <span class=\"token keyword\">from</span> <span class=\"token string\">'styled-components'</span><span class=\"token punctuation\">;</span>\n\ntype StateType <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">barHeight</span><span class=\"token operator\">:</span> number <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">deltaValue</span><span class=\"token operator\">:</span> number<span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> number\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> initialValue <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token constant\">CIRCLE_DIAMETER</span> <span class=\"token operator\">=</span> <span class=\"token number\">50</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Slider</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> StateType<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">PageContainer</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Value</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          </span><span class=\"token punctuation\">{</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>initialValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Value</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Container</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">BarContainer</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Bar</span></span> <span class=\"token attr-name\">onLayout</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>onBarLayout<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Circile</span></span> <span class=\"token attr-name\">bottomOffset</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">BarContainer</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Container</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">PageContainer</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> PageContainer <span class=\"token operator\">=</span> styled<span class=\"token punctuation\">.</span>View<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  background-color: black;\n  flex-grow: 1;\n  align-self: stretch;\n  align-items: center;\n  padding-vertical: 20;\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> Container <span class=\"token operator\">=</span> styled<span class=\"token punctuation\">.</span>View<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  flex-grow: 1;\n  align-self: stretch;\n  justify-content: center;\n  flex-direction: row;\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> Value <span class=\"token operator\">=</span> styled<span class=\"token punctuation\">.</span>Text<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  color: white;\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> BarContainer <span class=\"token operator\">=</span> styled<span class=\"token punctuation\">.</span>View<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  width: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">CIRCLE_DIAMETER</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">;\n  align-items: center;\n  padding-vertical: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">CIRCLE_DIAMETER</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">;\n  margin-horizontal: 20;\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> Bar <span class=\"token operator\">=</span> styled<span class=\"token punctuation\">.</span>View<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  width: 2;\n  background-color: white;\n  flex-grow: 1;\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> Circle <span class=\"token operator\">=</span> styled<span class=\"token punctuation\">.</span>View<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  border-radius: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">CIRCLE_DIAMETER</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">;\n  width: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">CIRCLE_DIAMETER</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">;\n  height: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">CIRCLE_DIAMETER</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">;\n  background-color: white;\n  position: absolute;\n  bottom: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token parameter\">props</span> <span class=\"token operator\">=></span> props<span class=\"token punctuation\">.</span>bottomOffset<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">;\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Kết quả</p>\n<p><img src=\"https://blog.bam.tech/hs-fs/hubfs/image2.png?t=1537535876886&#x26;width=1098&#x26;name=image2.png\"></p>\n<p>Chúng ta muốn lấy được giá trị và đặt cái nút tròn đúng vị trí theo giá trị này. Hàm <code class=\"language-inline-text\">getBottomOffsetFromValue</code> sẽ đảm nhiệm chuyển đổi giá trị offset bottom sang giá trị tương ứng.</p>\n<div class=\"gridsome-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">//...</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Slider</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> StateType<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n  state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">barHeight</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function-variable function\">onBarLayout</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">event</span><span class=\"token operator\">:</span> LayoutChangeEvent</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> barHeight<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>nativeEvent<span class=\"token punctuation\">.</span>layout<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> barHeight <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function-variable function\">getBottomOffsetValue</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token parameter\"><span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> number<span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">rangeMin</span><span class=\"token operator\">:</span> number<span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">rangeMax</span><span class=\"token operator\">:</span> number<span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">barHeight</span><span class=\"token operator\">:</span> number <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span></span>\n  <span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>barHeight <span class=\"token operator\">===</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> valueOffset <span class=\"token operator\">=</span> value <span class=\"token operator\">-</span> rangeMin<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> totalRange <span class=\"token operator\">=</span> rangeMax <span class=\"token operator\">-</span> rangeMin<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> percentage <span class=\"token operator\">=</span> valueOffset <span class=\"token operator\">/</span>  totalRange<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> barHeight <span class=\"token operator\">*</span>  percentage<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>barHeight<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> bottomOffset <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getBottomOffsetFromValue</span><span class=\"token punctuation\">(</span>initialValue<span class=\"token punctuation\">,</span> min<span class=\"token punctuation\">,</span> max<span class=\"token punctuation\">,</span> barHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token comment\">// ...</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Bar</span></span> <span class=\"token attr-name\">onLayout</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>onBarLayout<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Circle</span></span> <span class=\"token attr-name\">bottomOffset</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>bottomOffset<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span>\n      <span class=\"token comment\">// ...</span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">//...</span></code></pre></div>\n<p>Để cái marker có thể di chuyển được, chúng ta dùng <code class=\"language-inline-text\">PanResponder</code></p>\n<div class=\"gridsome-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  LayoutChangeEvent<span class=\"token punctuation\">,</span>\n  PanResponder<span class=\"token punctuation\">,</span>\n  PanResponderGestureState\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-native'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// ....</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Slider</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> StateType<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">barHeight</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">defaultValue</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> initialValue\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// ....</span>\n  panResponder <span class=\"token operator\">=</span> PanResponder<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">onMoveShouldSetPanResponderCapture</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">onPanResponderMove</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">_<span class=\"token punctuation\">,</span> gestureState</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">onMove</span><span class=\"token punctuation\">(</span>gestureState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">onPanResponderRelease</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">onEndMove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">onMove</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">gestureState</span><span class=\"token operator\">:</span> PanResponderGestureState</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>barHeight<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> newDeltaValue <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getValueFromBottomOffset</span><span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">-</span>gestureState<span class=\"token punctuation\">.</span>dy<span class=\"token punctuation\">,</span>\n      barHeight<span class=\"token punctuation\">,</span>\n      min<span class=\"token punctuation\">,</span>\n      max\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">deltaValue</span><span class=\"token operator\">:</span> newDeltaValue\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">onEndMove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>value<span class=\"token punctuation\">,</span> deltaValue<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> value <span class=\"token operator\">+</span> deltaValue<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">deltaValue</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function-variable function\">capValueWithinRange</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> number<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">range</span><span class=\"token operator\">:</span> number<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>value <span class=\"token operator\">&lt;</span> range<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> range<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>value <span class=\"token operator\">></span> range<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> range<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> value<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>value<span class=\"token punctuation\">,</span> deltaValue<span class=\"token punctuation\">,</span> barHeight<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> cappedValue <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">capValueWithinRange</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">+</span> deltaValue<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>min<span class=\"token punctuation\">,</span> max<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> bottomOffset <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getBottomOffsetFromValue</span><span class=\"token punctuation\">(</span>\n      cappedValue<span class=\"token punctuation\">,</span>\n      min<span class=\"token punctuation\">,</span>\n      max<span class=\"token punctuation\">,</span>\n      barHeight\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token comment\">//...</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Circle</span></span>\n        <span class=\"token attr-name\">bottomOffset</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>bottomOffset<span class=\"token punctuation\">}</span></span>\n        <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>panResponder<span class=\"token punctuation\">.</span>panHandlers<span class=\"token punctuation\">}</span></span>\n      <span class=\"token punctuation\">/></span></span>\n      <span class=\"token comment\">//...</span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Hàm <code class=\"language-inline-text\">capValueWithinRange</code> được dùng để lấy giá trị của cái nút tròn so với độ cao của slider</p>\n<p>Khi di chuyển marker, callback truyền cho <code class=\"language-inline-text\">onPanResponderMove</code> sẽ được gọi, nó nhận vào 2 giá trị</p>\n<ul>\n<li>native event: chứa những thuộc tính như vị trí user đã touch,...</li>\n<li>gestureState: đây là cái chúng ta đang dùng để truyền cho hàm <code class=\"language-inline-text\">onMove</code></li>\n</ul>\n<p>Tất cả giá trị của gestureState</p>\n<p><img src=\"https://blog.bam.tech/hs-fs/hubfs/image1.png?t=1537535876886&#x26;width=1640&#x26;name=image1.png\"></p>\n<p>Khi user buông tay ra, dừng sự kiện <strong>kéo rê</strong>, thì callback truyền cho hàm <code class=\"language-inline-text\">onPanResponderRelease</code> sẽ được gọi, cũng nhận tương tự 2 giá trị như trên: native event và gesture state</p>\n<p>Xong, chủ yếu để làm cái này chúng ta chỉ cần nắm cách làm việc với <code class=\"language-inline-text\">PanResponder</code> trong react-native</p>\n<p><a href=\"https://gist.github.com/jfaverie/d98d8f60a510e3b68abeffb43a77d47a\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Toàn bộ source code</a></p>\n<p><a href=\"https://blog.bam.tech/developper-news/create-vertical-slider-with-react-native-panresponder\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Link bài gốc</a></p>\n","cover_image":"","related":[{"id":"d063bd85884bf12eab535e03c93b53de","path":"/2018-05-02-huong-dan-transition-voi-react-navigation/","title":"Transition trong React Native với React Navigation","desc":"Hướng dẫn làm transition trong React Native với react navigation"},{"id":"97ef36bbb1aaa5c95446813f0e78469b","path":"/2018-07-20-huong-dan-tao-animation-cho-component-voi-react/","title":"Tạo một animation cho component trong React","desc":"Sử dụng React, styled-components, react-flip-toolkit để tạo animation giống như mên trên trang chủ của Stripe"},{"id":"f913d8895f485d724c63b6d3cfdc3505","path":"/2018-03-02-huong-dan-gioi-thieu-higher-order-component-trong-react/","title":"Giới thiệu Higher-Order Component trong React","desc":"Higher-Order Component (HOC) là kỹ thuật mà các bạn lập trình viên Việt Nam rất thích khi nhắc đến React, riêng mình thì không"},{"id":"107581c7460628920a0820752c59f774","path":"/2018-10-07-huong-dan-lazy-load-component-react/","title":"Hướng dẫn lazy load component trong React","desc":"Sự là hôm rồi đi phỏng vấn, được hỏi câu này mà mình đó giờ chưa làm nên không biết, nay có thời gian rảnh rỗi tìm hiểu, chia sẻ lại cho các bạn chưa biết."}]}},"context":{}}