{"hash":"6000b69201124b9452c41d38889aba5b11cf5e89","data":{"tag":{"title":"js","belongsTo":{"edges":[{"node":{"id":"cf47898b4f8e17bbc7856e26a77f070a","title":"Một vài pattern để viết component của React cần dùng chung state","path":"/2021-03-14-mot-vai-pattern-de-viet-react-component/","date":"2021-03-14","timeToRead":6,"desc":"Câu chuyện chia sẽ state và phương thức giữa các component chưa bao giờ là cũ trong React","content":"<h2 id=\"compound-component\"><a href=\"#compound-component\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>compound component</h2>\n<p>Khi gặp tình huống một component không thể đứng độc lập, mà nó buộc phải kết hợp với một component khác và cùng chia sẻ một bộ state và phương thức. Đó là lúc chúng ta cân nhắc cách viết compound component.</p>\n<p>Một ví dụ rất dễ thấy của compound component là element <code class=\"language-text\">&lt;select /&gt;</code> và <code class=\"language-text\">&lt;option /&gt;</code>, <code class=\"language-text\">&lt;option/&gt;</code> không thể đứng độc lập, nó luôn được đặt trong <code class=\"language-text\">&lt;select/&gt;</code> có thể truy xuất và gọi các phương thức tương tự như <code class=\"language-text\">&lt;select/&gt;</code></p>\n<p><strong>Tại sao lại sử dụng compound component?</strong></p>\n<p>Nếu bạn là người viết component, người khác sử dụng component này, các dev khác sẽ cảm ơn bạn rất nhiều. Bạn đóng gói mọi thứ logic vào bên trong component cha như vậy, người sau sẽ không cần bận tâm nữa.</p>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// parent component</span>\n<span class=\"token comment\">// xử lý event onChange, quản lý state selected value</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">RadioImageForm</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n\t</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">RadioImageForm.RadioInput</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n\t</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">RadioImageForm.RadioInput</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n\t</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">RadioImageForm.RadioInput</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">RadioImageForm</span></span><span class=\"token punctuation\">></span></span></code></pre>\n<p>Với child component của <code class=\"language-text\">&lt;RadioImageForm /&gt;</code>, để cho nó rõ ràng minh bạch là chúng ta sẽ sử dụng những giá trị cung cấp từ parent, chúng ta dùng kiểu viết <code class=\"language-text\">&lt;RadioImageForm.RadioInput /&gt;</code></p>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword module\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">RadioImageForm</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span><span class=\"token operator\">&lt;</span><span class=\"token maybe-class-name\">Props</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">State</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">static</span> <span class=\"token maybe-class-name\">RadioInput</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n\t\tcurrentValue<span class=\"token punctuation\">,</span>\n\t    onChange<span class=\"token punctuation\">,</span>\n\t    label<span class=\"token punctuation\">,</span>\n\t    value<span class=\"token punctuation\">,</span>\n\t    name<span class=\"token punctuation\">,</span>\n\t    imgSrc<span class=\"token punctuation\">,</span>\n\t    key<span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">RadioInputProps</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token parameter\"><span class=\"token maybe-class-name\">ReactElement</span></span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">(</span>\n\t\t<span class=\"token comment\">// ...</span>\n\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tonChange <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token parameter\"><span class=\"token keyword\">void</span></span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n\t  <span class=\"token comment\">// ...</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    currentValue<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n    onChange<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">onChange</span><span class=\"token punctuation\">,</span>\n    defaultValue<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">props</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">defaultValue</span> <span class=\"token operator\">||</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token property-access\"><span class=\"token maybe-class-name\">ReactElement</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">RadioImageFormWrapper</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token punctuation\">{</span><span class=\"token comment\">/* .... */</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">RadioImageFormWrapper</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Một nhu cầu rất phổ biến là người khác sẽ muốn control component con <code class=\"language-text\">&lt;RadioInput /&gt;</code> bằng việc truyền thêm <code class=\"language-text\">prop</code>, nhưng thay vì truyền thằng vào component con, chúng ta hãy để họ truyền thông qua component cha <code class=\"language-text\">&lt;RadioImageForm/&gt;</code>, vì một lý do nào đó chúng ta cần truy cập các prop này bên trong component cha thì sao? Chúng ta làm thêm một bước <code class=\"language-text\">pass-through</code> các prop xuống cho component con với <code class=\"language-text\">React.Children.map</code> hoặc <code class=\"language-text\">React.cloneElement</code></p>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token property-access\"><span class=\"token maybe-class-name\">ReactElement</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> currentValue<span class=\"token punctuation\">,</span> onChange<span class=\"token punctuation\">,</span> defaultValue <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">state</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">RadioImageFormWrapper</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token punctuation\">{</span>\n          <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token property-access\"><span class=\"token maybe-class-name\">Children</span></span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">props</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">children</span><span class=\"token punctuation\">,</span> \n            <span class=\"token punctuation\">(</span><span class=\"token parameter\">child<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token property-access\"><span class=\"token maybe-class-name\">ReactElement</span></span></span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span>\n              <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">cloneElement</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n                currentValue<span class=\"token punctuation\">,</span>\n                onChange<span class=\"token punctuation\">,</span>\n                defaultValue<span class=\"token punctuation\">,</span>\n              <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">RadioImageFormWrapper</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Quay lại với <code class=\"language-text\">&lt;RadioInput /&gt;</code></p>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">static</span> <span class=\"token function-variable function\"><span class=\"token maybe-class-name\">RadioInput</span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>\n  currentValue<span class=\"token punctuation\">,</span>\n  onChange<span class=\"token punctuation\">,</span>\n  label<span class=\"token punctuation\">,</span>\n  value<span class=\"token punctuation\">,</span>\n  name<span class=\"token punctuation\">,</span>\n  imgSrc<span class=\"token punctuation\">,</span>\n  key<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">RadioInputProps</span></span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>radio-button-group<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>key<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n      <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>radio<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token attr-name\">name</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span></span>\n      <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>value<span class=\"token punctuation\">}</span></span>\n      <span class=\"token attr-name\">aria-label</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>label<span class=\"token punctuation\">}</span></span>\n      <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>onChange<span class=\"token punctuation\">}</span></span>\n      <span class=\"token attr-name\">checked</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>currentValue <span class=\"token operator\">===</span> value<span class=\"token punctuation\">}</span></span>\n      <span class=\"token attr-name\">aria-checked</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>currentValue <span class=\"token operator\">===</span> value<span class=\"token punctuation\">}</span></span>\n    <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>imgSrc<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>overlay<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span><span class=\"token comment\">/* .... */</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Toàn bộ source code: <a href=\"https://codesandbox.io/s/compound-components-radio-image-form-k1h8x\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://codesandbox.io/s/compound-components-radio-image-form-k1h8x</a></p>\n<h3 id=\"hạn-chế\"><a href=\"#h%E1%BA%A1n-ch%E1%BA%BF\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Hạn chế</h3>\n<p>Với cách viết compound component này, chúng ta bị một hạn chế là bắt buộc phai viết component theo kiểu</p>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">RadioImageForm</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n\t</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">RadioImageForm.RadioInput</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n\t</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">RadioImageForm.RadioInput</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n\t</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">RadioImageForm.RadioInput</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">RadioImageForm</span></span><span class=\"token punctuation\">></span></span></code></pre>\n<p>Chúng ta không được phép chèn thêm một số thẻ <code class=\"language-text\">&lt;div /&gt;</code> ở giữa nếu có nhu cầu tùy biến giao diện chẳng hạn</p>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">RadioImageForm</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n\t</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n\t</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">RadioImageForm.RadioInput</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n\t</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">RadioImageForm.RadioInput</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n\t</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">RadioImageForm.RadioInput</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n\t</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">RadioImageForm</span></span><span class=\"token punctuation\">></span></span></code></pre>\n<p><a href=\"https://codesandbox.io/s/compound-components-radio-image-form-k1h8x\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Compound component</a>\n<a href=\"https://codesandbox.io/s/functional-compound-components-w-hooks-radio-image-form-2zbhs\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Compound component với React Hook</a></p>\n<h2 id=\"flexible-compound-component\"><a href=\"#flexible-compound-component\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Flexible compound component</h2>\n<p>Flexible compound component ra đời để giải quyết hạn chế của compound component, chúng ta sẽ sử dụng React Context API.</p>\n<p>Chúng ta sẽ tạo ra một <code class=\"language-text\">context</code> mà ở đó cả component con và cha điều có thể truy xuất được, đúng như mục đích ra đời của Context API</p>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> <span class=\"token maybe-class-name\">RadioImageFormContext</span> <span class=\"token operator\">=</span> <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">createContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  currentValue<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n  defaultValue<span class=\"token operator\">:</span> <span class=\"token keyword nil\">undefined</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">onChange</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token maybe-class-name\">RadioImageFormContext</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">displayName</span> <span class=\"token operator\">=</span> <span class=\"token string\">'RadioImageForm'</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Chúng ta sẽ refactor lại <code class=\"language-text\">&lt;RadioImageForm/&gt;</code>, bỏ đi đoạn <code class=\"language-text\">React.Children.map</code>, thay bằng <code class=\"language-text\">&lt;Provider /&gt;</code></p>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token property-access\"><span class=\"token maybe-class-name\">ReactElement</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> children <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">props</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">RadioImageFormWrapper</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">RadioImageFormContext.Provider</span></span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">state</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">RadioImageFormContext.Provider</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">RadioImageFormWrapper</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<blockquote>\n<p>Sử dụng Provider có một lưu ý sống còn là đừng bao giờ truyền <code class=\"language-text\">value={{ some bla bla}}</code>, như vậy nó sẽ khác nhau trên tất cả những lần render, hãy nhớ truyền một thứ gì đó cache được và chỉ bị thay đổi khi cần thiết như this.state</p>\n</blockquote>\n<p>Trong component con <code class=\"language-text\">&lt;RadioInput /&gt;</code> chúng ta có thể truy xuất tất cả dữ liệu nội bộ thông qua <em>consumer</em>, bởi vì <code class=\"language-text\">&lt;RadioInput /&gt;</code> đang nằm trong <code class=\"language-text\">&lt;RadioImageForm /&gt;</code> luôn theo cách viết của chúng ta, nên có thể khai báo một static property <code class=\"language-text\">Consumer</code> bên trong <code class=\"language-text\">RadioImageForm</code></p>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword module\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">RadioImageForm</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span><span class=\"token operator\">&lt;</span><span class=\"token maybe-class-name\">Props</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">State</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">static</span> <span class=\"token maybe-class-name\">Consumer</span> <span class=\"token operator\">=</span> <span class=\"token maybe-class-name\">RadioImageFormContext</span><span class=\"token punctuation\">.</span><span class=\"token property-access\"><span class=\"token maybe-class-name\">Consumer</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">//...</span></code></pre>\n<p><a href=\"https://codesandbox.io/s/flexible-compound-components-radio-image-form-393y7\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Source code ví dụ</a>\n<a href=\"https://codesandbox.io/s/functional-flexible-compound-components-w-hooks-radio-image-form-2u3sf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Source code Flexible compound component bằng functional component</a></p>\n<h2 id=\"provider-pattern\"><a href=\"#provider-pattern\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Provider Pattern</h2>\n<p>Provider pattern là kỹ thuật kết hợp giữa React Context API và render props pattern, vẫn là để giải quyết câu chuyện chia sẻ state giữa các component trong cây.</p>\n<p>Nếu bạn có thắc mắc, ủa vậy sao không dùng Redux, Mobx, Recoil, React Sweet State, Rematch, Unstated,... cho khỏe người ơi? Thì câu trả lời của mình là, ừ các bạn nên xài những thư viện quản lý state như vậy cho khỏe người, khỏe cho cả người maintain code bạn. Còn đây là cách làm nếu bạn muốn tham khảo, nếu không dùng gì hết, tôi dư giả thời gian để code từ đầu thì bạn có thể go-ahead với cách này</p>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// src/components/DogDataProvider.tsx</span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">State</span> <span class=\"token punctuation\">{</span>\n  data<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">IDog</span><span class=\"token punctuation\">;</span>\n  status<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">Status</span><span class=\"token punctuation\">;</span>\n  error<span class=\"token operator\">:</span> <span class=\"token known-class-name class-name\">Error</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> initState<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">State</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> status<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">Status</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">loading</span><span class=\"token punctuation\">,</span> data<span class=\"token operator\">:</span> <span class=\"token keyword null nil\">null</span><span class=\"token punctuation\">,</span> error<span class=\"token operator\">:</span> <span class=\"token keyword null nil\">null</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token maybe-class-name\">DogDataProviderContext</span> <span class=\"token operator\">=</span> <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">createContext</span><span class=\"token punctuation\">(</span><span class=\"token keyword nil\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token maybe-class-name\">DogDataProviderContext</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">displayName</span> <span class=\"token operator\">=</span> <span class=\"token string\">'DogDataProvider'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token maybe-class-name\">DogDataProvider</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token constant\">FC</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> children <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token parameter\"><span class=\"token maybe-class-name\">ReactElement</span></span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>state<span class=\"token punctuation\">,</span> setState<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">useState</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">State</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">(initState);\n\n  React.useEffect(() => </span><span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setState</span><span class=\"token punctuation\">(</span>initState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token known-class-name class-name\">Promise</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>void</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"> => </span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// MOCK API CALL</span>\n        <span class=\"token keyword\">const</span> asyncMockApiFn <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token known-class-name class-name\">Promise</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">IDog</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"> =>\n          await new Promise(resolve => setTimeout(() => resolve(DATA), 1000));\n        const data = await asyncMockApiFn();\n\n        setState(</span><span class=\"token punctuation\">{</span>\n          data<span class=\"token punctuation\">,</span>\n          status<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">Status</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">loaded</span><span class=\"token punctuation\">,</span>\n          error<span class=\"token operator\">:</span> <span class=\"token keyword null nil\">null</span>\n        <span class=\"token punctuation\">}</span><span class=\"token plain-text\">);\n      } catch (error) </span><span class=\"token punctuation\">{</span>\n        <span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n          error<span class=\"token punctuation\">,</span>\n          status<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">Status</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">error</span><span class=\"token punctuation\">,</span>\n          data<span class=\"token operator\">:</span> <span class=\"token keyword null nil\">null</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    })();\n  }, []);\n\n  return (\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">DogDataProviderContext.Provider</span></span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>state<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">DogDataProviderContext.Provider</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  );\n};</span></code></pre>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// src/components/DogDataProvider.tsx</span>\n\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">useDogProviderState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> context <span class=\"token operator\">=</span> <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">useContext</span><span class=\"token punctuation\">(</span><span class=\"token maybe-class-name\">DogDataProviderContext</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>context <span class=\"token operator\">===</span> <span class=\"token keyword nil\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'useDogProviderState phải được sử dụng bên trong DogDataProvider.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> context<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// src/index.tsx</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\"><span class=\"token maybe-class-name\">App</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Router</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>App<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token punctuation\">{</span><span class=\"token comment\">/* DataProvider phải nằm trên cùng của cây.*/</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">DogDataProvider</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Nav</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>main</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>py-5 md:py-20 max-w-screen-xl mx-auto text-center text-white w-full<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Banner</span></span>\n              <span class=\"token attr-name\">title</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'React Component Patterns:'</span><span class=\"token punctuation\">}</span></span>\n              <span class=\"token attr-name\">subtitle</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'Provider Pattern'</span><span class=\"token punctuation\">}</span></span>\n            <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Switch</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n              </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Route</span></span> <span class=\"token attr-name\">exact</span> <span class=\"token attr-name\">path</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n                </span><span class=\"token punctuation\">{</span><span class=\"token comment\">/* Component con sử dụng dữ liệu qua Consumer */</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n                </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Profile</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n              </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Route</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n              </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Route</span></span> <span class=\"token attr-name\">path</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/friends<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n                </span><span class=\"token punctuation\">{</span><span class=\"token comment\">/* Component con sử dụng dữ liệu qua Consumer */</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n                </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">DogFriends</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n              </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Route</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Switch</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>main</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">DogDataProvider</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Router</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\"><span class=\"token maybe-class-name\">Profile</span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// custom hook nhận \"subscribes\" khi có state thay đổi</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> data<span class=\"token punctuation\">,</span> status<span class=\"token punctuation\">,</span> error <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">useDogProviderState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>//...<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Profile</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>mt-10<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">       \n        </span><span class=\"token punctuation\">{</span>error <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Error</span></span> <span class=\"token attr-name\">errorMessage</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>error<span class=\"token punctuation\">.</span><span class=\"token property-access\">message</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span>\n        <span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> status <span class=\"token operator\">===</span> <span class=\"token maybe-class-name\">Status</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">loading</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Loader</span></span> <span class=\"token attr-name\">isInherit</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span>\n        <span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ProfileCard</span></span> <span class=\"token attr-name\">data</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>data<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre>\n<p><a href=\"https://codesandbox.io/s/provider-pattern-with-react-custom-hooks-llirx\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Source Code Provider Pattern</a></p>\n<p><a href=\"https://dev.to/alexi_be3/react-component-patterns-49ho\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">React Component Patterns</a></p>\n","cover_image":""}},{"node":{"id":"f92db246b489ea2b34cf82e11e30aea6","title":"Làm tính năng Theme trong React?","path":"/2021-02-21-lam-theme-bang-css-hay-react-context/","date":"2021-02-21","timeToRead":3,"desc":"Sẽ có nhiều tiếp cận để làm theme cho trang web, mổ xẻ 2 cách phổ biến hiện nay trong React, chọn cách nào cho nó đơn giản nhưng mang lại hiệu quả cao","content":"<p>Để hỗ trợ tính năng <em>Theme</em>, cho phép người dùng lựa chọn kiểu giao diện mà họ thích, trong React, bạn sẽ có thể tiếp cận 1 trong 2 cách dùng CSS-in-JS hoặc dùng CSS variable (tất nhiên không có hỗ trợ với IE)</p>\n<p>Nếu dùng CSS-in-JS bạn sẽ có thể làm được nhiều <em>thứ</em> hơn, bạn có một bộ công cụ đủ các <strong>đạo cụ</strong> để mua mai trong JS. Bài viết này sẽ chỉ ra tại sao bạn nên dùng CSS variable cho nhu cầu làm theme</p>\n<p>Nếu dùng CSS-in-JS, trong React bạn sẽ tổ chức một <code class=\"language-text\">ThemeProvider</code> bằng React Context, dùng hook <code class=\"language-text\">useTheme</code>  để lấy giá trị trong <code class=\"language-text\">ThemeProvider</code>, sẽ như thế này</p>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword module\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword module\">as</span> <span class=\"token maybe-class-name\">React</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'react'</span>\n<span class=\"token keyword module\">import</span> styled <span class=\"token keyword module\">from</span> <span class=\"token string\">'@emotion/styled'</span>\n<span class=\"token keyword module\">import</span> <span class=\"token punctuation\">{</span><span class=\"token maybe-class-name\">ThemeProvider</span><span class=\"token punctuation\">}</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'emotion-theming'</span>\n\n<span class=\"token keyword\">const</span> themes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  light<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    colors<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      primary<span class=\"token operator\">:</span> <span class=\"token string\">'deeppink'</span><span class=\"token punctuation\">,</span>\n      background<span class=\"token operator\">:</span> <span class=\"token string\">'white'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  dark<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    colors<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      primary<span class=\"token operator\">:</span> <span class=\"token string\">'lightpink'</span><span class=\"token punctuation\">,</span>\n      background<span class=\"token operator\">:</span> <span class=\"token string\">'black'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token maybe-class-name\">PrimaryText</span> <span class=\"token operator\">=</span> styled<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">div</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>theme<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  padding<span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\n  color<span class=\"token operator\">:</span> theme<span class=\"token punctuation\">.</span><span class=\"token property-access\">colors</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">primary</span><span class=\"token punctuation\">,</span>\n  backgroundColor<span class=\"token operator\">:</span> theme<span class=\"token punctuation\">.</span><span class=\"token property-access\">colors</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">background</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\"><span class=\"token maybe-class-name\">ThemeToggler</span></span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>theme<span class=\"token punctuation\">,</span> onClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> nextTheme <span class=\"token operator\">=</span> theme <span class=\"token operator\">===</span> <span class=\"token string\">'light'</span> <span class=\"token operator\">?</span> <span class=\"token string\">'dark'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'light'</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token function\">onClick</span><span class=\"token punctuation\">(</span>nextTheme<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      Change to </span><span class=\"token punctuation\">{</span>nextTheme<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> mode\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\"><span class=\"token maybe-class-name\">App</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>theme<span class=\"token punctuation\">,</span> setTheme<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">'light'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ThemeProvider</span></span> <span class=\"token attr-name\">theme</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>themes<span class=\"token punctuation\">[</span>theme<span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">PrimaryText</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">This text is the primary color</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">PrimaryText</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ThemeToggler</span></span>\n        <span class=\"token attr-name\">theme</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>theme<span class=\"token punctuation\">}</span></span>\n        <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">nextTheme</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token function\">setTheme</span><span class=\"token punctuation\">(</span>nextTheme<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span>\n      <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">ThemeProvider</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword module\">export</span> <span class=\"token keyword module\">default</span> <span class=\"token maybe-class-name\">App</span></code></pre>\n<p>Nếu dùng CSS variable, chúng ta khai bao một bộ các biến cần dùng, rồi chèn thêm <code class=\"language-text\">data-theme</code> cho thẻ <code class=\"language-text\">body</code></p>\n<p>CSS</p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">body<span class=\"token attribute\"><span class=\"token punctuation\">[</span><span class=\"token attr-name\">data-theme</span><span class=\"token operator\">=</span><span class=\"token attr-value\">'light'</span><span class=\"token punctuation\">]</span></span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token variable\">--colors-primary</span><span class=\"token punctuation\">:</span> <span class=\"token color\">deeppink</span><span class=\"token punctuation\">;</span>\n  <span class=\"token variable\">--colors-background</span><span class=\"token punctuation\">:</span> <span class=\"token color\">white</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">body<span class=\"token attribute\"><span class=\"token punctuation\">[</span><span class=\"token attr-name\">data-theme</span><span class=\"token operator\">=</span><span class=\"token attr-value\">'dark'</span><span class=\"token punctuation\">]</span></span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token variable\">--colors-primary</span><span class=\"token punctuation\">:</span> <span class=\"token color\">lightpink</span><span class=\"token punctuation\">;</span>\n  <span class=\"token variable\">--colors-background</span><span class=\"token punctuation\">:</span> <span class=\"token color\">black</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Phần implement của React component lúc này sửa lại</p>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword module\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword module\">as</span> <span class=\"token maybe-class-name\">React</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'react'</span>\n<span class=\"token keyword module\">import</span> <span class=\"token string\">'./css-vars.css'</span>\n<span class=\"token keyword module\">import</span> styled <span class=\"token keyword module\">from</span> <span class=\"token string\">'@emotion/styled'</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token maybe-class-name\">PrimaryText</span> <span class=\"token operator\">=</span> styled<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">div</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  padding<span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\n  color<span class=\"token operator\">:</span> <span class=\"token string\">'var(--colors-primary)'</span><span class=\"token punctuation\">,</span>\n  backgroundColor<span class=\"token operator\">:</span> <span class=\"token string\">'var(--colors-background)'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\"><span class=\"token maybe-class-name\">ThemeToggler</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>theme<span class=\"token punctuation\">,</span> setTheme<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">'light'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> nextTheme <span class=\"token operator\">=</span> theme <span class=\"token operator\">===</span> <span class=\"token string\">'light'</span> <span class=\"token operator\">?</span> <span class=\"token string\">'dark'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'light'</span>\n  <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">body</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">dataset</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">theme</span> <span class=\"token operator\">=</span> theme\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>theme<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token function\">setTheme</span><span class=\"token punctuation\">(</span>nextTheme<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      Change to </span><span class=\"token punctuation\">{</span>nextTheme<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> mode\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\"><span class=\"token maybe-class-name\">App</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">PrimaryText</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">This text is the primary color</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">PrimaryText</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ThemeToggler</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword module\">export</span> <span class=\"token keyword module\">default</span> <span class=\"token maybe-class-name\">App</span></code></pre>\n<p>Thẳng thắn mà nói, cả 2 cách làm này đều cho kết quả như nhau về mặt trãi nghiệm sử dụng, dùng CSS-in-JS sẽ có chút cảm giác hơi quá đà kỹ thuật, từ chuyên ngành là over-engineering.</p>\n<iframe src=\"https://codesandbox.io/embed/css-variables-vs-themeprovider-df90h?fontsize=14&hidenavigation=1&theme=dark\"\n     style=\"width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;\"\n     title=\"CSS Variables vs ThemeProvider\"\n     allow=\"accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking\"\n     sandbox=\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\"\n   ></iframe>\n<p>Về hiệu năng thì sao?</p>\n<p>ThemeProvider</p>\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/b903d3908c2f09f6139573d3da3ce48d0e831885/2cc29/static/e25d5f73f3fffe0fed8586eea95892df/e7448/theme-provider.png\" alt=\"Profiling session showing everything rendered\"></p>\n<p>CSS variable</p>\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/e737a004afce33b75c4c0b07e42c58a3ff1aaeec/21d3b/static/47d22cd6f96a31f50329ff658f18af39/e7448/css-vars.png\" alt=\"Profiling session showing only one component rendered\"></p>\n<p>Cũng không nhất thiết phải nhìn vào con số mili giây phải tốn cho việc render, vì simple này khá là bé. Bạn cứ hình dùng nếu một cây React Component với hàng trăm component con lồng ghép nhau, khi thay đổi giá trị trong ThemeProvider, tất cả những component đều bị render lại thì sẽ như thế nào? Việc dùng CSS variable sẽ mang lại hiệu quả hơn nhiều vì trình duyệt không phải làm quá nhiều thứ như cách 1.</p>\n<p>Có một lý do mà mình cho là hơi ngụy biện khi khăng khăng đòi dùng JS-in-CSS theo mình đoán là các bạn thật sự chưa đủ tự tin cũng như \"trình\" để viết CSS hiện đại, bạn chuyên tâm nâng tầm JS của mình mà quên mất việc nâng tầm CSS, vón đã phát triển rất xa từ cái thời bạn dùng <code class=\"language-text\">float</code></p>\n<p><a href=\"https://epicreact.dev/css-variables/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Use CSS Variables instead of React Context</a></p>\n","cover_image":""}}]}}},"context":{}}