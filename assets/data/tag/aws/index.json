{"hash":"41d494f24d0a7d48ff651f8ed64a032d16747c1a","data":{"tag":{"title":"aws","belongsTo":{"edges":[{"node":{"id":"933ee8a3a9e6b3f4f384e1dc4805c7d1","title":"Phân biệt sự khác nhau giữa Identity và Resource Base Policy trong AWS IAM","path":"/2022-09-25-phan-biet-identity-va-resource-base-policy/","date":"2022-09-25","timeToRead":2,"desc":"Series một số kiến thức cần có để lấy chứng chỉ AWS","content":"<p><strong>IDENTITY</strong>-based policy gán cho <code class=\"language-inline-text\">user</code>, <code class=\"language-inline-text\">group</code>, hoặc <code class=\"language-inline-text\">role</code> (gọi chung là <code class=\"language-inline-text\">identity</code>). Chỉ định những quyền gì mà <em>identity</em> có thể làm\n<strong>RESOURCE</strong>-based policy gán cho <em>resource</em>, ví dụ như S3 bucket, SQS queue, VPC endpooint</p>\n<p>Trong tình huống <code class=\"language-inline-text\">user</code> <em>không được cấp quyền</em> trên S3 bucket A (không được cấp không đồng nghĩa với việc bị cấm), nhưng resource policy đang gán cho bucket A cho phép mọi user upload vào bucket này, thì <code class=\"language-inline-text\">user</code> vẫn có thể upload</p>\n<p>Ví dụ, có <em>identity policy</em></p>\n<ul>\n<li>User A: List, Read trên resource A</li>\n<li>User B: List, Read trên resource B, C</li>\n<li>User C: List, Read, Write trên Resource A,B,C</li>\n<li>User D: Không có policy nào cả</li>\n</ul>\n<p>Tiếp đó chúng ta có <em>resource policy</em></p>\n<ul>\n<li>Resource A: User A = (List, Read), User C = (List, Read)</li>\n<li>Resource B: User B = (List, Write), User D = (List, Read)</li>\n<li>Resouce C: User B = Denied Access, User D: Full Access</li>\n</ul>\n<p>Thì kết quả từ 2 policy khi áp dụng sẽ là</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>LIST</th>\n<th>READ</th>\n<th>WRITE</th>\n<th>DENIED</th>\n<th>FULL ACCCESS</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>User A</td>\n<td>RES A</td>\n<td>RES A</td>\n<td>🚫</td>\n<td>🚫</td>\n<td>🚫</td>\n</tr>\n<tr>\n<td>User B</td>\n<td>RES B</td>\n<td>RES B</td>\n<td>RES B</td>\n<td>RES C</td>\n<td>🚫</td>\n</tr>\n<tr>\n<td>User C</td>\n<td>RES A,B,C</td>\n<td>RES A,B,C</td>\n<td>RES A,B,C</td>\n<td>🚫</td>\n<td>🚫</td>\n</tr>\n<tr>\n<td>User D</td>\n<td>RES B</td>\n<td>RES B</td>\n<td>🚫</td>\n<td>🚫</td>\n<td>RES C</td>\n</tr>\n</tbody>\n</table>\n<p>Khi <strong>identity</strong>-based policy kết hợp với <strong>Permission Boundary</strong>, lấy phần chung giữa hai tập</p>\n<p><img src=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/images/permissions_boundary.png\"></p>\n<p>Khi <strong>Resource</strong>-based policy kết hợp với <em>identity</em>-based policy và permission boundary, nó hơi ngoài lề một chút, lấy tất cả những phần chung giữa ba tập hợp cộng với tất cả những gì có trong resource-base policy</p>\n<p><img src=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/images/EffectivePermissions-rbp-boundary-id.png\"></p>\n<p>Khi kết hợp giữa tập <em>Service Control Policy</em>, <em>Permission boundary</em> và <em>identity-base policy</em>, chúng ta chỉ lấy phần tử chung của cả 3</p>\n<p><img src=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/images/EffectivePermissions-scp-boundary-id.png\"></p>\n<p>Tham khảo thêm <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"># Permissions boundaries for IAM entities</a></p>\n","cover_image":""}},{"node":{"id":"7ac3739a0f8e1c0f98a919794db694ac","title":"Lựa chọn giữa Redis và Memcached","path":"/2022-09-10-redis-vs-memcached/","date":"2022-09-10","timeToRead":1,"desc":"Series một số kiến thức cần có để lấy chứng chỉ AWS","content":"<p>Cả 2 điều rất dễ sử dụng và có chung công dụng tăng cường tốc độ, tuy nhiên có những khác biệt rất quan trọng chúng ta cần biết.</p>\n<p><strong>Redis</strong> và <strong>Memcached</strong> là 2 thư viện nguồn mở phổ biến khi cần kho dữ liệu <em>in-memory</em>. Memcached được thiết kế với định hướng đơn giản hóa nhất, trong khi Redis sẽ hỗ trợ nhiều tính năng và phù hợp với nhiều tình huống.</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Memcached</th>\n<th>Redis</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Cấu trúc dữ liệu phức tạp</td>\n<td></td>\n<td>✅</td>\n</tr>\n<tr>\n<td>Multithreaded</td>\n<td>✅</td>\n<td></td>\n</tr>\n<tr>\n<td>Snapshots</td>\n<td></td>\n<td>✅</td>\n</tr>\n<tr>\n<td>Replication</td>\n<td></td>\n<td>✅</td>\n</tr>\n<tr>\n<td>Transaction</td>\n<td></td>\n<td>✅</td>\n</tr>\n<tr>\n<td>Pub/Sub</td>\n<td></td>\n<td>✅</td>\n</tr>\n<tr>\n<td>Geospatial</td>\n<td></td>\n<td>✅</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"chọn-memcached-nếu-chúng-ta-gặp-yêu-cầu\"><a href=\"#ch%E1%BB%8Dn-memcached-n%E1%BA%BFu-ch%C3%BAng-ta-g%E1%BA%B7p-y%C3%AAu-c%E1%BA%A7u\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Chọn Memcached nếu chúng ta gặp yêu cầu</h3>\n<ul>\n<li>Đơn giản hóa</li>\n<li>Chạy trên những <em>node</em> lớn với nhiều core, nhiều thread</li>\n<li>Khả năng scale out/in</li>\n<li>Thêm/xóa node theo yêu cầu</li>\n<li>Phân biệt dữ liệu giữa các <em>shard</em></li>\n</ul>\n<h3 id=\"chọn-redis-nếu-chúng-ta-gặp-yêu-cầu\"><a href=\"#ch%E1%BB%8Dn-redis-n%E1%BA%BFu-ch%C3%BAng-ta-g%E1%BA%B7p-y%C3%AAu-c%E1%BA%A7u\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Chọn Redis nếu chúng ta gặp yêu cầu</h3>\n<ul>\n<li>Nhiều kiểu dữ liệu phức tạp như <code class=\"language-inline-text\">string</code>, <code class=\"language-inline-text\">hash</code>, <code class=\"language-inline-text\">list</code>, <code class=\"language-inline-text\">set</code></li>\n<li>Cần phải <strong>sắp xếp</strong> dữ liệu</li>\n<li>Cố định <em>key</em> của store</li>\n<li>Cần tạo <strong>replicate</strong> để tối ưu việc đọc dữ liệu</li>\n<li>Tự động <strong>failover</strong> nếu node chính chết</li>\n<li>Cần <strong>pub/sub</strong></li>\n<li>Khả năng <strong>backup/restore</strong></li>\n</ul>\n","cover_image":""}},{"node":{"id":"9cbb507063e9cbfe980133e85fe58558","title":"AWS SCP là gì","path":"/2022-09-06-aws-scp-permission-boundary-iam/","date":"2022-09-06","timeToRead":2,"desc":"Series một số kiến thức cần có để lấy chứng chỉ AWS","content":"<h2 id=\"aws-scp-là-gì\"><a href=\"#aws-scp-l%C3%A0-g%C3%AC\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>AWS SCP là gì</h2>\n<p>SCP là một tập hợp các rule <strong>cấp quyền</strong> sử dụng resource AWS trên tất cả account trong một AWS Organization</p>\n<h2 id=\"tại-sao-sử-dụng-scp\"><a href=\"#t%E1%BA%A1i-sao-s%E1%BB%AD-d%E1%BB%A5ng-scp\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Tại sao sử dụng SCP</h2>\n<p>Khi một tổ chức có nhiều account cần quản lý, việc quản lý sẽ khó khăn nếu chỉ sử dụng IAM</p>\n<p>IAM cho phép chúng ta kiểm soát quyền hạn trên từng user và role của một account, nhưng nếu chúng ta cần quản lý quyền hạn trên nhiều role/nhiều account cùng lúc sẽ cần đến một công cụ bao quát hơn</p>\n<blockquote>\n<blockquote>\n<p>OU (Organizational Unit) = tổ hợp các account được quản lý, SCP sẽ áp các rule trên từng OU</p>\n</blockquote>\n</blockquote>\n<p><img src=\"https://towardsthecloud.com/wp-content/uploads/aws-org-scp-diagram-1024x928.webp\"></p>\n<p>Như hình trên OU sẽ thường được định danh như các đơn vị <em>ban ngành</em> trong một tổ chức, chúng ta có <em>đội</em> nằm trong <code class=\"language-inline-text\">Core</code>, đội làm <code class=\"language-inline-text\">Application</code>, đội <code class=\"language-inline-text\">Development</code></p>\n<blockquote>\n<p>Lưu ý chỉ có thể áp tối đa <strong>5</strong> SCP trên một root/OU/account</p>\n</blockquote>\n<p>Ví dụ khai báo một policy <em>deny</em> việc sử dụng AWS Shield service</p>\n<div class=\"gridsome-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n\t<span class=\"token property\">\"Version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2012-10-17\"</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token property\">\"Statement\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n\t\t<span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token property\">\"Sid\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Statement1\"</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token property\">\"Effect\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Deny\"</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token property\">\"Action\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"shield:*\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token property\">\"Resource\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"*\"</span><span class=\"token punctuation\">]</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Vì SCP cũng có thể áp dụng trên root account, nên hãy rất cẩn thận và test kỹ trước khi áp dụng policy nào đó trên root account, tránh trường hợp mất các quyền quan trọng</p>\n<h2 id=\"scp-vs-permission-boundary-vs-iam-userrole-permission\"><a href=\"#scp-vs-permission-boundary-vs-iam-userrole-permission\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>SCP vs Permission Boundary vs IAM User/Role Permission</h2>\n<p>SCP không phải chỉ để cấp quyền, nó còn có thể <em>deny</em>, có thể hình dung nó như một danh sách có thể làm gì và không được làm gì (<strong>Deny/Allow action</strong>) trên một nhóm đối tượng trong <strong>Organization</strong></p>\n<p><img src=\"https://cloudacademy.com/wp-content/uploads/2021/03/Screenshot-2021-03-05-at-16.55.23.png\"></p>\n<table>\n<thead>\n<tr>\n<th>SCP</th>\n<th>IAM Policies</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Dùng với OU</td>\n<td>Dùng với Principal (Ai)</td>\n</tr>\n<tr>\n<td>Không thay thế IAM Policy</td>\n<td>identity-base -> dùng với user, group, role. resource-base -> dùng với AWS resource như S3</td>\n</tr>\n<tr>\n<td>Dùng được với Root account</td>\n<td>Không dùng được với Root account</td>\n</tr>\n<tr>\n<td>Một account con chỉ có số quyền như account cha hoặc ít hơn</td>\n<td>Chỉ 1 trong 2: allow hoặc deny, nếu allow thì ngầm hiểu phần còn lại deny, nếu deny ngầm hiều phần còn lại allow</td>\n</tr>\n</tbody>\n</table>\n<p>Còn về Permission Boundaries nó được sử dụng cho user/role (một IAM entity), nó cấp <strong>maximum permission mà identity-base có thể cấp cho một IAM entity</strong>, nó không dùng được với <strong>resource-base</strong>, trong khi đó SCP có thể áp dụng trên cả identity-base và resource-base</p>\n<h2 id=\"tóm-tắt-thuật-ngữ\"><a href=\"#t%C3%B3m-t%E1%BA%AFt-thu%E1%BA%ADt-ng%E1%BB%AF\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Tóm tắt thuật ngữ</h2>\n<table>\n<thead>\n<tr>\n<th>Thuật ngữ</th>\n<th>Giải thích</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>resource-base policy</td>\n<td>policy dùng với user, group, role</td>\n</tr>\n<tr>\n<td>identity-base policy</td>\n<td>policy dùng với các service của AWS</td>\n</tr>\n<tr>\n<td>Organization</td>\n<td>Đơn vị chúng ta khai bảo để tiện quản lý</td>\n</tr>\n</tbody>\n</table>\n","cover_image":""}},{"node":{"id":"539b556649530f0970013d8a6d4121dc","title":"Setup CloudFront cho ứng dụng","path":"/2022-04-30-setup-cloudfront-cho-und-dung/","date":"2022-04-30","timeToRead":3,"desc":"","content":"<!-- TOC -->\n<ul>\n<li><a href=\"#c%E1%BA%A5u-h%C3%ACnh-dns\">Cấu hình DNS</a></li>\n<li><a href=\"#c%E1%BA%A5u-h%C3%ACnh-cloudfront-distribution\">Cấu hình CloudFront distribution</a></li>\n</ul>\n<!-- /TOC -->\n<p>Chúng ta sẽ cùng cấu hình để đưa toàn bộ ứng dụng lên CloudFront, với những dữ liệu không nên cache như <em>data</em>, <em>auth</em>,... sẽ được <em>proxy</em> (chuyển tiếp) đến server.</p>\n<h2 id=\"cấu-hình-dns\"><a href=\"#c%E1%BA%A5u-h%C3%ACnh-dns\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Cấu hình DNS</h2>\n<p>Mục tiêu cuối cùng của chúng ta là đưa toàn bộ ứng dụng lên CloudFront. Tức là khi user truy cập vào domain, họ sẽ load ứng dụng từ CloudFront chứ không phải từ server. Trước tiên chúng ta phải vào <em>Route 53</em> để thay đổi lại DNS</p>\n<p><img src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645834717715_image.png?resize=1024%2C280&#x26;ssl=1\"></p>\n<p>Chọn <strong>Hosted Zone</strong></p>\n<p><img src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645994751238_image.png?w=821&#x26;ssl=1\"></p>\n<p>Click vào <strong>Create Hosted zone</strong> và nhập vào domain</p>\n<p><img src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645908142161_image.png?resize=1024%2C237&#x26;ssl=1\"></p>\n<p>Chúng ta đang nói với AWS hãy quản lý domain này cho tôi, AWS đưa cho chúng ta giá trị NS (name server) mà nó sẽ <em>route traffic</em> đến. Chúng ta sẽ cần đến chỗ quản lý domain, tùy thuộc vào nơi chúng ta đăng ký domain, giao diện quản lý có thể khác nhau, chúng ta cập nhập lại giá trị <em>NS</em> này cho domain</p>\n<p><img src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645835018979_image.png?w=762&#x26;ssl=1\"></p>\n<p>Trước khi thay đổi, nhớ lưu lại backup giá trị NS gốc</p>\n<h2 id=\"cấu-hình-cloudfront-distribution\"><a href=\"#c%E1%BA%A5u-h%C3%ACnh-cloudfront-distribution\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Cấu hình CloudFront distribution</h2>\n<p>Chúng ta sẽ điền vào phần <em>origin domain</em>, đừng nhập giá trị <strong>top-level domain</strong> như <code class=\"language-inline-text\">your-app.com</code>, nó sẽ là giá trị sub domain, như <code class=\"language-inline-text\">your-app.herokuapp.com</code> (nếu được host trên herokuapp.com)</p>\n<p><img src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645841894888_image.png?resize=1024%2C292&#x26;ssl=1\"></p>\n<p>Nếu có ý định dùng <code class=\"language-inline-text\">HTTPs</code> thì nhớ thay đổi phân <strong>Protocol</strong></p>\n<p><img src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645934723593_image.png?resize=1024%2C817&#x26;ssl=1\"></p>\n<p>Phần dưới đây cực kỳ quan trọng, nếu ứng dụng của chúng ta có authen, ghi dữ liệu, nói chung những phương thức khác ngoài <code class=\"language-inline-text\">GET</code>, thì nhớ chọn lại <strong>Allowed HTTP methods</strong></p>\n<p><img src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645841986703_image.png?w=730&#x26;ssl=1\"></p>\n<p>Chúng ta cũng cần thực hiện một vài thay đổi trên <strong>Cache key and origin requests</strong></p>\n<p><img src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645842121040_image.png?resize=1024%2C763&#x26;ssl=1\"></p>\n<p><strong>Cache policy</strong> chúng ta cho phép giá trị TTL minimum là 0, như vậy với giá trị non-caching header được gửi lên sẽ có hiệu lực</p>\n<p><img src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645842200731_image.png?resize=1024%2C857&#x26;ssl=1\"></p>\n<p><strong>Origin request policy</strong>, để đảm bảo cookie và query string khi đến CloudFront sẽ được gửi xuống server (không serve từ CDN)</p>\n<p><img src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645842297987_image.png?resize=1024%2C686&#x26;ssl=1\">\n<strong>Response headers policy</strong>, chúng ta chọn <strong>CORS With Preflight</strong></p>\n<p><img src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645842362649_image.png?resize=1024%2C684&#x26;ssl=1\"></p>\n<p>Chúng ta vẫn phải chứng minh với AWS là chúng ta là chủ sở hữu của domain, trước hết chúng ta yêu cầu một SSL certificate</p>\n<p><img src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645932319102_image.png?resize=1024%2C862&#x26;ssl=1\"></p>\n<p>Chọn <strong>Request certificate</strong></p>\n<p><img src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645845081306_image.png?resize=1024%2C360&#x26;ssl=1\">\n<img src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645845178014_image.png?resize=1024%2C553&#x26;ssl=1\"></p>\n<p>Cung cấp tên miền, chọn kiểu validate bằng <em>DNS</em></p>\n<p><img src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645932453934_image.png?resize=882%2C1024&#x26;ssl=1\"></p>\n<p>Chọn <strong>Request</strong>, chọn vào Certificate ID vừa được tạo ra</p>\n<p><img src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645932554825_image.png?resize=1024%2C211&#x26;ssl=1\">\n<img src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645932616235_image.png?resize=1024%2C227&#x26;ssl=1\"></p>\n<p>Để xác minh domain chính chủ, chúng ta cần đưa giá trị CNAME này vào trong Route 53</p>\n<p><img src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645932927217_image.png?resize=1024%2C462&#x26;ssl=1\"></p>\n<p>Chúng ta tạo một dòng CNAME với giá trị trong certificate ở trên</p>\n<p><img src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645932742028_image.png?resize=1024%2C637&#x26;ssl=1\"></p>\n<p>Sau khi xác minh xong AWS sẽ cập nhập status trên domain</p>\n<p><img src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645933155607_image.png?resize=1024%2C202&#x26;ssl=1\">\n<img src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645933066086_image.png?resize=1024%2C156&#x26;ssl=1\"></p>\n<p>Xong, giờ quay lại màn hình CloudFront distribution, trong mục <strong>SSL certificate</strong> chọn vào certificate chúng ta đã tạo</p>\n<p><img src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645933691496_image.png?resize=1024%2C727&#x26;ssl=1\">\n<img src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645933782796_image.png?resize=1024%2C440&#x26;ssl=1\"></p>\n<p>Việc còn lại là báo với Route 53 để nó route domain vào CloudFront, vào Route 53 tạo thêm một dòng DNS\nChọn <strong>A record type</strong>, đánh dấu dòng này là một <strong>alias</strong> và map alias này đến CloudFront. Bên trong mục <strong>Route traffic to</strong> chúng ta sẽ có tùy chọn <strong>Alias to CloudFront distribution</strong></p>\n<p><img src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645933944994_image.png?resize=1024%2C538&#x26;ssl=1\"></p>\n<p>OK, xong rồi đó.</p>\n<p>Để báo với CloudFront đừng cache những request cụ thể nào, chúng ta gửi trong header <code class=\"language-inline-text\">Cache-Control: no-cache</code>. Ví dụ sử dụng Express middleware</p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">app<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/graphql\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Cache-Control\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"no-cache\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">\"/graphql\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">expressGraphql</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">schema</span><span class=\"token operator\">:</span> executableSchema<span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">graphiql</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">rootValue</span><span class=\"token operator\">:</span> root\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </code></pre></div>\n<ul>\n<li><a href=\"https://css-tricks.com/setting-up-cloudfront-to-host-your-web-app/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Setting Up CloudFront to Host Your Web App</a></li>\n</ul>\n","cover_image":""}}]}}},"context":{}}