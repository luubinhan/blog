{"hash":"8b75f5cf7fb75a286e305cc75095c7218ff05729","data":{"tag":{"title":"security","belongsTo":{"edges":[{"node":{"id":"1406377b5fd99a7421072e35b009a6c6","title":"Hướng dẫn viết điều kiện security rules cho Cloud Firestore - Phần 2","path":"/huong-dan-viet-dieu-kien-security-rules-cho-cloud-firestore-phan-2/","date":"2018-08-18","timeToRead":3,"desc":"Series hướng dẫn sử dụng các service Firebase","content":"<!-- TOC -->\n<ul>\n<li><a href=\"#x%C3%A1c-th%E1%BB%B1c\">Xác thực</a></li>\n<li><a href=\"#ki%E1%BB%83m-tra-d%E1%BB%AF-li%E1%BB%87u\">Kiểm tra dữ liệu</a></li>\n<li><a href=\"#truy-c%E1%BA%ADp-%C4%91%E1%BA%BFn-c%C3%A1c-documents-kh%C3%A1c\">Truy cập đến các documents khác</a></li>\n<li><a href=\"#h%C3%A0m-t%C3%B9y-bi%E1%BA%BFn\">Hàm tùy biến</a></li>\n</ul>\n<!-- /TOC -->\n<h1 id=\"xác-thực\"><a href=\"#x%C3%A1c-th%E1%BB%B1c\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Xác thực</h1>\n<p>Một trong những tình huống phổ biến nhất là cho phép truy cập dữ liệu nếu user đã đăng nhập (còn gọi là xác thực, authentication).</p>\n<pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">service</span> cloud.firestore <span class=\"token punctuation\">{</span>\n  match /databases/<span class=\"token punctuation\">{</span>database<span class=\"token punctuation\">}</span>/documents <span class=\"token punctuation\">{</span>\n    // Cho phép user truy cập document\n    // trong collection cities nếu đã đăng nhập\n    match /cities/<span class=\"token punctuation\">{</span>city<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span>\n      allow read, write: <span class=\"token keyword\">if</span> request.auth.uid <span class=\"token operator\">!=</span> null<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Hoặc một tình huống phổ biến thứ 2 là cho phép user read và write lên dữ liệu của chính user đó</p>\n<pre class=\"language-shell\"><code class=\"language-shell\">services cloud.firestore <span class=\"token punctuation\">{</span>\n  match /databases/<span class=\"token punctuation\">{</span>database<span class=\"token punctuation\">}</span>/documents <span class=\"token punctuation\">{</span>\n    // chỉ cho phép uid khớp với userId trong document.\n    // Dùng ký tự đại diện <span class=\"token punctuation\">{</span>userId<span class=\"token punctuation\">}</span> như một biến bên trong câu điều kiện\n    match /users/<span class=\"token punctuation\">{</span>userId<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span>\n      allow read, update, delete: <span class=\"token keyword\">if</span> request.auth.uid <span class=\"token operator\">==</span> userId<span class=\"token punctuation\">;</span>\n      allow create: <span class=\"token keyword\">if</span> request.auth.uid <span class=\"token operator\">!=</span> null<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Nếu đang sử dụng Firebase Authentication, biến <code class=\"language-text\">request.auth</code> sẽ chưa thông tin của user gởi request, xem thêm chi tiết <a href=\"https://firebase.google.com/docs/reference/rules/rules.firestore.Request#auth\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ở đây.</a></p>\n<h1 id=\"kiểm-tra-dữ-liệu\"><a href=\"#ki%E1%BB%83m-tra-d%E1%BB%AF-li%E1%BB%87u\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Kiểm tra dữ liệu</h1>\n<p>Nếu muốn can thiệp việc cho phép hoặc từ chối truy cập theo dữ liệu trong document</p>\n<pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">service</span> cloud.firestore <span class=\"token punctuation\">{</span>\n  match /databases/<span class=\"token punctuation\">{</span>database<span class=\"token punctuation\">}</span>/documents <span class=\"token punctuation\">{</span>\n    // cho phép truy cập nếu giá trị của visibility bằng public\n    match /cities/<span class=\"token punctuation\">{</span>city<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span>\n      allow read: <span class=\"token keyword\">if</span> resource.data.visibility <span class=\"token operator\">==</span> <span class=\"token string\">'public'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Biến <code class=\"language-text\">resource</code> tương ứng với dữ liệu của document đang request, <code class=\"language-text\">request.data</code> sẽ là toàn bộ các field lưu trong document</p>\n<p>Trước khi write dữ liệu xuống, chúng ta sẽ muốn kiểm tra dữ liệu đang có và dữ liệu mới. Nếu chúng ta đang set rule pending write (không write dữ liệu ngay lập tức mà đợi xí), biến <code class=\"language-text\">request.resource</code> lúc này sẽ chứa dữ liệu mới.</p>\n<pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">service</span> cloud.firestore <span class=\"token punctuation\">{</span>\n  match /databases/<span class=\"token punctuation\">{</span>database<span class=\"token punctuation\">}</span>/documents <span class=\"token punctuation\">{</span>\n    match /cities/<span class=\"token punctuation\">{</span>city<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span>\n      allow update: <span class=\"token keyword\">if</span> request.resource.data.population <span class=\"token operator\">></span> <span class=\"token number\">0</span>\n      <span class=\"token operator\">&amp;&amp;</span> request.resource.data.name <span class=\"token operator\">==</span> resource.data.name\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h1 id=\"truy-cập-đến-các-documents-khác\"><a href=\"#truy-c%E1%BA%ADp-%C4%91%E1%BA%BFn-c%C3%A1c-documents-kh%C3%A1c\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Truy cập đến các documents khác</h1>\n<p>Sử dụng <code class=\"language-text\">get()</code> và <code class=\"language-text\">exists()</code> chúng ta có thể đánh giá các request với các documents trong database. Cả hai hàm này đều yêu cầu chỉ định đường dẫn đầy đủ, và phải đưa biến theo cú pháp <code class=\"language-text\">$(biến)</code> trong đường dẫn</p>\n<pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">service</span> cloud.firestore <span class=\"token punctuation\">{</span>\n  match /databases/<span class=\"token punctuation\">{</span>database<span class=\"token punctuation\">}</span>/documents <span class=\"token punctuation\">{</span>\n    match /cities/<span class=\"token punctuation\">{</span>city<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span>\n      // kiểm tra user hiện tại\n      // có tồn tại bên trong collections <span class=\"token function\">users</span>\n      // trước khi cho phép tạo thêm city mới\n      allow create: <span class=\"token keyword\">if</span> exists<span class=\"token punctuation\">(</span>/databases/<span class=\"token variable\"><span class=\"token variable\">$(</span>database<span class=\"token variable\">)</span></span>/documents/users/<span class=\"token variable\"><span class=\"token variable\">$(</span>request.auth.uid<span class=\"token variable\">)</span></span><span class=\"token punctuation\">)</span>\n\n      // cho phép user xóa city nếu user này là admin\n      allow delete: <span class=\"token keyword\">if</span> get<span class=\"token punctuation\">(</span>/databases/<span class=\"token variable\"><span class=\"token variable\">$(</span>database<span class=\"token variable\">)</span></span>/documents/users/<span class=\"token variable\"><span class=\"token variable\">$(</span>request.auth.id<span class=\"token variable\">)</span></span>.data.admin <span class=\"token operator\">==</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Đối với thao tác write, chúng ta có thể sử dụng <code class=\"language-text\">getAfter()</code> để truy cập dữ liệu của document sau khi thực hiện, thằng này cũng giống như <code class=\"language-text\">get</code> phải dùng đường dẫn đầy đủ.</p>\n<h1 id=\"hàm-tùy-biến\"><a href=\"#h%C3%A0m-t%C3%B9y-bi%E1%BA%BFn\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Hàm tùy biến</h1>\n<p>Một khi các rule security này trở nên phức tạp, chúng ta sẽ muốn gom các điều kiện này vào trong một hàm để tái sử dụng. Firestore hỗ trợ luôn. Nó sẽ như Javascript, tuy nhiên không hẳn là javascript đâu, nó có một số hạn chế</p>\n<ul>\n<li>Hàm này luôn chỉ chứa 1 return, không chạy loop, gọi service bên ngoài</li>\n<li>Hàm có thể access được các hàm và biến có cùng scope.</li>\n<li>Hàm có thể gọi đến hàm khác nhưng không được recurse, tối đa là sâu đến 10 thôi.</li>\n</ul>\n<p>Ví dụ kết hợp cả 2 điều kiện ở trên thành một hàm</p>\n<pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">service</span> cloud.firestore <span class=\"token punctuation\">{</span>\n  match /databases/<span class=\"token punctuation\">{</span>database<span class=\"token punctuation\">}</span>/documents <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function-name function\">signedInOrPublic</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token builtin class-name\">return</span> request.auth.uid <span class=\"token operator\">!=</span><span class=\"token operator\">=</span> null <span class=\"token operator\">||</span> resource.data.visibility <span class=\"token operator\">==</span> <span class=\"token string\">'public'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    match /cities/<span class=\"token punctuation\">{</span>city<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span>\n      allow read, write: <span class=\"token keyword\">if</span> signedInOrPublic<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    match /users/<span class=\"token punctuation\">{</span>user<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span>\n      allow read, write: <span class=\"token keyword\">if</span> signedInOrPublic<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p><a href=\"https://firebase.google.com/docs/firestore/security/rules-conditions\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Link bài gốc</a></p>\n","cover_image":""}},{"node":{"id":"e94b8af1ba38b19b4493bbf1b62d1845","title":"Hướng dẫn cách cài đặt security rules cho Cloud Firestore","path":"/huong-dan-cach-cai-dat-security-rules-cho-cloud-firestore/","date":"2018-08-17","timeToRead":3,"desc":"Series hướng dẫn sử dụng các service Firebase","content":"<!-- TOC -->\n<ul>\n<li><a href=\"#khai-b%C3%A1o\">Khai báo</a></li>\n<li><a href=\"#rules-readwrite\">Rules read/write</a></li>\n<li><a href=\"#chia-nh%E1%BB%8F-thao-t%C3%A1c-ra\">Chia nhỏ thao tác ra</a></li>\n<li><a href=\"#k%E1%BA%BF-th%E1%BB%ABa\">Kế thừa</a></li>\n</ul>\n<!-- /TOC -->\n<p>Cloud FireStore Security Rules cho phép chúng ta tùy chỉnh việc cấp quyền truy cập đến <strong>documents</strong> và <strong>collection</strong> trong database. Chúng ta có thể thiết lập quyền trên toàn bộ database hoặc một <strong>document</strong> xác định.</p>\n<h1 id=\"khai-báo\"><a href=\"#khai-b%C3%A1o\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Khai báo</h1>\n<p>Câu lệnh khai báo của Firestore Security Rules </p>\n<pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">service</span> cloud.firestore <span class=\"token punctuation\">{</span>\n  match /databases/<span class=\"token punctuation\">{</span>database<span class=\"token punctuation\">}</span>/documents <span class=\"token punctuation\">{</span>\n    // <span class=\"token punctuation\">..</span>.\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p><code class=\"language-text\">service cloud.firestore</code> để giới hạn chúng ta chỉ áp rule này xuống Cloud Firestore, tránh xung đột với các service khác của Firebase</p>\n<p><code class=\"language-text\">match /databases/{database}/documents</code> chỉ định rule này chỉ áp dụng cho các database trong project. Hiện tại mỗi project trên Firebase sẽ chỉ hỗ trợ một database Firestore</p>\n<h1 id=\"rules-readwrite\"><a href=\"#rules-readwrite\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Rules read/write</h1>\n<p>Câu lệnh <code class=\"language-text\">match</code> sẽ chỉ định đường dẫn của <em>document</em> bị ảnh hưởng, bên trong đó ta dùng lệnh <code class=\"language-text\">allow</code> để diễn giải chi tiết về rule</p>\n<pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">service</span> cloud.firestore <span class=\"token punctuation\">{</span>\n  match /databases/<span class=\"token punctuation\">{</span>database<span class=\"token punctuation\">}</span>/documents <span class=\"token punctuation\">{</span>\n    // tất cả document trong collection cities\n    match /cities/<span class=\"token punctuation\">{</span>city<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span>\n      allow read: <span class=\"token keyword\">if</span> <span class=\"token operator\">&lt;</span>condition<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n      allow write: <span class=\"token keyword\">if</span> <span class=\"token operator\">&lt;</span>condition<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Tất cả câu <code class=\"language-text\">match</code> phải chỉ đến <strong>documents</strong>, không trỏ tới <strong>collections</strong>, có thể dùng <code class=\"language-text\">match /cities/HCM</code> hoặc sử dụng ký tự đại diện bất kỳ document nào bên trong <code class=\"language-text\">cities</code> như ví dụ <code class=\"language-text\">match /cities/{city}</code></p>\n<h1 id=\"chia-nhỏ-thao-tác-ra\"><a href=\"#chia-nh%E1%BB%8F-thao-t%C3%A1c-ra\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Chia nhỏ thao tác ra</h1>\n<p>Tình huống: chúng ta muốn lúc tạo có những điều khác với lúc xóa document, hoặc cho phép read 1 document nhưng không cho phép đọc toàn bộ</p>\n<p>Câu điều kiện <code class=\"language-text\">read</code> có thể chia nhỏ ra thành <code class=\"language-text\">get</code> và <code class=\"language-text\">list</code>, trong khi <code class=\"language-text\">write</code> có thể chia nhỏ thành <code class=\"language-text\">create</code>, <code class=\"language-text\">update</code>, <code class=\"language-text\">delete</code></p>\n<pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">service</span> cloud.firestore <span class=\"token punctuation\">{</span>\n  match /databases/<span class=\"token punctuation\">{</span>database<span class=\"token punctuation\">}</span>/documents <span class=\"token punctuation\">{</span>\n    match /cities/<span class=\"token punctuation\">{</span>city<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span>\n      // điều kiện trên <span class=\"token number\">1</span> document\n      allow get: <span class=\"token keyword\">if</span> <span class=\"token operator\">&lt;</span>condition<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n\n      // điều kiện khi queries nhiều document, hoặc gọi hết collection\n      allow list: <span class=\"token keyword\">if</span> <span class=\"token operator\">&lt;</span>condition<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    match /cities/<span class=\"token punctuation\">{</span>city<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span>\n      // lúc tạo\n      allow create: <span class=\"token keyword\">if</span> <span class=\"token operator\">&lt;</span>condition<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n\n      // lúc update\n      allow update: <span class=\"token keyword\">if</span> <span class=\"token operator\">&lt;</span>condition<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n\n      // lúc delete\n      allow delete: <span class=\"token keyword\">if</span> <span class=\"token operator\">&lt;</span>condition<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h1 id=\"kế-thừa\"><a href=\"#k%E1%BA%BF-th%E1%BB%ABa\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Kế thừa</h1>\n<p>Như đã biết, nếu chưa biết thì giờ mình giải thích nhanh, database trên Firebase lưu dạng collections(giống như array), trong các collection là document (một object). Trên mỗi document nó có thể chứa các collection khác nữa. Vậy thì các rules trên document nó sẽ ảnh hưởng thế nào đến các sub collection này.</p>\n<p>Với ví dụ ở trên, trong <code class=\"language-text\">cities</code> chúng ta chứa một sub collection là <code class=\"language-text\">landmarks</code>. Rule trên <code class=\"language-text\">cities</code> sẽ không ảnh hưởng đến <code class=\"language-text\">landmarks</code>, trừ khi chúng ta cố tình set nó như sau</p>\n<pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">service</span> cloud.firestore <span class=\"token punctuation\">{</span>\n  match /databases/<span class=\"token punctuation\">{</span>database<span class=\"token punctuation\">}</span>/documents <span class=\"token punctuation\">{</span>\n    match /cities/<span class=\"token punctuation\">{</span>city<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span>\n      allow read, write: <span class=\"token keyword\">if</span> <span class=\"token operator\">&lt;</span>condition<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n        // áp dụng luôn cho collections con\n        match /landmarks/<span class=\"token punctuation\">{</span>landmark<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span>\n          allow read, write: <span class=\"token keyword\">if</span> <span class=\"token operator\">&lt;</span>condition<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Khi viết lồng câu <code class=\"language-text\">match</code> như vậy, câu <code class=\"language-text\">match</code> bên dưới sẽ <strong>luôn relative</strong> với thằng trên. Và chúng ta cũng có thể viết như sau, kết quả tương tự với cách viết ở trên</p>\n<pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">service</span> cloud.firestore <span class=\"token punctuation\">{</span>\n  match /databases/<span class=\"token punctuation\">{</span>database<span class=\"token punctuation\">}</span>/documents <span class=\"token punctuation\">{</span>\n    match /cities/<span class=\"token punctuation\">{</span>city<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span>\n      match /landmarks/<span class=\"token punctuation\">{</span>landmark<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span>\n        allow read, write: <span class=\"token keyword\">if</span> <span class=\"token operator\">&lt;</span>condition<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">service</span> cloud.firestore <span class=\"token punctuation\">{</span>\n  match /databases/<span class=\"token punctuation\">{</span>database<span class=\"token punctuation\">}</span>/documents <span class=\"token punctuation\">{</span>\n    match /cities/<span class=\"token punctuation\">{</span>city<span class=\"token punctuation\">}</span>/landmarks/<span class=\"token punctuation\">{</span>landmark<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span>\n      allow read, write: <span class=\"token keyword\">if</span> <span class=\"token operator\">&lt;</span>condition<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Nếu không chỉ áp dụng rule cho đúng thằng <code class=\"language-text\">landmarks</code>, sử dụng cú pháp đại diện cho toàn bộ collection nằm dưới <code class=\"language-text\">cities</code>, <code class=\"language-text\">{name=**}</code></p>\n<pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">service</span> cloud.firestore <span class=\"token punctuation\">{</span>\n  match /database/<span class=\"token punctuation\">{</span>database<span class=\"token punctuation\">}</span>/documents <span class=\"token punctuation\">{</span>\n    match /cities/<span class=\"token punctuation\">{</span>document<span class=\"token operator\">=</span>**<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span>\n      allow read, write: <span class=\"token keyword\">if</span> <span class=\"token operator\">&lt;</span>condition<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Với cách viết trên toàn bộ document nằm ở <code class=\"language-text\">/cities/hochiminh/landmarks/landmark81</code>, <code class=\"language-text\">/cities/hochiminh/landmarks/bitexco</code>, <code class=\"language-text\">cities/hochiminh</code></p>\n<p>Nếu chúng ta viết lại <code class=\"language-text\">match /cities/{city}/{document=**} thì nó chỉ ảnh hưởng đến sub collection, thằng</code>cities/hochiminh` sẽ không bị ảnh hưởng.</p>\n<p>Nếu có nhiều câu <code class=\"language-text\">allow</code> khớp với <code class=\"language-text\">match</code>, thì kết quả sẽ là một phép <code class=\"language-text\">hoặc</code>, bất kỳ thằng nào thõa điều kiện thì <code class=\"language-text\">allow</code></p>\n<pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">service</span> cloud.firestore <span class=\"token punctuation\">{</span>\n  match /databases/<span class=\"token punctuation\">{</span>database<span class=\"token punctuation\">}</span>/documents <span class=\"token punctuation\">{</span>\n    // <span class=\"token string\">'cities'</span> collection.\n    match /cities/<span class=\"token punctuation\">{</span>city<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span>\n      allow read, write: <span class=\"token keyword\">if</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    // <span class=\"token string\">'cities'</span> collection hoặc subcollections.\n    match /cities/<span class=\"token punctuation\">{</span>document<span class=\"token operator\">=</span>**<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span>\n      allow read, write: <span class=\"token keyword\">if</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Ví dụ ở trên toàn bộ collection cities sẽ cho phép read, write vì điều kiện thứ 2 luôn <code class=\"language-text\">true</code>, mặc dù thằng trước nó luôn <code class=\"language-text\">false</code></p>\n<p><a href=\"https://firebase.google.com/docs/firestore/security/rules-structure\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Link bài gốc của Google</a></p>\n","cover_image":""}},{"node":{"id":"465c085453aba70681b8078667ba6b33","title":"React Authentication với Amazon Cognito - Phần 1","path":"/react-authentication-voi-amazon-cognito-phan-1/","date":"2018-03-16","timeToRead":5,"desc":"Implement authentication 2 factor sử dụng React, React Router, Amazon Cognito","content":"<!-- TOC -->\n<ul>\n<li><a href=\"#setup\">Setup</a></li>\n<li><a href=\"#m%C3%A0n-h%C3%ACnh-%C4%91%C4%83ng-k%C3%BD\">Màn hình đăng ký</a></li>\n<li><a href=\"#sign-in\">Sign In</a></li>\n</ul>\n<!-- /TOC -->\n<p>Trong demo chúng ta sẽ sử dụng</p>\n<ul>\n<li>Create React App</li>\n<li>Glamor</li>\n<li>React Router</li>\n<li>Amazon Cognito để authentication</li>\n<li>AWS amplify để tương tác với AWS Services</li>\n</ul>\n<h1 id=\"setup\"><a href=\"#setup\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Setup</h1>\n<p>Khởi tạo project và các thư viện sẽ sử dụng</p>\n<pre class=\"language-shell\"><code class=\"language-shell\">create-react-app react-auth\n<span class=\"token builtin class-name\">cd</span> react-auth\n\n<span class=\"token function\">npm</span> i react-router-dom glamor --save</code></pre>\n<p>Cài AWSMobile CLI</p>\n<pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">npm</span> i -g awsmobile-cli</code></pre>\n<p>Khởi tạo config AWS IAM</p>\n<pre class=\"language-shell\"><code class=\"language-shell\">awsmobile configure\nawsmobile init</code></pre>\n<p>Nó sẽ tạo project Mobile Hub và file aws-exports.js trong thư mục src. Tiếp theo, thêm user-signin và deploy các config mới</p>\n<pre class=\"language-shell\"><code class=\"language-shell\">awsmobile user-signin <span class=\"token builtin class-name\">enable</span>\nawsmobile push</code></pre>\n<p><code class=\"language-text\">awsmobile user-signin enable</code> sẽ bật Amazon Congito trong project với các thiết đặt mặc định, bao gồm 2 factor authentication với SMS (sẽ thêm TOTP sau). Nếu muôn can thiệp các thiệt đặt, vào trực tiếp <a href=\"https://signin.aws.amazon.com/signin?redirect_uri=https%3A%2F%2Fconsole.aws.amazon.com%2Fcognito%2Fhome%3Fregion%3Dus-east-1%26state%3DhashArgs%2523%26isauthcode%3Dtrue&#x26;client_id=arn%3Aaws%3Aiam%3A%3A015428540659%3Auser%2Fcognito&#x26;forceMobileApp=0\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Amazon Cognito</a> để chỉnh</p>\n<h1 id=\"màn-hình-đăng-ký\"><a href=\"#m%C3%A0n-h%C3%ACnh-%C4%91%C4%83ng-k%C3%BD\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Màn hình đăng ký</h1>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*U_Oa4dWFeIqJ9TPJFx9lmQ.jpeg\"></p>\n<p>Để tương tác với Amazon Cognito, chúng ta sẽ sử các hàm trong class <code class=\"language-text\">Auth</code> từ thư viện <code class=\"language-text\">aws-amplify</code>:</p>\n<p><code class=\"language-text\">signUp</code> - tạo user mới</p>\n<pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token function\">signUp</span><span class=\"token punctuation\">(</span>username<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> password<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> attributes<span class=\"token operator\">?</span><span class=\"token operator\">:</span> object<span class=\"token punctuation\">)</span></code></pre>\n<p><code class=\"language-text\">confirmSignUp</code> - để xác nhận đăng ký thành công</p>\n<pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token function\">confirmSignUp</span><span class=\"token punctuation\">(</span>username<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> authenticationCode<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span></code></pre>\n<p><code class=\"language-text\">signIn</code> - đăng nhập</p>\n<pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token function\">signIn</span><span class=\"token punctuation\">(</span>username<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> password<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span></code></pre>\n<p><code class=\"language-text\">confirmSignIn</code> - xác nhận đăng nhập</p>\n<pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token function\">confirmSignIn</span><span class=\"token punctuation\">(</span>user<span class=\"token operator\">:</span> object<span class=\"token punctuation\">,</span> authenticationCode<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span></code></pre>\n<p>Trong file root của project, thường là <code class=\"language-text\">index.js</code> </p>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// một số import khác</span>\n<span class=\"token comment\">// </span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\">config</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'./aws-exports'</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token maybe-class-name\">Amplify</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'aws-amplify'</span>\n\n<span class=\"token maybe-class-name\">Amplify</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">configure</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">)</span>\n\n<span class=\"token maybe-class-name\">ReactDOM</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">,</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">registerServiceWorker</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Screen <code class=\"language-text\">SignUp.js</code></p>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token maybe-class-name\">React</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'react'</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> css <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'glamor'</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">SignUp</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    username<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n    password<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n    email<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n    phone_number<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n    authCode<span class=\"token operator\">:</span> <span class=\"token string\">''</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>div <span class=\"token punctuation\">{</span><span class=\"token spread operator\">...</span><span class=\"token method function property-access\">css</span><span class=\"token punctuation\">(</span>styles<span class=\"token punctuation\">.</span><span class=\"token property-access\">container</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">SignUp</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> styles <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  container<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    display<span class=\"token operator\">:</span> <span class=\"token string\">'flex'</span><span class=\"token punctuation\">,</span>\n    flexDirection<span class=\"token operator\">:</span> <span class=\"token string\">'column'</span><span class=\"token punctuation\">,</span>\n    alignItems<span class=\"token operator\">:</span> <span class=\"token string\">'center'</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Flow sẽ như thế này, sau khi user cung cấp các thông tin trong form signup, chúng ta gọi đến phương thức <code class=\"language-text\">signUp</code>, user sẽ nhận được một mã code để verify quá SMS, user điền mã code này vào form verify, chúng ta verify cái mã code này bằng phương thức 'confirmSignUp'</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/1000/1*Z1sFmf-KG7iiHG_-VMieQw.jpeg\"></p>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token maybe-class-name\">React</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'react'</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> css <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'glamor'</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">SignUp</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    username<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n    password<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n    email<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n    phone_number<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n    authCode<span class=\"token operator\">:</span> <span class=\"token string\">''</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function-variable function\">onChange</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">key<span class=\"token punctuation\">,</span> value</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> value <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>div <span class=\"token punctuation\">{</span><span class=\"token spread operator\">...</span><span class=\"token method function property-access\">css</span><span class=\"token punctuation\">(</span>styles<span class=\"token punctuation\">.</span><span class=\"token property-access\">container</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Sign Up</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token operator\">&lt;</span>input\n          <span class=\"token punctuation\">{</span><span class=\"token spread operator\">...</span><span class=\"token method function property-access\">css</span><span class=\"token punctuation\">(</span>styles<span class=\"token punctuation\">.</span><span class=\"token property-access\">input</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n          placeholder<span class=\"token operator\">=</span><span class=\"token string\">'Username'</span>\n          onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">evt</span> <span class=\"token arrow operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token string\">'username'</span><span class=\"token punctuation\">,</span> evt<span class=\"token punctuation\">.</span><span class=\"token property-access\">target</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>input\n          <span class=\"token punctuation\">{</span><span class=\"token spread operator\">...</span><span class=\"token method function property-access\">css</span><span class=\"token punctuation\">(</span>styles<span class=\"token punctuation\">.</span><span class=\"token property-access\">input</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n          placeholder<span class=\"token operator\">=</span><span class=\"token string\">'Password'</span>\n          type<span class=\"token operator\">=</span><span class=\"token string\">'password'</span>\n          onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">evt</span> <span class=\"token arrow operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token string\">'password'</span><span class=\"token punctuation\">,</span> evt<span class=\"token punctuation\">.</span><span class=\"token property-access\">target</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>input\n          <span class=\"token punctuation\">{</span><span class=\"token spread operator\">...</span><span class=\"token method function property-access\">css</span><span class=\"token punctuation\">(</span>styles<span class=\"token punctuation\">.</span><span class=\"token property-access\">input</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n          placeholder<span class=\"token operator\">=</span><span class=\"token string\">'Email'</span>\n          onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">evt</span> <span class=\"token arrow operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token string\">'email'</span><span class=\"token punctuation\">,</span> evt<span class=\"token punctuation\">.</span><span class=\"token property-access\">target</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>input\n          <span class=\"token punctuation\">{</span><span class=\"token spread operator\">...</span><span class=\"token method function property-access\">css</span><span class=\"token punctuation\">(</span>styles<span class=\"token punctuation\">.</span><span class=\"token property-access\">input</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n          placeholder<span class=\"token operator\">=</span><span class=\"token string\">'Phone Number'</span>\n          onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">evt</span> <span class=\"token arrow operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token string\">'phone_number'</span><span class=\"token punctuation\">,</span> evt<span class=\"token punctuation\">.</span><span class=\"token property-access\">target</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>div <span class=\"token punctuation\">{</span><span class=\"token spread operator\">...</span><span class=\"token method function property-access\">css</span><span class=\"token punctuation\">(</span>styles<span class=\"token punctuation\">.</span><span class=\"token property-access\">button</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Sign Up</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n        \n        <span class=\"token operator\">&lt;</span>input\n          <span class=\"token punctuation\">{</span><span class=\"token spread operator\">...</span><span class=\"token method function property-access\">css</span><span class=\"token punctuation\">(</span>styles<span class=\"token punctuation\">.</span><span class=\"token property-access\">input</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n          placeholder<span class=\"token operator\">=</span><span class=\"token string\">'Authentication Code'</span>\n          onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">evt</span> <span class=\"token arrow operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token string\">'authCode'</span><span class=\"token punctuation\">,</span> evt<span class=\"token punctuation\">.</span><span class=\"token property-access\">target</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>div <span class=\"token punctuation\">{</span><span class=\"token spread operator\">...</span><span class=\"token method function property-access\">css</span><span class=\"token punctuation\">(</span>styles<span class=\"token punctuation\">.</span><span class=\"token property-access\">button</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Confirm Sign Up</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n        \n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> styles <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  container<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    display<span class=\"token operator\">:</span> <span class=\"token string\">'flex'</span><span class=\"token punctuation\">,</span>\n    flexDirection<span class=\"token operator\">:</span> <span class=\"token string\">'column'</span><span class=\"token punctuation\">,</span>\n    alignItems<span class=\"token operator\">:</span> <span class=\"token string\">'center'</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  button<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    width<span class=\"token operator\">:</span> <span class=\"token string\">'170px'</span><span class=\"token punctuation\">,</span>\n    padding<span class=\"token operator\">:</span> <span class=\"token string\">'10px 0px'</span><span class=\"token punctuation\">,</span>\n    backgroundColor<span class=\"token operator\">:</span> <span class=\"token string\">'#ddd'</span><span class=\"token punctuation\">,</span>\n    cursor<span class=\"token operator\">:</span> <span class=\"token string\">'pointer'</span><span class=\"token punctuation\">,</span>\n    borderRadius<span class=\"token operator\">:</span> <span class=\"token string\">'3px'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">':hover'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      backgroundColor<span class=\"token operator\">:</span> <span class=\"token string\">'#ededed'</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  input<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    height<span class=\"token operator\">:</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span>\n    marginBottom<span class=\"token operator\">:</span> <span class=\"token string\">'10px'</span><span class=\"token punctuation\">,</span>\n    border<span class=\"token operator\">:</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">,</span>\n    outline<span class=\"token operator\">:</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">,</span>\n    borderBottom<span class=\"token operator\">:</span> <span class=\"token string\">'2px solid #4CAF50'</span><span class=\"token punctuation\">,</span>\n    fontSize<span class=\"token operator\">:</span> <span class=\"token string\">'16px'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'::placeholder'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      color<span class=\"token operator\">:</span> <span class=\"token string\">'rgba(0, 0, 0, .3)'</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword module\">export</span> <span class=\"token keyword module\">default</span> <span class=\"token maybe-class-name\">SignUp</span></code></pre>\n<p>Xong cái UI, giờ ta sử dụng 2 phương thức class <code class=\"language-text\">Auth</code></p>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// previous imports omitted</span>\n\n  <span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">Auth</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'aws-amplify'</span>\n\n  <span class=\"token comment\">// previously shown code omitted</span>\n  <span class=\"token function-variable function\">signUp</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> username<span class=\"token punctuation\">,</span> password<span class=\"token punctuation\">,</span> email<span class=\"token punctuation\">,</span> phone_number <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">state</span>\n    <span class=\"token maybe-class-name\">Auth</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">signUp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      username<span class=\"token punctuation\">,</span>\n      password<span class=\"token punctuation\">,</span>\n      attributes<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        email<span class=\"token punctuation\">,</span>\n        phone_number\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'successful sign up!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token keyword control-flow\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span> <span class=\"token arrow operator\">=></span> <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'error signing up: '</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function-variable function\">confirmSignUp</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token maybe-class-name\">Auth</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">confirmSignUp</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">state</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">username</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">state</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">authCode</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'successful confirm sign up!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token keyword control-flow\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span> <span class=\"token arrow operator\">=></span> <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'error confirming signing up: '</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// </span>\n    <span class=\"token comment\">// here we need to update the buttons to attach class methods to onClick event</span>\n    <span class=\"token operator\">&lt;</span>div <span class=\"token punctuation\">{</span><span class=\"token spread operator\">...</span><span class=\"token method function property-access\">css</span><span class=\"token punctuation\">(</span>styles<span class=\"token punctuation\">.</span><span class=\"token property-access\">button</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span> onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">signUp</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Sign Up</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token operator\">&lt;</span>input\n      <span class=\"token punctuation\">{</span><span class=\"token spread operator\">...</span><span class=\"token method function property-access\">css</span><span class=\"token punctuation\">(</span>styles<span class=\"token punctuation\">.</span><span class=\"token property-access\">input</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n      placeholder<span class=\"token operator\">=</span><span class=\"token string\">'Authentication Code'</span>\n      onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">evt</span> <span class=\"token arrow operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token string\">'authCode'</span><span class=\"token punctuation\">,</span> evt<span class=\"token punctuation\">.</span><span class=\"token property-access\">target</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div <span class=\"token punctuation\">{</span><span class=\"token spread operator\">...</span><span class=\"token method function property-access\">css</span><span class=\"token punctuation\">(</span>styles<span class=\"token punctuation\">.</span><span class=\"token property-access\">button</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span> onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">confirmSignUp</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Confirm Sign Up</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">}</span></code></pre>\n<p>Cuối cùng import và sử dụng component trong <code class=\"language-text\">App.js</code></p>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">Component</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\">logo</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'./logo.svg'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token string\">'./App.css'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token maybe-class-name\">SignUp</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'./SignUp'</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>App<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>header</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>App-header<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>logo<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>App-logo<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>logo<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>App-title<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Welcome to React</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>header</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">SignUp</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword module\">export</span> <span class=\"token keyword module\">default</span> <span class=\"token maybe-class-name\">App</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Các thông tin của user sẽ được lại trong 'Manage your User Pools', vào Amazon Coginito dashboard, chọn ứng dụng đã setup, chọn mục 'Users and Settings'</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/1000/1*XQfNfYhaGlkD0wxEPtr8bQ.jpeg\"></p>\n<h1 id=\"sign-in\"><a href=\"#sign-in\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Sign In</h1>\n<p>Sign in thì cũng tương tự như signup, chúng ta sử dụng <code class=\"language-text\">Auth.signIn(username, password)</code>, trả về object nếu thành công, sau đó nó sẽ gửi SMS tới user với code xác nhận lần nữa, verify bằng <code class=\"language-text\">confirmSignIn</code></p>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token function\">signIn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token maybe-class-name\">Auth</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">signIn</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">state</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">username</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">state</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">password</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">user</span> <span class=\"token arrow operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> user <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token keyword control-flow\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span> <span class=\"token arrow operator\">=></span> <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'error signing in! :'</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">confirmSignIn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token maybe-class-name\">Auth</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">confirmSignIn</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">state</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">user</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">state</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">authCode</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">userData</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'userdata: '</span><span class=\"token punctuation\">,</span> userData<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token keyword control-flow\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span> <span class=\"token arrow operator\">=></span> <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'error confirming sign in!: '</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>User data nằm trong cục dữ liệu trả về sau khi gọi hàm <code class=\"language-text\">confirmSignIn</code></p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*yBT-_MdRPCIj5KN3PnyFmw.png\"></p>\n<p>Có rất nhiều cách để lấy thông tin user đang đăng nhập, có thể dùng <code class=\"language-text\">Auth.currentAuthenticatedUser()</code> là dễ nhất, toàn bộ API có thể tham khảo <a href=\"https://aws.github.io/aws-amplify/api/classes/authclass.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ở đây</a></p>\n<p>Kết thúc phần 1 ở đây, phần 2 tiếp tục với Routing và TOTP để có thể làm Google Authenticator.</p>\n<hr>\n<p>Bài dịch từ tác giả Nader Dabit trên HackerNoon</p>\n","cover_image":""}}]}}},"context":{}}