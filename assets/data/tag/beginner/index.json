{"hash":"0281ffacf02e407aef71fb6a89d922a636585707","data":{"tag":{"title":"beginner","belongsTo":{"edges":[{"node":{"id":"aa7bf45ae027834fbd27f3ab24a17a09","title":"React Transition","path":"/2022-05-07-cach-dung-usetransition-trong-react/","date":"2022-05-07","timeToRead":2,"desc":"Một tính năng mới trong React 18, cho phép chúng ta đánh giấu một thay đổi là transition","content":"<p>React cho phép nó gián đoạn (không cập nhập những thay đổi đó ngay lập tức) và tránh việc hiển thị <em>Suspense fallback</em> component.</p>\n<p>React sẽ phân biệt việc cập nhập UI thành 2 loại: loại một cần thực hiện ngay (như nhập liệu input, chọn giá trị trong dropdown), và loại có ưu tiên thấp hơn, chậm chút không sao (như filter một danh sách)</p>\n<p>2 API mới, một hook và một cái dùng trong trường hợp không thể dùng hook</p>\n<ul>\n<li>React.startTransition</li>\n<li>React.useTransition</li>\n</ul>\n<div class=\"gridsome-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>isPending<span class=\"token punctuation\">,</span> startTransition<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useTransition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">,</span> setCount<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">function</span> <span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">startTransition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">setCount</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">c</span> <span class=\"token operator\">=></span> c <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n\t\t\t</span><span class=\"token punctuation\">{</span>isPending <span class=\"token operator\">&amp;&amp;</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Spinner</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n\t\t\t</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>handleClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>count<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n\t\t</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Lấy một ví dụ để thấy rõ hơn ứng dụng của <em>transition</em></p>\n<p>Chúng ta có một danh sách <em>employee name</em>, khi user nhập vào input, chúng ta thực hiện <em>filter</em> lại danh sách này.</p>\n<div class=\"gridsome-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">FilterList</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> name <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>query<span class=\"token punctuation\">,</span> setQuery<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">changeHandler</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">target</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> value <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setQuery</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n\t\t\t</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>innput</span> <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>changeHandler<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>query<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n\t\t\t</span><span class=\"token punctuation\">{</span>names<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span> i</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n\t\t        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ListItem</span></span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>i<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">name</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">highlight</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>query<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n\t\t</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">ListItem</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">,</span> highlight <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> index <span class=\"token operator\">=</span> name<span class=\"token punctuation\">.</span><span class=\"token function\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span>highlight<span class=\"token punctuation\">.</span><span class=\"token function\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>index <span class=\"token operator\">===</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>highlight<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> index <span class=\"token operator\">+</span> highlight<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span>index <span class=\"token operator\">+</span> highlight<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><a href=\"https://codesandbox.io/s/heavy-update-as-urgent-ejwbg?file=/src/FilterList.js\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Demo</a></p>\n<p>Khi user nhập quá nhanh, chúng ta sẽ thấy UI có vẻ hơi <em>lag</em> và nó không hiển thị được kết quá ngay.</p>\n<p>Ở đây <code class=\"language-inline-text\">&lt;ListItem /></code> đã được update liên tục khi user nhập vào input, việc này là không cần thiết, nó chỉ cần cập nhập lại sau khi user đã kết thúc nhập liệu, một cách khác là bỏ quả tất cả những lần cập nhập ở giữa, chỉ giữ lại lần cập nhập sau cùng.</p>\n<p>Để sửa lại</p>\n<div class=\"gridsome-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useState<span class=\"token punctuation\">,</span> useTransition <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">FilterList</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> names <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>query<span class=\"token punctuation\">,</span> setQuery<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>highlight<span class=\"token punctuation\">,</span> setHighlight<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>isPending<span class=\"token punctuation\">,</span> startTransition<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useTransition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">changeHandler</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">target</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> value <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setQuery</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">startTransition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setHighlight</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>changeHandler<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>query<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span>names<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span> i</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ListItem</span></span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>i<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">name</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">highlight</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>highlight<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><a href=\"https://codesandbox.io/s/heavy-update-as-non-urgent-ifobc?file=/src/FilterList.js\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Demo</a>.</p>\n<p><a href=\"https://dmitripavlutin.com/react-usetransition/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Don't Stop Me Now: How to Use React useTransition() hook</a></p>\n","cover_image":""}},{"node":{"id":"b3ecdb8766dc98704a9050af3e05bb9c","title":"Tất cả những gì bạn cần biết khi làm user avatar trong React","path":"/2022-05-01-tat-ca-nhung-gi-can-biet-de-lam-viec-voi-avatar-trong-react/","date":"2022-05-01","timeToRead":4,"desc":"","content":"<h2 id=\"tạo-avatar-mặc-định\"><a href=\"#t%E1%BA%A1o-avatar-m%E1%BA%B7c-%C4%91%E1%BB%8Bnh\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Tạo avatar mặc định</h2>\n<p>Trong trường hợp user chưa upload avatar, chúng ta sẽ hiển thị một avatar mặc định, sử dụng <a href=\"https://www.npmjs.com/package/jdenticon\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">jdenticon</a> nó sẽ cho chúng ta bộ hình sau</p>\n<p><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--kYzqAMFa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jrn6svy3k9b3qznrgkla.png\"></p>\n<div class=\"gridsome-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ComponentProps<span class=\"token punctuation\">,</span> <span class=\"token constant\">FC</span><span class=\"token punctuation\">,</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> AutoAvatar<span class=\"token operator\">:</span> <span class=\"token constant\">FC</span><span class=\"token operator\">&lt;</span>\n  ComponentProps<span class=\"token operator\">&lt;</span><span class=\"token string\">'img'</span><span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">{</span> userId<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span> size<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token punctuation\">}</span>\n<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> userId<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>imgProps <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>base64<span class=\"token punctuation\">,</span> setBase64<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">undefined</span> <span class=\"token keyword\">as</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// dùng dynamic import để tối ưu</span>\n  <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'jdenticon'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> toSvg <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> svgString <span class=\"token operator\">=</span> <span class=\"token function\">toSvg</span><span class=\"token punctuation\">(</span>userId<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> base64 <span class=\"token operator\">=</span> Buffer<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>svgString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token string\">'base64'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">setBase64</span><span class=\"token punctuation\">(</span>base64<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> base64 <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">backgroundColor</span><span class=\"token operator\">:</span> <span class=\"token string\">'rgb(225,225,225)'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">display</span><span class=\"token operator\">:</span> <span class=\"token string\">'flex'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span>\n        <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>imgProps<span class=\"token punctuation\">}</span></span>\n        <span class=\"token attr-name\">src</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data:image/svg+xml;base64,</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>base64<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">}</span></span>\n        <span class=\"token attr-name\">alt</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'User Avatar'</span><span class=\"token punctuation\">}</span></span>\n      <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> size<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> size<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">display</span><span class=\"token operator\">:</span> <span class=\"token string\">'inline-block'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      Loading...\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Thư viện này khoản 45kb, để webpack dynamic load khi cần thiết cho tiết kiệm\nGiá trị <strong>base64</strong> trả về chúng ta có thể gán cho <code class=\"language-inline-text\">src</code> của thẻ <code class=\"language-inline-text\">&lt;img /></code></p>\n<h2 id=\"cho-user-upload-avatar\"><a href=\"#cho-user-upload-avatar\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Cho user upload avatar</h2>\n<p>Nếu chỉ dùng <code class=\"language-inline-text\">&lt;input type=\"file\" /></code> UI nó sẽ khá xấu, chúng ta <em>dấu</em> nó đi và thay bằng một <code class=\"language-inline-text\">&lt;button /></code> để dễ chỉnh CSS hơn. Sử dụng <code class=\"language-inline-text\">ref</code> để trigger sự kiện <em>click</em> trên <code class=\"language-inline-text\">input</code></p>\n<div class=\"gridsome-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>createRef<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">ImageSelect</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> fileRef <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">createRef</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> onFileInputChange<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>ChangeEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>target<span class=\"token operator\">?.</span>files<span class=\"token operator\">?.</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n        <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>file<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">display</span><span class=\"token operator\">:</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n        <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>fileRef<span class=\"token punctuation\">}</span></span>\n        <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>onFileInputChange<span class=\"token punctuation\">}</span></span>\n        <span class=\"token attr-name\">accept</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>image/png,image/jpeg,image/gif<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span>\n        <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> fileRef<span class=\"token punctuation\">.</span>current<span class=\"token operator\">?.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span>\n      <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Cool Button\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"crop-ảnh\"><a href=\"#crop-%E1%BA%A3nh\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Crop ảnh</h2>\n<p>Trước khi gửi ảnh xuống backend dể lưu lại, chúng ta sẽ cho phép user <code class=\"language-inline-text\">crop</code> ảnh bằng <a href=\"https://fengyuanchen.github.io/cropperjs/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">cropper.js</a> và <a href=\"https://www.npmjs.com/package/react-cropper\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">react-cropper</a></p>\n<p><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--B3T2HPu8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rmvn8upi2y1onvpsvclt.gif\"></p>\n<div class=\"gridsome-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>createRef<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>Cropper<span class=\"token punctuation\">,</span> ReactCropperElement<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-cropper\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'cropperjs/dist/cropper.css'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">ImageCrop</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> cropperRef <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">createRef</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>ReactCropperElement<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Cropper</span></span>\n      <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&lt;the iamge src><span class=\"token punctuation\">\"</span></span>\n      <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> <span class=\"token number\">400</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> <span class=\"token number\">400</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n      <span class=\"token attr-name\">autoCropArea</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">}</span></span>\n      <span class=\"token attr-name\">aspectRatio</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">}</span></span>\n      <span class=\"token attr-name\">viewMode</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">3</span><span class=\"token punctuation\">}</span></span>\n      <span class=\"token attr-name\">guides</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">}</span></span>\n      <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>cropperRef<span class=\"token punctuation\">}</span></span>\n    <span class=\"token punctuation\">/></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Một số thiết đặt</p>\n<ul>\n<li><code class=\"language-inline-text\">autoCropArea = 1</code> mặc định là chọn toàn bộ hình</li>\n<li><code class=\"language-inline-text\">aspectRatio = 1</code> tỉ lệ crop mong muốn, chọn 1:1, vuông</li>\n<li><code class=\"language-inline-text\">viewMode = 3</code> không cho phép chọn vào vùng nằm ngoài hình</li>\n<li><code class=\"language-inline-text\">guides = false</code> không hiển thị mấy đường <em>grid</em></li>\n</ul>\n<div class=\"gridsome-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>createRef<span class=\"token punctuation\">,</span> useState<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>Cropper<span class=\"token punctuation\">,</span> ReactCropperElement<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-cropper\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'cropperjs/dist/cropper.css'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">ImageCrop</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> cropperRef <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">createRef</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>ReactCropperElement<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>cropped<span class=\"token punctuation\">,</span> setCropped<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span> <span class=\"token keyword\">as</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onSaveClick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> imageElement<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span> <span class=\"token operator\">=</span> cropperRef<span class=\"token operator\">?.</span>current<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> cropper<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span> <span class=\"token operator\">=</span> imageElement<span class=\"token operator\">?.</span>cropper<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">setCropped</span><span class=\"token punctuation\">(</span>cropper<span class=\"token punctuation\">.</span><span class=\"token function\">getCroppedCanvas</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toDataURL</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Cropper</span></span>\n        <span class=\"token attr-name\">src</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"https://picsum.photos/500/300\"</span><span class=\"token punctuation\">}</span></span>\n        <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> <span class=\"token number\">400</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> <span class=\"token number\">400</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n        <span class=\"token attr-name\">autoCropArea</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">}</span></span>\n        <span class=\"token attr-name\">aspectRatio</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">}</span></span>\n        <span class=\"token attr-name\">viewMode</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">3</span><span class=\"token punctuation\">}</span></span>\n        <span class=\"token attr-name\">guides</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">}</span></span>\n        <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>cropperRef<span class=\"token punctuation\">}</span></span>\n      <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>onSaveClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Crop</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span>cropped <span class=\"token operator\">&amp;&amp;</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>cropped<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">alt</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"It's cropped\"</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">/></span></span>\n      <span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Để lấy image cho việc upload, sử dụng <code class=\"language-inline-text\">blob</code>. Còn nếu chỉ cần hiển thị thì dùng <code class=\"language-inline-text\">dataUrl</code> như ở trên</p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">cropper<span class=\"token punctuation\">.</span><span class=\"token function\">getCroppedCanvas</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBlob</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"toàn-bộ-source-code\"><a href=\"#to%C3%A0n-b%E1%BB%99-source-code\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Toàn bộ source code</h2>\n<div class=\"gridsome-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>createRef<span class=\"token punctuation\">,</span> useState<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'./App.css'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>Cropper<span class=\"token punctuation\">,</span> ReactCropperElement<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-cropper\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'cropperjs/dist/cropper.css'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'./roundedCropper.css'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// chuyển file qua base64</span>\n<span class=\"token keyword\">const</span> file2Base64 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>file<span class=\"token operator\">:</span> File<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token operator\">></span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\"><span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token operator\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>resolve<span class=\"token punctuation\">,</span> reject<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> reader <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FileReader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    reader<span class=\"token punctuation\">.</span><span class=\"token function\">readAsDataURL</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    reader<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>reader<span class=\"token punctuation\">.</span>result<span class=\"token operator\">?.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    reader<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onerror</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ref đến file input</span>\n  <span class=\"token keyword\">const</span> fileRef <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">createRef</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// hình được chọn</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>uploaded<span class=\"token punctuation\">,</span> setUploaded<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span> <span class=\"token keyword\">as</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// kết quả của image sau khi crop</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>cropped<span class=\"token punctuation\">,</span> setCropped<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span> <span class=\"token keyword\">as</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// ref đến crop element</span>\n  <span class=\"token keyword\">const</span> cropperRef <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">createRef</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>ReactCropperElement<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> onFileInputChange<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>ChangeEventHandler<span class=\"token operator\">&lt;</span>HTMLInputElement<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> file <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>target<span class=\"token operator\">?.</span>files<span class=\"token operator\">?.</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">file2Base64</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>base64<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">setUploaded</span><span class=\"token punctuation\">(</span>base64<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onCrop</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> imageElement<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span> <span class=\"token operator\">=</span> cropperRef<span class=\"token operator\">?.</span>current<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> cropper<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span> <span class=\"token operator\">=</span> imageElement<span class=\"token operator\">?.</span>cropper<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">setCropped</span><span class=\"token punctuation\">(</span>cropper<span class=\"token punctuation\">.</span><span class=\"token function\">getCroppedCanvas</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toDataURL</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>App<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token punctuation\">{</span>\n          uploaded <span class=\"token operator\">?</span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n              </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Cropper</span></span>\n                <span class=\"token attr-name\">src</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>uploaded<span class=\"token punctuation\">}</span></span>\n                <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> <span class=\"token number\">400</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> <span class=\"token number\">400</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n                <span class=\"token attr-name\">autoCropArea</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">}</span></span>\n                <span class=\"token attr-name\">aspectRatio</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">}</span></span>\n                <span class=\"token attr-name\">viewMode</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">3</span><span class=\"token punctuation\">}</span></span>\n                <span class=\"token attr-name\">guides</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">}</span></span>\n                <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>cropperRef<span class=\"token punctuation\">}</span></span>\n              <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n              </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>onCrop<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Crop</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n              </span><span class=\"token punctuation\">{</span>cropped <span class=\"token operator\">&amp;&amp;</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>cropped<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Cropped!<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token operator\">:</span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n              </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n                <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>file<span class=\"token punctuation\">\"</span></span>\n                <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">display</span><span class=\"token operator\">:</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n                <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>fileRef<span class=\"token punctuation\">}</span></span>\n                <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>onFileInputChange<span class=\"token punctuation\">}</span></span>\n                <span class=\"token attr-name\">accept</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>image/png,image/jpeg,image/gif<span class=\"token punctuation\">\"</span></span>\n              <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n              </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span>\n                <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> fileRef<span class=\"token punctuation\">.</span>current<span class=\"token operator\">?.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span>\n              <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Upload something!\n              </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App<span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li><a href=\"https://tolgee.io/blog/manage-user-avatar\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">All you need to know to deal with user avatars 👤 in React</a></li>\n</ul>\n","cover_image":""}},{"node":{"id":"127481a75bdb1bf26ba0013ffbdee3d2","title":"Setup CloudFront cho ứng dụng","path":"/2022-04-30-setup-cloudfront-cho-und-dung/","date":"2022-04-30","timeToRead":3,"desc":"","content":"<!-- TOC -->\n<ul>\n<li><a href=\"#c%E1%BA%A5u-h%C3%ACnh-dns\">Cấu hình DNS</a></li>\n<li><a href=\"#c%E1%BA%A5u-h%C3%ACnh-cloudfront-distribution\">Cấu hình CloudFront distribution</a></li>\n</ul>\n<!-- /TOC -->\n<p>Chúng ta sẽ cùng cấu hình để đưa toàn bộ ứng dụng lên CloudFront, với những dữ liệu không nên cache như <em>data</em>, <em>auth</em>,... sẽ được <em>proxy</em> (chuyển tiếp) đến server.</p>\n<h2 id=\"cấu-hình-dns\"><a href=\"#c%E1%BA%A5u-h%C3%ACnh-dns\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Cấu hình DNS</h2>\n<p>Mục tiêu cuối cùng của chúng ta là đưa toàn bộ ứng dụng lên CloudFront. Tức là khi user truy cập vào domain, họ sẽ load ứng dụng từ CloudFront chứ không phải từ server. Trước tiên chúng ta phải vào <em>Route 53</em> để thay đổi lại DNS</p>\n<p><img src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645834717715_image.png?resize=1024%2C280&#x26;ssl=1\"></p>\n<p>Chọn <strong>Hosted Zone</strong></p>\n<p><img src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645994751238_image.png?w=821&#x26;ssl=1\"></p>\n<p>Click vào <strong>Create Hosted zone</strong> và nhập vào domain</p>\n<p><img src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645908142161_image.png?resize=1024%2C237&#x26;ssl=1\"></p>\n<p>Chúng ta đang nói với AWS hãy quản lý domain này cho tôi, AWS đưa cho chúng ta giá trị NS (name server) mà nó sẽ <em>route traffic</em> đến. Chúng ta sẽ cần đến chỗ quản lý domain, tùy thuộc vào nơi chúng ta đăng ký domain, giao diện quản lý có thể khác nhau, chúng ta cập nhập lại giá trị <em>NS</em> này cho domain</p>\n<p><img src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645835018979_image.png?w=762&#x26;ssl=1\"></p>\n<p>Trước khi thay đổi, nhớ lưu lại backup giá trị NS gốc</p>\n<h2 id=\"cấu-hình-cloudfront-distribution\"><a href=\"#c%E1%BA%A5u-h%C3%ACnh-cloudfront-distribution\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Cấu hình CloudFront distribution</h2>\n<p>Chúng ta sẽ điền vào phần <em>origin domain</em>, đừng nhập giá trị <strong>top-level domain</strong> như <code class=\"language-inline-text\">your-app.com</code>, nó sẽ là giá trị sub domain, như <code class=\"language-inline-text\">your-app.herokuapp.com</code> (nếu được host trên herokuapp.com)</p>\n<p><img src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645841894888_image.png?resize=1024%2C292&#x26;ssl=1\"></p>\n<p>Nếu có ý định dùng <code class=\"language-inline-text\">HTTPs</code> thì nhớ thay đổi phân <strong>Protocol</strong></p>\n<p><img src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645934723593_image.png?resize=1024%2C817&#x26;ssl=1\"></p>\n<p>Phần dưới đây cực kỳ quan trọng, nếu ứng dụng của chúng ta có authen, ghi dữ liệu, nói chung những phương thức khác ngoài <code class=\"language-inline-text\">GET</code>, thì nhớ chọn lại <strong>Allowed HTTP methods</strong></p>\n<p><img src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645841986703_image.png?w=730&#x26;ssl=1\"></p>\n<p>Chúng ta cũng cần thực hiện một vài thay đổi trên <strong>Cache key and origin requests</strong></p>\n<p><img src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645842121040_image.png?resize=1024%2C763&#x26;ssl=1\"></p>\n<p><strong>Cache policy</strong> chúng ta cho phép giá trị TTL minimum là 0, như vậy với giá trị non-caching header được gửi lên sẽ có hiệu lực</p>\n<p><img src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645842200731_image.png?resize=1024%2C857&#x26;ssl=1\"></p>\n<p><strong>Origin request policy</strong>, để đảm bảo cookie và query string khi đến CloudFront sẽ được gửi xuống server (không serve từ CDN)</p>\n<p><img src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645842297987_image.png?resize=1024%2C686&#x26;ssl=1\">\n<strong>Response headers policy</strong>, chúng ta chọn <strong>CORS With Preflight</strong></p>\n<p><img src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645842362649_image.png?resize=1024%2C684&#x26;ssl=1\"></p>\n<p>Chúng ta vẫn phải chứng minh với AWS là chúng ta là chủ sở hữu của domain, trước hết chúng ta yêu cầu một SSL certificate</p>\n<p><img src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645932319102_image.png?resize=1024%2C862&#x26;ssl=1\"></p>\n<p>Chọn <strong>Request certificate</strong></p>\n<p><img src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645845081306_image.png?resize=1024%2C360&#x26;ssl=1\">\n<img src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645845178014_image.png?resize=1024%2C553&#x26;ssl=1\"></p>\n<p>Cung cấp tên miền, chọn kiểu validate bằng <em>DNS</em></p>\n<p><img src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645932453934_image.png?resize=882%2C1024&#x26;ssl=1\"></p>\n<p>Chọn <strong>Request</strong>, chọn vào Certificate ID vừa được tạo ra</p>\n<p><img src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645932554825_image.png?resize=1024%2C211&#x26;ssl=1\">\n<img src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645932616235_image.png?resize=1024%2C227&#x26;ssl=1\"></p>\n<p>Để xác minh domain chính chủ, chúng ta cần đưa giá trị CNAME này vào trong Route 53</p>\n<p><img src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645932927217_image.png?resize=1024%2C462&#x26;ssl=1\"></p>\n<p>Chúng ta tạo một dòng CNAME với giá trị trong certificate ở trên</p>\n<p><img src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645932742028_image.png?resize=1024%2C637&#x26;ssl=1\"></p>\n<p>Sau khi xác minh xong AWS sẽ cập nhập status trên domain</p>\n<p><img src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645933155607_image.png?resize=1024%2C202&#x26;ssl=1\">\n<img src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645933066086_image.png?resize=1024%2C156&#x26;ssl=1\"></p>\n<p>Xong, giờ quay lại màn hình CloudFront distribution, trong mục <strong>SSL certificate</strong> chọn vào certificate chúng ta đã tạo</p>\n<p><img src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645933691496_image.png?resize=1024%2C727&#x26;ssl=1\">\n<img src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645933782796_image.png?resize=1024%2C440&#x26;ssl=1\"></p>\n<p>Việc còn lại là báo với Route 53 để nó route domain vào CloudFront, vào Route 53 tạo thêm một dòng DNS\nChọn <strong>A record type</strong>, đánh dấu dòng này là một <strong>alias</strong> và map alias này đến CloudFront. Bên trong mục <strong>Route traffic to</strong> chúng ta sẽ có tùy chọn <strong>Alias to CloudFront distribution</strong></p>\n<p><img src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645933944994_image.png?resize=1024%2C538&#x26;ssl=1\"></p>\n<p>OK, xong rồi đó.</p>\n<p>Để báo với CloudFront đừng cache những request cụ thể nào, chúng ta gửi trong header <code class=\"language-inline-text\">Cache-Control: no-cache</code>. Ví dụ sử dụng Express middleware</p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">app<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/graphql\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Cache-Control\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"no-cache\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">\"/graphql\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">expressGraphql</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">schema</span><span class=\"token operator\">:</span> executableSchema<span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">graphiql</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">rootValue</span><span class=\"token operator\">:</span> root\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </code></pre></div>\n<ul>\n<li><a href=\"https://css-tricks.com/setting-up-cloudfront-to-host-your-web-app/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Setting Up CloudFront to Host Your Web App</a></li>\n</ul>\n","cover_image":""}},{"node":{"id":"188d6c22f337df7139be49b480e056f4","title":"Bỏ túi 6 đoạn code chỉ với một dòng rất hữu ích trong JavaScript","path":"/2022-03-04-bo-tui-6-doan-code-huu-ich-trong-js/","date":"2022-03-04","timeToRead":1,"desc":"","content":"<h2 id=\"trộn-ngẫu-nhiên-một-mảng\"><a href=\"#tr%E1%BB%99n-ng%E1%BA%ABu-nhi%C3%AAn-m%E1%BB%99t-m%E1%BA%A3ng\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Trộn ngẫu nhiên một mảng</h2>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">shuffleArray</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">arr</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">shuffleArray</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"copy-vào-clipboard\"><a href=\"#copy-v%C3%A0o-clipboard\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Copy vào clipboard</h2>\n<blockquote>\n<p>Chạy trên trình duyệt có hỗ trợ <code class=\"language-inline-text\">navigator.clipboard</code></p>\n</blockquote>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">copyToClipboard</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">text</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n  navigator<span class=\"token punctuation\">.</span>clipboard<span class=\"token operator\">?.</span>writeText <span class=\"token operator\">&amp;&amp;</span> navigator<span class=\"token punctuation\">.</span>clipboard<span class=\"token punctuation\">.</span><span class=\"token function\">writeText</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">copyToClipboard</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"xác-định-window-có-đang-chọn-chế-độ-darkmode\"><a href=\"#x%C3%A1c-%C4%91%E1%BB%8Bnh-window-c%C3%B3-%C4%91ang-ch%E1%BB%8Dn-ch%E1%BA%BF-%C4%91%E1%BB%99-darkmode\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Xác định window có đang chọn chế độ DarkMode</h2>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">isDarkMode</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n  window<span class=\"token punctuation\">.</span>matchMedia <span class=\"token operator\">&amp;&amp;</span>\n  window<span class=\"token punctuation\">.</span><span class=\"token function\">matchMedia</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(prefers-color-scheme: dark)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>matches<span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">isDarkMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"scroll-lên-đầu-trang\"><a href=\"#scroll-l%C3%AAn-%C4%91%E1%BA%A7u-trang\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Scroll lên đầu trang</h2>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">scrollToTop</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n  element<span class=\"token punctuation\">.</span><span class=\"token function\">scrollIntoView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">behavior</span><span class=\"token operator\">:</span> <span class=\"token string\">\"smooth\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">block</span><span class=\"token operator\">:</span> <span class=\"token string\">\"start\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"cuộn-xuống-cuối-trang\"><a href=\"#cu%E1%BB%99n-xu%E1%BB%91ng-cu%E1%BB%91i-trang\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Cuộn xuống cuối trang</h2>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">scrollToBottom</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n  element<span class=\"token punctuation\">.</span><span class=\"token function\">scrollIntoView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">behavior</span><span class=\"token operator\">:</span> <span class=\"token string\">\"smooth\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">block</span><span class=\"token operator\">:</span> <span class=\"token string\">\"end\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"tạo-mã-màu-ngẫu-nhiên\"><a href=\"#t%E1%BA%A1o-m%C3%A3-m%C3%A0u-ng%E1%BA%ABu-nhi%C3%AAn\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Tạo mã màu ngẫu nhiên</h2>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">generateRandomHexColor</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n  <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">#</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">0xffffff</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></code></pre></div>\n","cover_image":""}},{"node":{"id":"591ecd10e58f205dbb0aed4f9eccca22","title":"Ứng dụng hay của flatMap","path":"/2022-02-03-ung-dung-hay-cua-flatmap/","date":"2022-02-03","timeToRead":1,"desc":"Thay thế hàm filter và map bằng flatMap","content":"<p>Sử dụng <code class=\"language-inline-text\">flatMap</code> có thể giúp code ngắn hơn, ví dụ trong tình huống bên dưới</p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// filter các giá trị âm</span>\n<span class=\"token comment\">// nhân đôi các giá trị dương còn lại</span>\n<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\n\t<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">num</span> <span class=\"token operator\">=></span> num <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">num</span> <span class=\"token operator\">=></span> num <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// -> [2, 6, 10]</span></code></pre></div>\n<p>Cách này không có gì sai, nhưng nếu muốn viết bằng một phương pháp khác thì sao?</p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">flatMap</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">num</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>num <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>num <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// -> [2, 6, 10]</span></code></pre></div>\n<p>Nếu muốn rút ngắn hơn nữa</p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">flatMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">num</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>num <span class=\"token operator\">>=</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">[</span>num <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  \n<span class=\"token comment\">// -> [2, 6, 10]</span></code></pre></div>\n<p>Tuy nhiên, nếu xét về mặt viết-sao-cho-dễ-đọc thì có vẻ dùng <code class=\"language-inline-text\">filter</code> và <code class=\"language-inline-text\">map</code> sẽ tốt hơn, <code class=\"language-inline-text\">flatMap</code> được cái viết ngắn hơn.</p>\n<p>Túm lại, ưng mắt cách nào hơn thì bạn viết cách đó.</p>\n<ul>\n<li><a href=\"https://www.stefanjudis.com/snippets/filter-and-map-array-values-with-a-flatmap-one-liner/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Filter and map Array values with a flatMap one-liner</a></li>\n</ul>\n","cover_image":""}},{"node":{"id":"71f9d080ac81424aa009008e19457f35","title":"Cách mà babel preset-env, core-js, browserslistrc làm việc với nhau","path":"/2022-02-02-babel-preset-env-core-js-browerslistrc-lam-viec/","date":"2022-02-02","timeToRead":3,"desc":"","content":"<h2 id=\"thiết-đặt-babel\"><a href=\"#thi%E1%BA%BFt-%C4%91%E1%BA%B7t-babel\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Thiết đặt babel</h2>\n<p>Với input là code js với các syntax mới, babel sẽ <em>transform</em> thành code mà trình duyệt có thể hiểu được.</p>\n<p>Chúng ta sẽ cần các gói babel cần thiết</p>\n<div class=\"gridsome-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> i @babel/core @babel/preset-env @babel/cli --save-dev</code></pre></div>\n<p>Bên trong file config của babel, <code class=\"language-inline-text\">babel.config.json</code> chúng ta sẽ tìm thấy phần thiết đặt <code class=\"language-inline-text\">preset-env</code></p>\n<div class=\"gridsome-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"presets\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">\"@babel/preset-env\"</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>@babel/preset-env</strong> là một bộ các plugin của babel để nó có thể <strong>transform</strong> các syntax mới, <strong>tùy theo trình duyệt mà chúng ta chỉ định</strong></p>\n<p>Trình duyệt được chỉ định có thể set trong file <code class=\"language-inline-text\">babel.config.json</code> hoặc dùng một file riêng <code class=\"language-inline-text\">.browserslistrc</code>, hoặc trong <code class=\"language-inline-text\">package.json</code></p>\n<p>Dùng file package.json</p>\n<div class=\"gridsome-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token property\">\"browserslist\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">\"defaults\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"not IE 11\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"maintained node versions\"</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<p>Dùng file .browserslistrc</p>\n<div class=\"gridsome-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">defaults\nnot IE 11\nmaintained node versions</code></pre></div>\n<p>Ví dụ với đoạn code như sau</p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">arr</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">printArr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nobj<span class=\"token punctuation\">.</span><span class=\"token function\">printArr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Sau khi transform với thiết đặt browser là IE11, chúng ta sẽ có</p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token string\">\"use strict\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">_toConsumableArray</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">arr</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token function\">_arrayWithoutHoles</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token function\">_iterableToArray</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token function\">_unsupportedIterableToArray</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token function\">_nonIterableSpread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">_nonIterableSpread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TypeError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">_unsupportedIterableToArray</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">o<span class=\"token punctuation\">,</span> minLen</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>o<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> o <span class=\"token operator\">===</span> <span class=\"token string\">\"string\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token function\">_arrayLikeToArray</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">,</span> minLen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">var</span> n <span class=\"token operator\">=</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">===</span> <span class=\"token string\">\"Object\"</span> <span class=\"token operator\">&amp;&amp;</span> o<span class=\"token punctuation\">.</span>constructor<span class=\"token punctuation\">)</span> n <span class=\"token operator\">=</span> o<span class=\"token punctuation\">.</span>constructor<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">===</span> <span class=\"token string\">\"Map\"</span> <span class=\"token operator\">||</span> n <span class=\"token operator\">===</span> <span class=\"token string\">\"Set\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">===</span> <span class=\"token string\">\"Arguments\"</span> <span class=\"token operator\">||</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token function\">_arrayLikeToArray</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">,</span> minLen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">_iterableToArray</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">iter</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> Symbol <span class=\"token operator\">!==</span> <span class=\"token string\">\"undefined\"</span> <span class=\"token operator\">&amp;&amp;</span> Symbol<span class=\"token punctuation\">.</span>iterator <span class=\"token keyword\">in</span> <span class=\"token function\">Object</span><span class=\"token punctuation\">(</span>iter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>iter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">_arrayWithoutHoles</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">arr</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Array<span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token function\">_arrayLikeToArray</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">_arrayLikeToArray</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">arr<span class=\"token punctuation\">,</span> len</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>len <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">||</span> len <span class=\"token operator\">></span> arr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> len <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> arr2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span>len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> len<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> arr2<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">return</span> arr2<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">arr</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">printArr</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token function\">printArr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> _console<span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">(</span>_console <span class=\"token operator\">=</span> console<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>_console<span class=\"token punctuation\">,</span> <span class=\"token function\">_toConsumableArray</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nobj<span class=\"token punctuation\">.</span><span class=\"token function\">printArr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Babel đã cố gắng hết sức, tuy nhiên <code class=\"language-inline-text\">printArr</code> là kiểu <strong>array-like (na ná array)</strong> chứ không thực sự là một <strong>array</strong></p>\n<p>Các trình duyệt cũ sẽ không chạy được kiểu <em>na ná</em> array như vậy.</p>\n<p>Đây là lúc <strong>core-js</strong> phát huy tác dụng</p>\n<p><strong>core-js là tập hợp các polyfill</strong> cho các tính năng chưa được trình duyệt cập nhập.</p>\n<p>Cài đặt</p>\n<div class=\"gridsome-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> i core-js</code></pre></div>\n<p>Sau đó import vào file dùng bootstrap như <code class=\"language-inline-text\">src/index.js</code></p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token string\">\"core-js\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">arr</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">printArr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nobj<span class=\"token punctuation\">.</span><span class=\"token function\">printArr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Bổ sung config cho babel để dùng core-js trong lúc transform <code class=\"language-inline-text\">babel.config.json</code></p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string-property property\">\"presets\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">[</span>\n      <span class=\"token string\">\"@babel/preset-env\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token string-property property\">\"useBuiltIns\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"entry\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">\"corejs\"</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Kết quả chúng ta sẽ nhận được</p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"core-js/modules/es.symbol\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"core-js/modules/es.symbol.description\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"core-js/modules/es.symbol.async-iterator\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"core-js/modules/es.symbol.has-instance\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"core-js/modules/es.symbol.is-concat-spreadable\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"core-js/modules/es.symbol.iterator\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"core-js/modules/es.symbol.match\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"core-js/modules/es.symbol.replace\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"core-js/modules/es.symbol.search\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"core-js/modules/es.symbol.species\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//...</span></code></pre></div>\n<p>Khi import một file core-js, chúng ta sẽ có được tất cả những polyfill cần thiết cho trình duyệt đã chỉ định.</p>\n<p>Tạm kết, sử dụng những CLI như <code class=\"language-inline-text\">create-react=app</code> hay Vue CLI, mọi thứ đã được config sẵn, tuy nhiên biết cơ chế và cách làm thủ công là cần thiết, chắc chắn sẽ có lúc chúng ta cần dùng.</p>\n<p><a href=\"https://www.valentinog.com/blog/preset-env/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">How babel preset-env, core-js, and browserslistrc work together</a></p>\n","cover_image":""}},{"node":{"id":"25ad029965c91242899548b45f949af0","title":"Quản lý state: nhận định boolean tốt và không tốt","path":"/2021-05-31-huong-dan-viet-boolean/","date":"2021-05-31","timeToRead":1,"desc":"","content":"<p>Tóm tắt nếu bạn lười đọc:</p>\n<blockquote>\n<p><code class=\"language-inline-text\">boolean</code> không tốt đại diện cho <code class=\"language-inline-text\">state</code>, <code class=\"language-inline-text\">boolean</code> tốt là kết quả tính từ <code class=\"language-inline-text\">state</code></p>\n</blockquote>\n<p>Một ví dụ dễ thấy nhất với <code class=\"language-inline-text\">boolean</code> không tốt là cách thiết kế <code class=\"language-inline-text\">state</code> như vầy</p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> isLoading <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> isComplete <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> hasError <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Thoạt nhìn chúng ta sẽ nghĩ nó tốt. Chúng ta đưa ra 3 <code class=\"language-inline-text\">state</code> khác nhau ứng với 3 giá trị <code class=\"language-inline-text\">boolean</code> riêng biệt, chỉ duy nhất một giá trị là <code class=\"language-inline-text\">true</code> </p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">makeFetch</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  isLoading <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/users'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    isComplete <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    hasErrored <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  isLoading <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Nhưng khi nghĩ kỹ lại, chúng ta sẽ nhận được 2 giá trị <code class=\"language-inline-text\">true</code> nếu <code class=\"language-inline-text\">makeFetch</code> được gọi lại lần nữa</p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">isLoading <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\nisComplete <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\nhasError <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>Vậy làm sao để thiết kế một <code class=\"language-inline-text\">boolean</code> tốt cho trường hợp trên?</strong></p>\n<p><code class=\"language-inline-text\">State</code> ở đây chúng ta sẽ có tất cả các giá trị sau</p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> statusEnum <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token literal-property property\">idle</span><span class=\"token operator\">:</span> <span class=\"token string\">'idle'</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token literal-property property\">loading</span><span class=\"token operator\">:</span> <span class=\"token string\">'loading'</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token literal-property property\">complete</span><span class=\"token operator\">:</span> <span class=\"token string\">'complete'</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token literal-property property\">error</span><span class=\"token operator\">:</span> <span class=\"token string\">'error'</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Và chúng ta dùng nó trong hàm <code class=\"language-inline-text\">makeFetch</code></p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">makeFetch</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  status <span class=\"token operator\">=</span> statusEnum<span class=\"token punctuation\">.</span>loading<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/users'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    status <span class=\"token operator\">=</span> statusEnum<span class=\"token punctuation\">.</span>complete<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    status <span class=\"token operator\">=</span> statusEnum<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Cần giá trị <code class=\"language-inline-text\">boolean</code> bạn <em>tính</em> từ giá trị <code class=\"language-inline-text\">state</code></p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">isLoading</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">status</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> status <span class=\"token operator\">===</span> statusEnum<span class=\"token punctuation\">.</span>loading<span class=\"token punctuation\">;</span></code></pre></div>\n","cover_image":""}},{"node":{"id":"af1b4fabe8e0499431dafa72082c9288","title":"Hỏi nhanh đáp gọn về REST","path":"/2021-01-15-rest-faq-hoi-nhanh-dap-gon-ve-rest/","date":"2021-01-15","timeToRead":3,"desc":"Chuyên mục hỏi nhanh - đáp gọn, nếu bạn chưa biết gì về REST","content":"<!-- TOC -->\n<ul>\n<li><a href=\"#m%E1%BB%99t-v%C3%A0i-%C4%91%E1%BA%B7c-t%C3%ADnh-ch%C3%ADnh-c%E1%BB%A7a-rest\">Một vài đặc tính chính của REST?</a></li>\n<li><a href=\"#c%C3%A1c-th%C3%A0nh-ph%E1%BA%A7n-ch%C3%ADnh-c%E1%BB%A7a-m%E1%BB%99t-http-response\">Các thành phần chính của một http response</a></li>\n<li><a href=\"#c%C3%A1c-th%C3%A0nh-ph%E1%BA%A7n-ch%C3%ADnh-c%E1%BB%A7a-m%E1%BB%99t-http-request\">Các thành phần chính của một http request</a></li>\n<li><a href=\"#stateless-l%C3%A0-g%C3%AC\">Stateless là gì?</a></li>\n<li><a href=\"#stateless-c%C3%B3-g%C3%AC-hay\">Stateless có gì hay?</a></li>\n<li><a href=\"#v%C3%A0i-c%C3%A1i-status-code-ph%E1%BB%95-bi%E1%BA%BFn\">Vài cái status code phổ biến?</a></li>\n<li><a href=\"#c%C3%A1i-g%C3%AC-cache-%C4%91%C6%B0%E1%BB%A3c-c%C3%A1i-g%C3%AC-kh%C3%B4ng\">Cái gì cache được, cái gì không?</a></li>\n<li><a href=\"#kh%C3%A1c-nhau-gi%E1%BB%AFa-ajax-v%C3%A0-rest\">Khác nhau giữa AJAX và REST?</a></li>\n<li><a href=\"#keep-alive-l%C3%A0-g%C3%AC-v%C3%A0-l%E1%BB%A3i-%C3%ADch-c%E1%BB%A7a-n%C3%B3\">Keep-Alive là gì và lợi ích của nó?</a></li>\n</ul>\n<!-- /TOC -->\n<h2 id=\"một-vài-đặc-tính-chính-của-rest\"><a href=\"#m%E1%BB%99t-v%C3%A0i-%C4%91%E1%BA%B7c-t%C3%ADnh-ch%C3%ADnh-c%E1%BB%A7a-rest\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Một vài đặc tính chính của REST?</h2>\n<ul>\n<li>REST là dạng <strong>stateless</strong>, server sẽ không có thông tin <em>status</em> (nói cách khác là không lưu giữ user session)</li>\n<li>Nếu <em>Web service</em> chủ yếu dùng POST để thao tác, thì REST dùng <code class=\"language-inline-text\">GET</code> để truy xuất đến resource</li>\n</ul>\n<h2 id=\"các-thành-phần-chính-của-một-http-response\"><a href=\"#c%C3%A1c-th%C3%A0nh-ph%E1%BA%A7n-ch%C3%ADnh-c%E1%BB%A7a-m%E1%BB%99t-http-response\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Các thành phần chính của một http response</h2>\n<ul>\n<li>Status / Response Code</li>\n<li>HTTP Version</li>\n<li>Response header</li>\n<li>Response body</li>\n</ul>\n<h2 id=\"các-thành-phần-chính-của-một-http-request\"><a href=\"#c%C3%A1c-th%C3%A0nh-ph%E1%BA%A7n-ch%C3%ADnh-c%E1%BB%A7a-m%E1%BB%99t-http-request\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Các thành phần chính của một http request</h2>\n<ul>\n<li>Method (<code class=\"language-inline-text\">GET</code>, <code class=\"language-inline-text\">POST</code>, <code class=\"language-inline-text\">PUT</code>, <code class=\"language-inline-text\">DELETE</code>)</li>\n<li>URI</li>\n<li>HTTP Version</li>\n<li>Request Header</li>\n<li>Request Body</li>\n</ul>\n<h2 id=\"stateless-là-gì\"><a href=\"#stateless-l%C3%A0-g%C3%AC\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Stateless là gì?</h2>\n<p>Theo định nghĩa của RESTful, server không lưu trữ bất kỳ thông tin gì về client state, đặc trưng này gọi là <strong>stateless</strong>. Phía client gửi thông tin cần thiết trên mỗi request</p>\n<h2 id=\"stateless-có-gì-hay\"><a href=\"#stateless-c%C3%B3-g%C3%AC-hay\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Stateless có gì hay?</h2>\n<ol>\n<li><strong>Scale</strong> khả năng đáp ứng của API lên cho hàng triệu <em>concurrent user</em> bằng cách deploy lên nhiều server khác nhau. Bất kỳ server nào cũng có thể handle một request từ client vì tất cả thông tin cần thiết điều được gửi từ phía client.</li>\n<li><strong>Đơn giản hóa API</strong> nhờ vào việc gở bỏ việc đồng bộ logic của <em>state</em></li>\n<li><strong>Dễ cache hơn</strong>, phía server có thể quyết định cache hay không một kết quả HTTP request dựa vào thông tin của một request, những request trước đó không ảnh hưởng đến khả năng <em>cache</em> của request hiện tại.</li>\n</ol>\n<h2 id=\"vài-cái-status-code-phổ-biến\"><a href=\"#v%C3%A0i-c%C3%A1i-status-code-ph%E1%BB%95-bi%E1%BA%BFn\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Vài cái status code phổ biến?</h2>\n<ul>\n<li>201 created</li>\n<li>204 No content</li>\n<li>400 Bad request</li>\n<li>403 Forbidden</li>\n<li>404 Not found</li>\n<li>405 Method not allowed</li>\n<li>409 Conflict</li>\n<li>500 internal server error</li>\n</ul>\n<h2 id=\"cái-gì-cache-được-cái-gì-không\"><a href=\"#c%C3%A1i-g%C3%AC-cache-%C4%91%C6%B0%E1%BB%A3c-c%C3%A1i-g%C3%AC-kh%C3%B4ng\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Cái gì cache được, cái gì không?</h2>\n<ul>\n<li><code class=\"language-inline-text\">GET</code> cache được</li>\n<li><code class=\"language-inline-text\">POST</code> mặc định là không, nhưng có thể dùng <strong>expires header</strong> hoặc <strong>cache-control header</strong> nếu muốn bật cache</li>\n<li><code class=\"language-inline-text\">PUT/DELETE</code> không</li>\n</ul>\n<h2 id=\"khác-nhau-giữa-ajax-và-rest\"><a href=\"#kh%C3%A1c-nhau-gi%E1%BB%AFa-ajax-v%C3%A0-rest\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Khác nhau giữa AJAX và REST?</h2>\n<p>AJAX là một <strong>kỹ thuật thực hiện phía client</strong> để cập nhập giao diện, trong khi REST là <strong>một kiểu kiến trúc</strong> để truyền và xử lý HTTP Request.</p>\n<h2 id=\"keep-alive-là-gì-và-lợi-ích-của-nó\"><a href=\"#keep-alive-l%C3%A0-g%C3%AC-v%C3%A0-l%E1%BB%A3i-%C3%ADch-c%E1%BB%A7a-n%C3%B3\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Keep-Alive là gì và lợi ích của nó?</h2>\n<p>Mặc định một HTTP connection sẽ <strong>tự đóng sau khi request đã complete</strong>, nghĩa là phía server sẽ close TCP connection sau khi đã gửi đi response. Để giữ connection này cho nhiều request, dùng thuộc tính <code class=\"language-inline-text\">keep-alive</code> trên header</p>\n<p>Ví dụ</p>\n<div class=\"gridsome-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">Message Trace:\n-------------------------------------------\n~$ <span class=\"token function\">curl</span> -I https://www.domain.com/file.html\nHTTP/1.1 <span class=\"token number\">200</span> OK\nConnection: Keep-Alive\nContent-Type: text/html<span class=\"token punctuation\">;</span> <span class=\"token assign-left variable\">charset</span><span class=\"token operator\">=</span>UTF-8\nDate: Thu, <span class=\"token number\">15</span> Jan <span class=\"token number\">2015</span> <span class=\"token number\">16</span>:45:29 GMT\nContent-Length: <span class=\"token number\">1845</span>\nKeep-Alive: <span class=\"token assign-left variable\">timeout</span><span class=\"token operator\">=</span><span class=\"token number\">10</span>, <span class=\"token assign-left variable\">max</span><span class=\"token operator\">=</span><span class=\"token number\">20</span>\nServer: Apache/2.4.9 <span class=\"token punctuation\">(</span>Unix<span class=\"token punctuation\">)</span> PHP/5.6.2\n-------------------------------------------</code></pre></div>\n<p><em>Lợi ích</em></p>\n<ul>\n<li><strong>Giảm tải việc sử dụng CPU</strong>, mỗi lần thiết lập một TCP connection sẽ cần tiêu hao CPU và bộ nhớ.</li>\n<li><strong>Cải thiện tốc độ trang web</strong>: đáp ứng nhiều file sử dụng cùng một connection cho phép giảm tải và nâng cao tốc độ của ứng dụng</li>\n<li><strong>HTTPS</strong>: muốn dùng keep-alive bắt buộc phải là HTTPS, cũng có thể xem là một ưu điểm cho vấn đề bảo mật</li>\n</ul>\n","cover_image":""}},{"node":{"id":"dc34c8a0c083ef6c15db1a0747852887","title":"Hỏi nhanh đáp gọn về webpack","path":"/2021-01-13-webpack-faq-hoi-nhanh-dap-gon-voi-webpack/","date":"2021-01-13","timeToRead":2,"desc":"Chuyên mục hỏi nhanh - đáp gọn, nếu bạn chưa biết gì về webpack","content":"<p><em>🐸 Những module pattern nào webpack hỗ trợ?</em></p>\n<p><code class=\"language-inline-text\">common.js</code> và es6</p>\n<p>🐸 Có được phép có nhiều entry point trong cùng 1 file config?*</p>\n<p>Có</p>\n<p><em>🐸 Làm sao để tạo file config webpack tự động?</em></p>\n<p><code class=\"language-inline-text\">webpack-cli init</code></p>\n<p><em>🐸 Loader trong webpack là gì?</em></p>\n<p>transform những module nào không phải là JS vào trong bundle</p>\n<p><em>🐸 Loader chạy sync hay async</em></p>\n<p>Cả hai</p>\n<p><em>🐸 Khác nhau giữa loader và plugin</em></p>\n<p>Loader dùng để pre-processing, plugin phức tạp hơn và nó can thiệp nhiều vào quá trình compile.</p>\n<p><em>🐸 Làm sao để tách một số data ra khỏi bundle thành một file riêng biệt, ví dụ như file css</em></p>\n<p>Sử dụng <a href=\"https://github.com/webpack-contrib/extract-text-webpack-plugin\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ExtractTextWebpackPlugin</a>. Tất cả css sẽ không còn nằm inline trong file JS bundle, nó sẽ là một file riêng (style.css chẳng hạn)</p>\n<p><em>🐸 Hot module replacement là gì?</em></p>\n<p>Tính năng cho phép cập nhập module mà không cần reload</p>\n<p><em>🐸 parallel-webpack là gì và nó ảnh hưởng thế nào đến quá trình build</em></p>\n<p><a href=\"https://github.com/trivago/parallel-webpack\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">parallel-webpack</a> sẽ giúp config với nhiều entry point, cho phép webpack build parallel, nâng cao tốc độ build</p>\n<p><em>🐸 Mô tả một cách ngắn gọn long-term caching và làm sao sử dụng nó trong webpack?</em></p>\n<p>Browser sẽ cache static file bên dưới local để cải thiện tốc độ load, để đảm bảo nếu có bản build mới, trình duyệt biết và download file mới, tên  file thường được đặt như sau</p>\n<div class=\"gridsome-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">app.js?build=1\napp.js?build=2\n\n// hoặc\napp.js.2a6c1fee4b5b0d2c9285.js\napp.js.70b594fe8b07bcedaa98.js</code></pre></div>\n<p>Để làm việc này, trong webpack chúng ta đặt config</p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">...</span>\n    <span class=\"token literal-property property\">output</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n     <span class=\"token literal-property property\">filename</span><span class=\"token operator\">:</span> <span class=\"token string\">\"[name].[hash].js\"</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><em>🐸 Khác nhau giữa hash và chunkhash?</em></p>\n<p>[hash] tạo ra một id ngẫu nhiên cho từng lần build và sử dụng cho tất cả  chunk. Nếu thay [hash] bằng [chunkhash] nó sẽ tạo ra mỗi chunk một id ngẫu nhiên.</p>\n<p><em>🐸 Mô tả CommonsChunk Plugin?</em></p>\n<p>Là một tính năng có sẵn của webpack, cho phép tạo file riêng (gọi là chunk) cho những module dùng chung. Hỗ trợ caching và nâng cao tốc độ load</p>\n<p><em>🐸Diễn giải đoạn code bên dưới</em></p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">new</span> <span class=\"token class-name\">webpack<span class=\"token punctuation\">.</span>ContextReplacementPlugin</span><span class=\"token punctuation\">(</span>\n     <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">moment[\\/\\\\]locale</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n     <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(en-gb|en-us)\\.js</span><span class=\"token regex-delimiter\">/</span></span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Báo với webpack, chỉ include những file có tên khớp với điều kiện <code class=\"language-inline-text\">/(en-gb|en-us)\\.js/</code>, trong đường dẫn <code class=\"language-inline-text\">/moment[\\/\\\\]locale/</code> khi bundle</p>\n<p><em>🐸 Làm sao để remove những css selector không dùng đến?</em></p>\n<p>Dùng plugin <a href=\"https://github.com/webpack-contrib/purifycss-webpack\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">purifycss-webpack</a></p>\n","cover_image":""}}]}}},"context":{}}