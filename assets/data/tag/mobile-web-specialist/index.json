{"hash":"caea05e5fffa0cfcd138bf0521c438fe71931a82","data":{"tag":{"title":"mobile-web-specialist","belongsTo":{"edges":[{"node":{"title":"Ràng buộc dữ liệu input với HTML5","path":"/rang-buoc-du-lieu-input-voi-htm-l5/","date":"25. March 2019","timeToRead":3,"desc":"Vì form quá phức tạp, chúng ta cần thêm một bài viết nữa về validation với html","content":"<p>Với HTML5 chúng ta có một số kiểu input để validate những giá trị mà user đưa vào, ko cần tự viết javascript để check, chỉ đơn giản là khai báo mấy cái attribute, trường hợp phức tạp hơn, chúng ta có thể can thiệp trong cái <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Constraint_validation\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Validation API</a> để có kết quả mong muốn</p>\n<blockquote>\n<p>Luôn nhớ validate ở phía client không có nghĩa là ko cần đến validate ở server.</p>\n</blockquote>\n<h2 id=\"một-vài-ràng-buộc-phổ-biến\"><a href=\"#m%E1%BB%99t-v%C3%A0i-r%C3%A0ng-bu%E1%BB%99c-ph%E1%BB%95-bi%E1%BA%BFn\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Một vài ràng buộc phổ biến</h2>\n<p>Dùng kiểu input\n<code class=\"language-text\">&lt;input type=”email” /&gt;</code>: bắt buộc là giá trị email\n<code class=\"language-text\">&lt;input type=&quot;url&quot; /&gt;</code>: bắt buộc là giá trị url</p>\n<p>Dùng attribute khác</p>\n<table>\n<thead>\n<tr>\n<th>Attribute</th>\n<th align=\"center\">Kiểu input hỗ trợ</th>\n<th align=\"right\">Giải thích</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">pattern</code></td>\n<td align=\"center\">text, search, url, tel, email, password</td>\n<td align=\"right\">phải khớp với giá trị regular expression</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">min</code></td>\n<td align=\"center\">range, number, date, month, week, datetime, datetime-local, time</td>\n<td align=\"right\">giá trị phải lớn hơn hoặc bằng giá trị <code class=\"language-text\">min</code></td>\n</tr>\n<tr>\n<td><code class=\"language-text\">max</code></td>\n<td align=\"center\">range, number, date, month, week, datetime, datetime-local, time</td>\n<td align=\"right\">giá trị phải nhỏ hơn hoặc bằng giá trị <code class=\"language-text\">max</code></td>\n</tr>\n<tr>\n<td><code class=\"language-text\">required</code></td>\n<td align=\"center\">text, search, url, tel, email, password, date, datetime, datetime-local, month, week, time, number, checkbox, radio, file, select, textarea</td>\n<td align=\"right\">bắt buộc phải có giá trị</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">minlength</code></td>\n<td align=\"center\">text, search, url, tel, email, password, textarea</td>\n<td align=\"right\">số ký tự nhập vào phải thỏa lớn hơn hoặc bằng <code class=\"language-text\">minlength</code></td>\n</tr>\n<tr>\n<td><code class=\"language-text\">maxlength</code></td>\n<td align=\"center\">text, search, url, tel, email, password, textarea</td>\n<td align=\"right\">số ký tự nhập vào phải thỏa nhỏ hơn hoặc bằng <code class=\"language-text\">maxlength</code></td>\n</tr>\n</tbody>\n</table>\n<p>Ví dụ</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>name<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Enter username (upper and lowercase letters): <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>name<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>name<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">required</span> <span class=\"token attr-name\">pattern</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>[A-Za-z]+<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><span class=\"token punctuation\">></span></span>Submit<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span></code></pre>\n<h2 id=\"quá-trình-validate-dữ-liệu\"><a href=\"#qu%C3%A1-tr%C3%ACnh-validate-d%E1%BB%AF-li%E1%BB%87u\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Quá trình validate dữ liệu</h2>\n<p>Quá trình này sẽ thông qua bộ Validation API, nó có thể là trên cả form hoặc trên từng element trong form. Được thực hiện bằng một trong các cách sau\nbằng cách gọi <code class=\"language-text\">checkValidity()</code> của các element input, select, button, textarea. Nó sẽ chỉ validate dữ liệu trên element đó thôi. Nó thường được thực hiện bởi trình duyệt, sau đó chúng ta dùng selector của CSS là <code class=\"language-text\">:valid</code> và <code class=\"language-text\">:invalid</code> để format\ngọi <code class=\"language-text\">checkValidity()</code> hoặc <code class=\"language-text\">reportValidity()</code> trên thằng form\nKhi form được submit bằng click ‘<input type=’submit’ /><code class=\"language-text\">hoặc ‘&lt;button type=’submit’ /&gt;</code> hoặc ấn enter</p>\n<p>Lưu ý</p>\n<ul>\n<li>Nếu set novalidate trên thẻ <code class=\"language-text\">&lt;form novalidate /&gt;</code>, là chúng ta bỏ qua hết việc validate</li>\n<li>Khi gọi <code class=\"language-text\">submit()</code> trên form, không trigger validation, phương thức này sẽ gửi hết dữ liệu của form lên server dù nó có hay không thỏa điều kiện. Nên gọi sự kiện <code class=\"language-text\">click()</code> của nút submit</li>\n</ul>\n<h2 id=\"can-thiệp-vào-quá-trình-validate-bằng-bộ-validation-api\"><a href=\"#can-thi%E1%BB%87p-v%C3%A0o-qu%C3%A1-tr%C3%ACnh-validate-b%E1%BA%B1ng-b%E1%BB%99-validation-api\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Can thiệp vào quá trình validate bằng bộ Validation API</h2>\n<p>Ý tưởng chính là bắt một sự kiện nào đó trên element như <code class=\"language-text\">onchange</code>, rồi trigger một đoạn javascript để validate, sau đó dùng phương thức <code class=\"language-text\">field.setCustomValidity()</code> để set kết quả validate: nếu là String rỗng nghĩa là ok, còn ngược lại là error, đoạn string này sẽ đem đi hiển thị như thông báo error cho user</p>\n<h3 id=\"giới-hạn-file-size-khi-upload\"><a href=\"#gi%E1%BB%9Bi-h%E1%BA%A1n-file-size-khi-upload\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Giới hạn file size khi upload</h3>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>FS<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Select a file smaller than 75 kB : <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>file<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>FS<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></code></pre>\n<p>Dùng javascript để đọc file được chọn, <code class=\"language-text\">FIle.size()</code>, so sánh kích thước này rồi trả về kết quả cho trình duyệt</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">checkFileSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> <span class=\"token constant\">FS</span> <span class=\"token operator\">=</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"FS\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> files <span class=\"token operator\">=</span> <span class=\"token constant\">FS</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">files</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Nếu có ít nhất 1 file được chọn</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>files<span class=\"token punctuation\">.</span><span class=\"token property-access\">length</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n     <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>files<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">size</span> <span class=\"token operator\">></span> <span class=\"token number\">75</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// kiểm tra size</span>\n       <span class=\"token constant\">FS</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">setCustomValidity</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The selected file must not be larger than 75 kB\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// Không có file, ko check.</span>\n  <span class=\"token constant\">FS</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">setCustomValidity</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Hook cái phương thức này vào trong sự kiện mong muốn</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token dom variable\">window</span><span class=\"token punctuation\">.</span><span class=\"token method-variable function-variable method function property-access\">onload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"FS\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">onchange</span> <span class=\"token operator\">=</span> checkFileSize<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h2 id=\"hiển-thị-validation\"><a href=\"#hi%E1%BB%83n-th%E1%BB%8B-validation\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Hiển thị validation</h2>\n<p>Dùng <code class=\"language-text\">:required</code> và <code class=\"language-text\">:optional</code> để trỏ đến các element nào có thuộc tính <code class=\"language-text\">required</code> hoặc không</p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">input<span class=\"token pseudo-class\">:required</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> <span class=\"token color\">red</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">input<span class=\"token pseudo-class\">:optional</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> <span class=\"token color\">blue</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p><code class=\"language-text\">:valid</code> và <code class=\"language-text\">:invalid</code> trên các element bị/không bị lỗi</p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">input<span class=\"token pseudo-class\">:valid</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> <span class=\"token color\">black</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">input<span class=\"token pseudo-class\">:invalid</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> <span class=\"token color\">red</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Để thay đổi nội dung câu thông báo, sử dụng <code class=\"language-text\">element.setCustomValidity(&#39;thông báo&#39;)</code> trên các element: <code class=\"language-text\">&lt;fieldset&gt;</code>, <code class=\"language-text\">&lt;input&gt;</code>, <code class=\"language-text\">&lt;output&gt;</code>, <code class=\"language-text\">&lt;select&gt;</code>, <code class=\"language-text\">&lt;button&gt;</code>, <code class=\"language-text\">&lt;textarea&gt;</code></p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> nameInput <span class=\"token operator\">=</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> form <span class=\"token operator\">=</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'form'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nnameInput<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  nameInput<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">setCustomValidity</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  nameInput<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">checkValidity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nnameInput<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'invalid'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>nameInput<span class=\"token punctuation\">.</span><span class=\"token property-access\">value</span> <span class=\"token operator\">===</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    nameInput<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">setCustomValidity</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Enter your username!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    nameInput<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">setCustomValidity</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Usernames can only contain upper and lowercase letters. Try again!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5/Constraint_validation\">Constraint validation\n</a></p>\n"}},{"node":{"title":"Map và Object trong Javascript","path":"/map-va-object-trong-javascript/","date":"7. December 2018","timeToRead":5,"desc":"Kẻ tám lạng người nữa cân","content":"<!-- TOC -->\n<ul>\n<li><a href=\"#key\">key</a></li>\n<li><a href=\"#th%E1%BB%A9-t%E1%BB%B1-c%C3%A1c-element\">Thứ tự các element</a></li>\n<li><a href=\"#kh%E1%BB%9Fi-t%E1%BA%A1o\">Khởi tạo</a></li>\n<li><a href=\"#l%E1%BA%A5y-gi%C3%A1-tr%E1%BB%8B\">Lấy giá trị</a></li>\n<li><a href=\"#th%C3%AAm-m%E1%BB%99t-element\">Thêm một element</a></li>\n<li><a href=\"#x%C3%B3a-element\">Xóa element</a></li>\n<li><a href=\"#l%E1%BA%A5y-size-hay-length\">Lấy <code class=\"language-text\">size</code> (hay length)</a></li>\n<li><a href=\"#loop\">Loop</a></li>\n<li><a href=\"#khi-n%C3%A0o-d%C3%B9ng-map-khi-n%C3%A0o-d%C3%B9ng-object\">Khi nào dùng <code class=\"language-text\">Map</code>, khi nào dùng <code class=\"language-text\">Object</code></a></li>\n</ul>\n<!-- /TOC -->\n<p><code class=\"language-text\">Map</code> có thể coi là con đẻ của <code class=\"language-text\">Object</code>, nó kế thừa, cắt bỏ, bổ sung một số thứ trong Object</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> map <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>map <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//true</span>\n\n<span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>obj <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//false</span></code></pre>\n<p>Mỗi phần tử trong Map được lưu theo cặp <code class=\"language-text\">key: value</code>, các giá trị <code class=\"language-text\">key</code> này cũng là duy nhất trong Map, không có trường hợp được lặp lại, giống Object thôi, phần khác nhau sẽ được đề cặp ở dưới.</p>\n<p>Nói về cái tên Map một chút, vì mang các đặc điểm rất giống với World Map, Street Map. Chữ <code class=\"language-text\">Map</code> được dùng trong các trường hợp cần tìm nhanh dữ liệu, vì các giá trị trên Map là duy nhất.</p>\n<p>Ví dụ bản đồ TP.HCM thì tất cả các con đường là khác nhau (do hết tên anh hùng nên nhiều khi đặt trùng trên một số quận, vụ này không tính nhé), bản đồ thế giới thì mỗi nước là duy nhất trên bản đồ.</p>\n<p>Giờ nói các điểm khác nhau nè</p>\n<h2 id=\"key\"><a href=\"#key\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>key</h2>\n<p>Key của <code class=\"language-text\">Object</code> chỉ có thể là <code class=\"language-text\">String</code> hoặc <code class=\"language-text\">Integer</code></p>\n<p>Key trong <code class=\"language-text\">Map</code> có thể là một <code class=\"language-text\">Object</code>, <code class=\"language-text\">Array</code>, <code class=\"language-text\">Function</code>, nói chung không giới hạn</p>\n<h2 id=\"thứ-tự-các-element\"><a href=\"#th%E1%BB%A9-t%E1%BB%B1-c%C3%A1c-element\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Thứ tự các element</h2>\n<p>Trong Map <strong>thứ tự các element là cố định</strong>, ngược lại so với Object</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> myObject <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    z<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'@'</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n    b<span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">1</span><span class=\"token operator\">:</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">5</span><span class=\"token operator\">:</span> <span class=\"token number\">5</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>myObject<span class=\"token punctuation\">)</span> \n<span class=\"token comment\">// Object {1: 4, 5: 5, z: 1, @: 2, b: 3}</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>item <span class=\"token keyword\">in</span> myObject<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token spread operator\">...</span>\n<span class=\"token comment\">// 1</span>\n<span class=\"token comment\">// 5</span>\n<span class=\"token comment\">// z</span>\n<span class=\"token comment\">// @</span>\n<span class=\"token comment\">// b</span></code></pre>\n<p>Thứ tự các phần trong object không quan trọng, khi <code class=\"language-text\">for...in</code> qua các phần tử trên object, tùy theo enzine của trình duyệt, thứ tự này có thể khác nhau</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> myObject <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmyObject<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'z'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmyObject<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmyObject<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> <span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">]</span> <span class=\"token keyword\">of</span> myObject<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// z 1</span>\n<span class=\"token comment\">// @ 2</span>\n<span class=\"token comment\">// b 3</span></code></pre>\n<p>Thứ tự khi chạy <code class=\"language-text\">for...of</code> trên Map luôn đúng theo thứ tự đã thêm</p>\n<h2 id=\"khởi-tạo\"><a href=\"#kh%E1%BB%9Fi-t%E1%BA%A1o\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Khởi tạo</h2>\n<p>Với Oject ta có một số cách để khởi tạo</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// bằng constructor</span>\n<span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">;</span> \n<span class=\"token comment\">// cùng kết quả như trên</span>\n\n<span class=\"token comment\">// dùng Object.prototype.create</span>\n<span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token known-class-name class-name\">Object</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">create</span><span class=\"token punctuation\">(</span><span class=\"token keyword null nil\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<blockquote>\n<p>Dùng <code class=\"language-text\">Object.create</code> để tạo object mới *<em>kế thừa</em> từ một object khác.</p>\n</blockquote>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> <span class=\"token maybe-class-name\">Vehicle</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    type<span class=\"token operator\">:</span> <span class=\"token string\">\"General\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">display</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">type</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Car sẽ kế thừa các property của Vehicle</span>\n<span class=\"token keyword\">var</span> <span class=\"token maybe-class-name\">Car</span> <span class=\"token operator\">=</span> <span class=\"token known-class-name class-name\">Object</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">create</span><span class=\"token punctuation\">(</span><span class=\"token maybe-class-name\">Vehicle</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// overwrite lại giá trị type</span>\n<span class=\"token maybe-class-name\">Car</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">type</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"Car\"</span><span class=\"token punctuation\">;</span> \n<span class=\"token maybe-class-name\">Car</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">display</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"Car\"</span>\n\n<span class=\"token maybe-class-name\">Vehicle</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">display</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// vẫn là \"General\"</span></code></pre>\n<p>Cũng tương tự như Array, chúng ta không dùng constructor nhiều vì nó tốn tài nguyên (và lười đánh máy dài)</p>\n<p>Với <code class=\"language-text\">Map</code> chúng ta sẽ <strong>chỉ có duy nhất một cách để khởi tạo</strong> bằng constructor <code class=\"language-text\">new Map</code></p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> map <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> map <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token comment\">// map = {1=>2, 2=>3}</span></code></pre>\n<h2 id=\"lấy-giá-trị\"><a href=\"#l%E1%BA%A5y-gi%C3%A1-tr%E1%BB%8B\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Lấy giá trị</h2>\n<p>Lấy một giá trị trong Map thông qua <code class=\"language-text\">Map.prototype.get(key)</code></p>\n<pre class=\"language-js\"><code class=\"language-js\">map<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">get</span><span class=\"token punctuation\">(</span>keyName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Object thì cũng có vài đường</p>\n<pre class=\"language-js\"><code class=\"language-js\">obj<span class=\"token punctuation\">.</span><span class=\"token property-access\">keyName</span>\nobj<span class=\"token punctuation\">[</span><span class=\"token string\">'keyName'</span><span class=\"token punctuation\">]</span></code></pre>\n<p>Kiểm tra element có tồn tại trong Map dễ hơn chút so với Object</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Map</span>\nmap<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">has</span><span class=\"token punctuation\">(</span>keyName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// object</span>\n<span class=\"token keyword\">var</span> isExist <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">.</span><span class=\"token property-access\">keyName</span> <span class=\"token operator\">===</span> <span class=\"token keyword nil\">undefined</span>\n<span class=\"token comment\">// hoặc</span>\n<span class=\"token keyword\">var</span> isExist <span class=\"token operator\">=</span> <span class=\"token string\">'keyName'</span> <span class=\"token keyword\">in</span> obj<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// kiểm tra property trường hợp ko phải kế thừa từ object cha</span>\nobj<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">hasOwnProperty</span><span class=\"token punctuation\">(</span>keyName<span class=\"token punctuation\">)</span></code></pre>\n<h2 id=\"thêm-một-element\"><a href=\"#th%C3%AAm-m%E1%BB%99t-element\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Thêm một element</h2>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Map</span>\n\nmap<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">set</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// cặp giá trị key, value</span>\n\n<span class=\"token comment\">// Object</span>\nobj<span class=\"token punctuation\">[</span><span class=\"token string\">'gender'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'female'</span><span class=\"token punctuation\">;</span>\nobj<span class=\"token punctuation\">.</span><span class=\"token property-access\">gender</span> <span class=\"token operator\">=</span> <span class=\"token string\">'male'</span><span class=\"token punctuation\">;</span> </code></pre>\n<h2 id=\"xóa-element\"><a href=\"#x%C3%B3a-element\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Xóa element</h2>\n<p>Object không có phương thức để xóa một element, chúng ta dùng operator <code class=\"language-text\">delete</code></p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">delete</span> obj<span class=\"token punctuation\">.</span><span class=\"token property-access\">keyName</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Chỗ này cũng sẽ có nhiều tranh luận quanh vấn đề performance, một số quan điểm cho là làm như bên dưới tốt hơn</p>\n<pre class=\"language-js\"><code class=\"language-js\">obj<span class=\"token punctuation\">.</span><span class=\"token property-access\">keyName</span> <span class=\"token operator\">=</span> <span class=\"token keyword nil\">undefined</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Nhưng đây rõ ràng là 2 cách làm khác nhau, nếu <code class=\"language-text\">delete</code> là xóa hẳn, thì cách sau là gán <code class=\"language-text\">key</code> đó với giá trị <code class=\"language-text\">undefined</code>, đồng nghĩa với việc khi <code class=\"language-text\">for..in</code> nó vẫn chạy qua element đó.</p>\n<p>Map thì có các hàm sẵn để làm chuyện xóa element</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// trả về true/false</span>\n<span class=\"token keyword\">var</span> isDeleteSuccessed <span class=\"token operator\">=</span> map<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">delete</span><span class=\"token punctuation\">(</span>keyName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// xóa sạch</span>\nmap<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// {}</span></code></pre>\n<h2 id=\"lấy-size-hay-length\"><a href=\"#l%E1%BA%A5y-size-hay-length\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Lấy <code class=\"language-text\">size</code> (hay length)</h2>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Object không có trực tiếp mà phải gọi hàm keys</span>\n<span class=\"token known-class-name class-name\">Object</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">keys</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">length</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Map, rất đơn giản</span>\nmap<span class=\"token punctuation\">.</span><span class=\"token property-access\">size</span><span class=\"token punctuation\">;</span></code></pre>\n<h2 id=\"loop\"><a href=\"#loop\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Loop</h2>\n<blockquote>\n<p>Một trong những khác biệt đáng chú ý nhất mà bạn nên cân nhắc dùng <code class=\"language-text\">Map</code> thay vì <code class=\"language-text\">Object</code></p>\n</blockquote>\n<p>Kiểm tra xem kiểu dữ liệu có là dạng <code class=\"language-text\">iterable</code> (loop được)</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> obj<span class=\"token punctuation\">[</span><span class=\"token known-class-name class-name\">Symbol</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">iterator</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token comment\">// > undefined</span>\n\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> map<span class=\"token punctuation\">[</span><span class=\"token known-class-name class-name\">Symbol</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">iterator</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token comment\">// > function</span></code></pre>\n<p>Nghĩa là chúng ta có thể dùng <code class=\"language-text\">for...of</code> trên <code class=\"language-text\">Map</code>, <code class=\"language-text\">Object</code> chỉ có thể <code class=\"language-text\">for...in</code></p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//For map: { 2=>3, 4=>5}</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> item <span class=\"token keyword\">of</span> map<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token comment\">// Array[2,3]</span>\n<span class=\"token comment\">// Array[4,5]</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">,</span>value<span class=\"token punctuation\">]</span> <span class=\"token keyword\">of</span> map<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">key: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>key<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">, value: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>value<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//key: 2, value: 3</span>\n<span class=\"token comment\">//key: 4, value: 5</span></code></pre>\n<p>Hoặc <code class=\"language-text\">forEach</code></p>\n<pre class=\"language-js\"><code class=\"language-js\">map<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value<span class=\"token punctuation\">,</span> key</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">key: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>key<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">, value: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>value<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// key: 2, value: 3</span>\n<span class=\"token comment\">// key: 4, value: 5</span></code></pre>\n<p>Trong Object thậm chí là khi ta dùng <code class=\"language-text\">for..in</code> cũng không thể dùng trực tiếp <code class=\"language-text\">value</code> mà phải viết <code class=\"language-text\">obj[key]</code></p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>id<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">:</span> <span class=\"token string\">\"test\"</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> key <span class=\"token keyword\">in</span> obj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">key: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>key<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">, value: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>obj<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// key: id, value: 1</span>\n<span class=\"token comment\">// key: name, value: test</span></code></pre>\n<h2 id=\"khi-nào-dùng-map-khi-nào-dùng-object\"><a href=\"#khi-n%C3%A0o-d%C3%B9ng-map-khi-n%C3%A0o-d%C3%B9ng-object\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Khi nào dùng <code class=\"language-text\">Map</code>, khi nào dùng <code class=\"language-text\">Object</code></h2>\n<p>Mặc dù nãy giờ đọc thì bạn sẽ thấy <code class=\"language-text\">Map</code> quá ư thần thánh, vậy tại sao ta không dẹp luôn Object?</p>\n<ul>\n<li>Trường hợp mà các giá trị key của chúng ta nó chỉ là <code class=\"language-text\">integer</code>, <code class=\"language-text\">string</code>, truy xuất một element trong object bằng key là <strong>nhanh nhất</strong>, trong khi <code class=\"language-text\">Map.prototype.get</code> là một function thì nó phải tốn chút tính toán</li>\n<li>Hoặc trường hợp chúng ta có các element phụ thuộc lẫn nhau như bên dưới</li>\n</ul>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    id<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> \n    name<span class=\"token operator\">:</span> <span class=\"token string\">\"It's Me!\"</span><span class=\"token punctuation\">,</span> \n    <span class=\"token function-variable function\">print</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> \n         <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Object Id: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">id</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">, with Name: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">name</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Với <code class=\"language-text\">Map</code>? đơn giản là hổng làm được.</p>\n<p>JSON bản thân đã hỗ trợ Object, xài luôn Object chứ không cần convert qua chi.</p>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://medium.com/front-end-hacking/es6-map-vs-object-what-and-when-b80621932373\">ES6 — Map vs Object — What and when?</a></p>\n"}},{"node":{"title":"Kim chỉ nam khi thiết kế form từ Google","path":"/kim-chi-nam-khi-thiet-ke-form-tu-google/","date":"14. November 2018","timeToRead":4,"desc":"Bài này nằm trong loạt bài chuẩn kiến thức để đi thi web mobile specialist của google. Một vài điểm cần nhớ khi thiết kế và làm việc với form","content":"<!-- TOC -->\n<ul>\n<li><a href=\"#tr%C3%A1nh-l%E1%BA%B7p-l%E1%BA%A1i\">Tránh lặp lại</a></li>\n<li><a href=\"#t%C3%B4i-%C4%91ang-%C4%91%E1%BB%A9ng-%E1%BB%9F-b%C6%B0%E1%BB%9Bc-n%C3%A0o\">Tôi đang đứng ở bước nào?</a></li>\n<li><a href=\"#gi%C3%A1-tr%E1%BB%8B-ng%C3%A0y-th%C3%A1ng\">Giá trị ngày tháng</a></li>\n<li>\n<p><a href=\"#s%E1%BB%AD-d%E1%BB%A5ng-input-type-ph%C3%B9-h%E1%BB%A3p\">Sử dụng input type phù hợp</a></p>\n<ul>\n<li><a href=\"#typeurl\"><code class=\"language-text\">type=&#39;url&#39;</code></a></li>\n<li><a href=\"#typetel\"><code class=\"language-text\">type=&#39;tel&#39;</code></a></li>\n<li><a href=\"#typeemail\"><code class=\"language-text\">type=&#39;email&#39;</code></a></li>\n<li><a href=\"#typesearch\"><code class=\"language-text\">type=&#39;search&#39;</code></a></li>\n<li><a href=\"#typenumber\"><code class=\"language-text\">type=&#39;number&#39;</code></a></li>\n<li><a href=\"#typerange\"><code class=\"language-text\">type=&#39;range&#39;</code></a></li>\n<li><a href=\"#typedatetime-local\"><code class=\"language-text\">type=&#39;datetime-local&#39;</code></a></li>\n<li><a href=\"#typedatetime\"><code class=\"language-text\">type=&#39;datetime&#39;</code></a></li>\n<li><a href=\"#typetime\"><code class=\"language-text\">type=&#39;time&#39;</code></a></li>\n<li><a href=\"#typeweek\"><code class=\"language-text\">type=&#39;week&#39;</code></a></li>\n<li><a href=\"#typemonth\"><code class=\"language-text\">type=&#39;month&#39;</code></a></li>\n<li><a href=\"#typecolor\"><code class=\"language-text\">type=&#39;color&#39;</code></a></li>\n</ul>\n</li>\n<li><a href=\"#g%E1%BB%A3i-%C3%BD-th%C3%B4ng-qua-tr%C6%B0%E1%BB%9Dng-datalist\">Gợi ý thông qua trường <code class=\"language-text\">datalist</code></a></li>\n<li><a href=\"#auto-focus-khi-c%E1%BA%A7n-thi%E1%BA%BFt\">auto focus khi cần thiết</a></li>\n<li>\n<p><a href=\"#h%C3%A3y-tin-v%C3%A0o-chrome\">Hãy tin vào Chrome</a></p>\n<ul>\n<li><a href=\"#kh%C3%B4ng-s%E1%BB%AD-d%E1%BB%A5ng-input-chu%E1%BA%A9n\">Không sử dụng input chuẩn</a></li>\n<li><a href=\"#d%C3%B9ng-placeholder-gi%E1%BA%A3\">Dùng placeholder giả</a></li>\n<li><a href=\"#t%E1%BB%B1-%C4%91%E1%BB%99ng-copy-shipping-address-v%C3%A0o-billing-address\">Tự động copy shipping address vào billing address</a></li>\n</ul>\n</li>\n<li><a href=\"#validate-form-v%E1%BB%9Bi-html5\">Validate form với HTML5</a></li>\n</ul>\n<!-- /TOC -->\n<p>Thiết kế form cần tránh việc bắt user làm tới làm lui, đòi hỏi nhiều thông tin hơn cần thiết, hay cảm giác bị lạc lối giữa một cái form quá dài quá nhiều step</p>\n<p>Nguyên tắc chung</p>\n<ul>\n<li>Bật autofill trên form đề trình duyệt của user có thể tự điền các field đã biết, hiển thị lại những giá trị mà user đã nhập</li>\n<li>Label rõ ràng để user biết mình đang nhập cái gì, ở đâu.</li>\n</ul>\n<h2 id=\"tránh-lặp-lại\"><a href=\"#tr%C3%A1nh-l%E1%BA%B7p-l%E1%BA%A1i\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Tránh lặp lại</h2>\n<p><img src=\"https://developers.google.com/web/fundamentals/design-and-ux/input/forms/imgs/forms-multipart-good.png\" alt=\"Một số gợi ý khi thiết kế form\"></p>\n<p>Ví dụ trên trang đăng ký nếu chúng ta đã cho user nhập first name và last name, có thể cho generate tự động ra một giá trị cho field nickname để đăng nhập. Hoặc trường hợp trên trang checkout, cho phép lưu lại địa chỉ giao hàng cho lần checkout sau.</p>\n<p>Để tiết kiệm thời gian tiền bạc cho user, khai thác tính năng <strong>autocomplete</strong> có sẵn của trình duyệt.</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">autocomplete</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>email<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">autocomplete</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>address-line1<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></code></pre>\n<p>Ta muốn autocomplete giá trị gì thì báo với trình duyệt luôn, hoặc dùng giá trị <code class=\"language-text\">name=&#39;giá trị name chuẩn&#39;</code>, hoặc <code class=\"language-text\">autocomplete=&#39;giá trị autocomplete chuẩn&#39;</code></p>\n<p>Chuẩn này đã được <a href=\"https://html.spec.whatwg.org/multipage/forms.html#autofill\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">WHATWG HTML Standard.</a> đặt ra ko phải mình</p>\n<table>\n<thead>\n<tr>\n<th>Trường</th>\n<th>Giá trị name</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Name</td>\n<td>name fname mname lname</td>\n</tr>\n<tr>\n<td>Email</td>\n<td>email</td>\n</tr>\n<tr>\n<td>Address</td>\n<td>address city region province state zip zip2 postal country</td>\n</tr>\n<tr>\n<td>Phone</td>\n<td>phone mobile country-code area-code exchange suffix ext</td>\n</tr>\n<tr>\n<td>Credit Card</td>\n<td>ccname cardnumber cvc ccmonth ccyear exp-date card-type</td>\n</tr>\n<tr>\n<td>Usernames</td>\n<td>username</td>\n</tr>\n<tr>\n<td>Passwords</td>\n<td>password</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"tôi-đang-đứng-ở-bước-nào\"><a href=\"#t%C3%B4i-%C4%91ang-%C4%91%E1%BB%A9ng-%E1%BB%9F-b%C6%B0%E1%BB%9Bc-n%C3%A0o\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Tôi đang đứng ở bước nào?</h2>\n<p>Với các form được chia làm nhiều step trước khi submit, một thanh trạng thái cho user biết mình đang đến bước nào là bắt buộc.</p>\n<p><img src=\"https://designmodo.com/wp-content/uploads/2016/10/Checkout-Form.jpg\" alt=\"Một số gợi ý khi thiết kế form\"></p>\n<h2 id=\"giá-trị-ngày-tháng\"><a href=\"#gi%C3%A1-tr%E1%BB%8B-ng%C3%A0y-th%C3%A1ng\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Giá trị ngày tháng</h2>\n<p>Trường ngày tháng để user chọn từ lịch, không tách ra thành các input độc lập dạng ngày-tháng-năm, user không cần phải mở một ứng dụng calendar khác đó trên điện thoại, trên máy tính để kiểm tra ngày trước khi chọn.</p>\n<p><img src=\"https://developers.google.com/web/fundamentals/design-and-ux/input/forms/imgs/forms-calendar-good.png\" alt=\"Một số gợi ý khi thiết kế form\"></p>\n<h2 id=\"sử-dụng-input-type-phù-hợp\"><a href=\"#s%E1%BB%AD-d%E1%BB%A5ng-input-type-ph%C3%B9-h%E1%BB%A3p\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Sử dụng input type phù hợp</h2>\n<p>HTML5 hỗ trợ khá nhiều kiểu input, khi cung cấp giá trị <code class=\"language-text\">type</code> rõ ràng cho input, trình duyệt sẽ biết và hiển thị kiểu keyboard nào cho phù hợp trên điện thoại, cũng như có những validation tích hợp sẵn</p>\n<h3 id=\"typeurl\"><a href=\"#typeurl\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a><code class=\"language-text\">type=&#39;url&#39;</code></h3>\n<p>Chuỗi bắt đầu phải là '<a href=\"http://&#x27;\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">http://'</a>, 'ftp://', 'mailto:'</p>\n<p><img src=\"https://developers.google.com/web/fundamentals/design-and-ux/input/forms/imgs/url-ios.png\" alt=\"Một số gợi ý khi thiết kế form\"></p>\n<h3 id=\"typetel\"><a href=\"#typetel\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a><code class=\"language-text\">type=&#39;tel&#39;</code></h3>\n<p>Ko có ép một syntax hay validation nào cả, giúp hiện thì bàn phím điện thoại trên mobile</p>\n<p><img src=\"https://developers.google.com/web/fundamentals/design-and-ux/input/forms/imgs/tel-android.png\" alt=\"ko có ép một syntax hay validation nào cả, giúp hiện thì bàn phím điện thoại trên mobile\"></p>\n<h3 id=\"typeemail\"><a href=\"#typeemail\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a><code class=\"language-text\">type=&#39;email&#39;</code></h3>\n<p>Trên mobile nó sẽ hiện sẵn phím @</p>\n<p><img src=\"https://developers.google.com/web/fundamentals/design-and-ux/input/forms/imgs/email-android.png\" alt=\"Một số gợi ý khi thiết kế form\"></p>\n<h3 id=\"typesearch\"><a href=\"#typesearch\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a><code class=\"language-text\">type=&#39;search&#39;</code></h3>\n<p>Bàn phím search chuẩn trên từng thiết bị</p>\n<p><img src=\"https://developers.google.com/web/fundamentals/design-and-ux/input/forms/imgs/plain-ios.png\" alt=\"Một số gợi ý khi thiết kế form\"></p>\n<h3 id=\"typenumber\"><a href=\"#typenumber\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a><code class=\"language-text\">type=&#39;number&#39;</code></h3>\n<p>iOS yêu cầu có thêm <code class=\"language-text\">pattern=&#39;\\d*&#39;</code> để hiển thị bàn phím số</p>\n<p><img src=\"https://developers.google.com/web/fundamentals/design-and-ux/input/forms/imgs/number-android.png\" alt=\"Một số gợi ý khi thiết kế form\"></p>\n<h3 id=\"typerange\"><a href=\"#typerange\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a><code class=\"language-text\">type=&#39;range&#39;</code></h3>\n<p>Hiển thị kiếu slider control</p>\n<p><img src=\"https://developers.google.com/web/fundamentals/design-and-ux/input/forms/imgs/range-ios.png\" alt=\"Một số gợi ý khi thiết kế form\"></p>\n<h3 id=\"typedatetime-local\"><a href=\"#typedatetime-local\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a><code class=\"language-text\">type=&#39;datetime-local&#39;</code></h3>\n<p>Giá trị ngày tháng có timezone</p>\n<p><img src=\"https://developers.google.com/web/fundamentals/design-and-ux/input/forms/imgs/datetime-local-ios.png\" alt=\"Một số gợi ý khi thiết kế form\"></p>\n<h3 id=\"typedatetime\"><a href=\"#typedatetime\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a><code class=\"language-text\">type=&#39;datetime&#39;</code></h3>\n<p>Giá trị ngày tháng ko có timezone</p>\n<p><img src=\"https://developers.google.com/web/fundamentals/design-and-ux/input/forms/imgs/date-android.png\" alt=\"Một số gợi ý khi thiết kế form\"></p>\n<h3 id=\"typetime\"><a href=\"#typetime\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a><code class=\"language-text\">type=&#39;time&#39;</code></h3>\n<p>Chỉ có giá trị giờ</p>\n<p><img src=\"https://developers.google.com/web/fundamentals/design-and-ux/input/forms/imgs/time-ios.png\" alt=\"Một số gợi ý khi thiết kế form\"></p>\n<h3 id=\"typeweek\"><a href=\"#typeweek\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a><code class=\"language-text\">type=&#39;week&#39;</code></h3>\n<p>Chỉ có giá trị tuần</p>\n<p><img src=\"https://developers.google.com/web/fundamentals/design-and-ux/input/forms/imgs/week-android.png\" alt=\"Một số gợi ý khi thiết kế form\"></p>\n<h3 id=\"typemonth\"><a href=\"#typemonth\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a><code class=\"language-text\">type=&#39;month&#39;</code></h3>\n<p>Chỉ có giá trị tháng</p>\n<p><img src=\"https://developers.google.com/web/fundamentals/design-and-ux/input/forms/imgs/month-ios.png\" alt=\"Một số gợi ý khi thiết kế form\"></p>\n<h3 id=\"typecolor\"><a href=\"#typecolor\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a><code class=\"language-text\">type=&#39;color&#39;</code></h3>\n<p>Bảng màu để chọn</p>\n<p><img src=\"https://developers.google.com/web/fundamentals/design-and-ux/input/forms/imgs/color-android.png\" alt=\"Một số gợi ý khi thiết kế form\"></p>\n<h2 id=\"gợi-ý-thông-qua-trường-datalist\"><a href=\"#g%E1%BB%A3i-%C3%BD-th%C3%B4ng-qua-tr%C6%B0%E1%BB%9Dng-datalist\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Gợi ý thông qua trường <code class=\"language-text\">datalist</code></h2>\n<p><code class=\"language-text\">&lt;datalist /&gt;</code> là element cho phép chúng ta cung cấp các giá trị <strong>gợi ý</strong> với một <code class=\"language-text\">&lt;input /&gt;</code></p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>frmFavChocolate<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Favorite Type of Chocolate<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fav-choc<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>frmFavChocolate<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">list</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>chocType<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>datalist</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>chocType<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>white<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>milk<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>dark<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>datalist</span><span class=\"token punctuation\">></span></span></code></pre>\n<div class=\"note\">User không bắt buộc phải chọn các giá trị trong datalist, chỉ là gợi ý thích thì chọn</div>\n<p><a href=\"https://googlesamples.github.io/web-fundamentals/fundamentals/design-and-ux/input/forms/order.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Xem một form đã hiện thực</a></p>\n<h2 id=\"auto-focus-khi-cần-thiết\"><a href=\"#auto-focus-khi-c%E1%BA%A7n-thi%E1%BA%BFt\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>auto focus khi cần thiết</h2>\n<p>Trên thẻ input, nếu muốn input được focus ngay lập tức khi vừa vào trang, như login, focus vào ô username. Thuộc tính <code class=\"language-text\">autofocus</code> này sẽ tự động bị ignore trên mobile để tránh xuất hiện bàn phím ko cần thiết.</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">autofocus</span> <span class=\"token attr-name\">...</span> <span class=\"token punctuation\">/></span></span></code></pre>\n<h2 id=\"hãy-tin-vào-chrome\"><a href=\"#h%C3%A3y-tin-v%C3%A0o-chrome\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Hãy tin vào Chrome</h2>\n<p>Rất nhiều trường hợp vì customize theo ý design mà tính năng autofill của Chrome không còn chạy đúng, nguyên nhân có thể là</p>\n<h3 id=\"không-sử-dụng-input-chuẩn\"><a href=\"#kh%C3%B4ng-s%E1%BB%AD-d%E1%BB%A5ng-input-chu%E1%BA%A9n\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Không sử dụng input chuẩn</h3>\n<p>Lỗi thường thấy khi phải customize cái dropdown theo design mà không thể dùng thẻ <code class=\"language-text\">&lt;select /&gt;</code></p>\n<h3 id=\"dùng-placeholder-giả\"><a href=\"#d%C3%B9ng-placeholder-gi%E1%BA%A3\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Dùng placeholder giả</h3>\n<p>Placeholder giả là gì? Thay vì dùng attribute placeholder, dùng <code class=\"language-text\">value=&quot;First Name&quot;</code> rồi viết javascript để khi focus xóa giá trị này đi.</p>\n<h3 id=\"tự-động-copy-shipping-address-vào-billing-address\"><a href=\"#t%E1%BB%B1-%C4%91%E1%BB%99ng-copy-shipping-address-v%C3%A0o-billing-address\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Tự động copy shipping address vào billing address</h3>\n<p>Cơ bản thì Autofill của Chrome KO thể chạy được nữa nếu chúng ta cho copy dữ liệu từ shipping address qua billing address bằng javascript</p>\n<h2 id=\"validate-form-với-html5\"><a href=\"#validate-form-v%E1%BB%9Bi-html5\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Validate form với HTML5</h2>\n<p>Bài này đọc lại <a href=\"/2018-11-02-validate-form-voi-html-5\">ở đây</a></p>\n<p><a href=\"https://googlesamples.github.io/web-fundamentals/fundamentals/design-and-ux/input/forms/order.html\" target=\"_blank\" rel=\"noopener noreferrer\">Sample</a></p>\n<p><a href=\"https://developers.google.com/web/fundamentals/design-and-ux/input/forms/\" target=\"_blank\" rel=\"noopener noreferrer\">Create Amazing Forms</a></p>\n<p><a href=\"https://developers.google.com/web/updates/2015/06/checkout-faster-with-autofill\" target=\"_blank\" rel=\"noopener noreferrer\">Help users checkout faster with Autofill</a></p>\n"}}]}}},"context":{}}