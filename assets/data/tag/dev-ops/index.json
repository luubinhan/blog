{"hash":"fb6394b40d1044d313361f8d2119ce59e0069e78","data":{"tag":{"title":"dev-ops","belongsTo":{"edges":[{"node":{"id":"28b28757469522f8f7ff7248ce3b6343","title":"Hướng dẫn delegate domain với AWS","path":"/2024-04-05-huong-dan-delegate-domain-trong-aws/","date":"2024-04-05","timeToRead":1,"desc":"Trong bài hôm nay chúng ta cùng tìm hiểu cách delegate một domain trong AWS","content":"<p>Trước tiên chúng ta cần biết delegate domain sẽ giải quyết bài toán gì</p>\n<p>Mình lấy ví dụ, Công ty Furfel đang sở hữu tên miền <code class=\"language-inline-text\">furfel.net</code>, là trang web chính của công ty\nCông ty thuê công ty Dev phát triển thêm một số dịch vụ trên tên miền con <code class=\"language-inline-text\">dev.furfel.net</code>\nCông ty Furfel sẽ trao toàn bộ quyền quyết định trên tên miền <code class=\"language-inline-text\">dev.furfel.net</code> cho công ty Dev, và chỉ nắm quyền trên tên miền cha là <code class=\"language-inline-text\">furfel.net</code></p>\n<p>Đây là bài toán mà <strong>delegate domain</strong> sẽ giải quyết</p>\n<p>Để delegate domain trong AWS thì kiến trúc tổng quát sẽ như hình bên dưới</p>\n<p><img src=\"https://i.imgur.com/w5fQhyQl.png\"></p>\n<p>Bên trong Route 53, chúng ta sẽ tạo một <strong>Public Hosted Zone</strong>, lưu ý là <strong>public</strong> với tên <strong>giống hoàn toàn với domain chính</strong>, theo ví dụ sẽ là <code class=\"language-inline-text\">furfel.net</code></p>\n<p><img src=\"https://media.dev.to/cdn-cgi/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fael6xqiv8gyd9rnk83g1.jpg\" alt=\"Public Hosted Zone furfel.net\"></p>\n<p>Sau khi tạo xong hosted zone <code class=\"language-inline-text\">furfel.net</code>, chúng ta mang giá trị NS (name server) của hosted zone vừa tạo đưa cho công ty đang nắm quyền trên tên miền <code class=\"language-inline-text\">furfel.net</code></p>\n<p><img src=\"https://media.dev.to/cdn-cgi/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fael6xqiv8gyd9rnk83g1.jpg\" alt=\"Copy giá trị Nameserver của publich hosted zone vừa tạo\"></p>\n<p>Công ty Furfel sẽ vào phần quản lý tên miền và đưa toàn bộ giá trị nameserver vào như một <em>external name server</em> là xem như đã delegate xong sub domain cho công ty Dev</p>\n<p><img src=\"https://media.dev.to/cdn-cgi/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Ffuq5hfcya9thvarrizn9.jpg\" alt=\"Đưa giá trị NS vào trong tên miền chính\"></p>\n<p>Công ty Dev để thêm tên miền <code class=\"language-inline-text\">dev.furfel.net</code>, việc cần làm là tạo thêm một public hosted zone mới, với tên <code class=\"language-inline-text\">dev.furfel.net</code></p>\n<p><img src=\"https://media.dev.to/cdn-cgi/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Ftwj6kpdp0vym6edjmmw9.jpg\" alt=\"Public Hosted Zone dev.furfel.net\"></p>\n<p>Copy toàn bộ giá trị NS của hosted zone <code class=\"language-inline-text\">dev.furfel.net</code>, rồi quay lại hosted zone <code class=\"language-inline-text\">furfel.net</code></p>\n<p><img src=\"https://media.dev.to/cdn-cgi/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fdfjgs3ryjwnvszvwghzb.jpg\" alt=\"NS của dev.furfel.net\"></p>\n<p>Thêm một record mới tên dev, type là NS và paste giá trị Nameserver vừa copy</p>\n<p><img src=\"https://media.dev.to/cdn-cgi/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2F9qg56ridyrk3192mk9sn.jpg\" alt=\"Thêm record mới tên dev bên trong hosted zone dev.furfel.net\"></p>\n","cover_image":""}},{"node":{"id":"9f8cb439930920e69ea8b3a3edab670c","title":"Lưu ý khi sử dụng AWS Lambda để tránh mất tiền","path":"/2023-08-04-tranh-mat-tien-voi-lambda/","date":"2023-08-04","timeToRead":5,"desc":"Khi chúng ta sử dụng đúng lúc đúng nơi, những dịch vụ serverless như Lambda sẽ rẻ hơn so với hệ thống bình thường, chúng ta vẫn nghe quảng cáo nhan nhản serverless thì xài nhiêu trả nhiêu, an toàn hơn, khả năng mở rộng và phục hồi tốt hơn cách truyền thống, có thật sự đúng như quảng cáo không?","content":"<!-- TOC -->\n<ul>\n<li><a href=\"#kh%C3%B4ng-%C4%91%E1%BB%83-%C3%BD-chi-ph%C3%AD-logging-v%C3%A0-monitor\">Không để ý chi phí logging và monitor</a></li>\n<li><a href=\"#%C4%91%E1%BB%8Dc-k%E1%BB%B9-h%C6%B0%E1%BB%9Bng-d%E1%BA%ABn-s%E1%BB%AD-d%E1%BB%A5ng-tr%C6%B0%E1%BB%9Bc-khi-d%C3%B9ng\">Đọc kỹ hướng dẫn sử dụng trước khi dùng</a></li>\n<li><a href=\"#kh%C3%B4ng-ch%E1%BB%8Bu-b%E1%BA%ADt-th%C3%B4ng-b%C3%A1o\">Không chịu bật thông báo</a></li>\n<li><a href=\"#lambda-g%E1%BB%8Di-lambda-theo-c%C6%A1-ch%E1%BA%BF-synchronous\">Lambda gọi Lambda theo cơ chế Synchronous</a></li>\n<li><a href=\"#kh%C3%B4ng-cache\">Không cache</a></li>\n<li><a href=\"#c%E1%BA%A5p-qu%C3%A1-nhi%E1%BB%81u-t%C3%A0i-nguy%C3%AAn\">Cấp quá nhiều tài nguyên</a></li>\n<li><a href=\"#ki%E1%BA%BFn-tr%C3%BAc-c%E1%BB%A7-chu%E1%BB%91i\">Kiến trúc củ chuối</a></li>\n</ul>\n<!-- /TOC -->\n<p>Vâng đúng nhưng không phải trong mọi hoàn cảnh, chiếc chìa khóa vạn năngcó thể giải quyết mọi yêu cầu hệ thống. Khi thiết kế một hệ thống chúng ta phải cân nhắc đến việc cho nó tiến hóa theo nhu cầu, cũng giống như những phần mềm chúng ta viết ra điều phải thay đổi để thích nghi và đáp ứng nhu cầu mới của khách hàng</p>\n<p>Chúng ta cùng đi qua một vài lỗi hay gặp và cách khắc phục để tiết kiệm chi phí tối đa</p>\n<h2 id=\"không-để-ý-chi-phí-logging-và-monitor\"><a href=\"#kh%C3%B4ng-%C4%91%E1%BB%83-%C3%BD-chi-ph%C3%AD-logging-v%C3%A0-monitor\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Không để ý chi phí logging và monitor</h2>\n<p>Ghi log và monitor ứng dụng để có thể tìm lỗi và phát hiện nguyên nhân gây lỗi là bắt buộc, nhưng nó đi đôi với chi phí. AWS CloudWatch tính phí cả 2 phần ghi log và lưu trữ log</p>\n<p>Bạn sẽ ngạc nhiên khi phát hiện ra rằng chi phí cho CloudWatch đôi khi còn cao hơn cả cho Lambda và API Gateway</p>\n<p>Để giải quyết:</p>\n<ol>\n<li>Log <code class=\"language-inline-text\">INFO</code> hay <code class=\"language-inline-text\">ERROR</code> chỉ trên môi trường production</li>\n<li>Chỉ giữ log thật sự hữu ích nhất để debug trên production</li>\n<li>Lưu log trong 30 ngày là vừa đủ để debug mà không làm đội chi phí lưu trữ</li>\n</ol>\n<p>Nếu đã có log được lưu ở một bên thứ 3 khác có thể bỏ qua log CloudWatch</p>\n<h2 id=\"đọc-kỹ-hướng-dẫn-sử-dụng-trước-khi-dùng\"><a href=\"#%C4%91%E1%BB%8Dc-k%E1%BB%B9-h%C6%B0%E1%BB%9Bng-d%E1%BA%ABn-s%E1%BB%AD-d%E1%BB%A5ng-tr%C6%B0%E1%BB%9Bc-khi-d%C3%B9ng\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Đọc kỹ hướng dẫn sử dụng trước khi dùng</h2>\n<p>Để khỏi “hết hồn” lúc nhận bill cuối tháng, chúng ta cần biết khi bật một tính năng lên sẽ phát sinh thêm những phụ phí, rất nhiều phí chỉ được áp dụng trong những điều kiện cụ thể. Ví dụ như chọn <em>provisioned concurrency</em> cho Lambda sẽ thêm một số phụ phí</p>\n<p><img src=\"https://lumigo.io/wp-content/uploads/2023/07/1_ER0It8JsAuL3D1ECFlUBog-768x349.jpg\"></p>\n<p>Đừng nóng vội hãy luôn nhớ chậm lại một nhịp rồi tìm hiểu cho đầy đủ trước khi muốn sử dụng một dịch vụ nào khác.</p>\n<h2 id=\"không-chịu-bật-thông-báo\"><a href=\"#kh%C3%B4ng-ch%E1%BB%8Bu-b%E1%BA%ADt-th%C3%B4ng-b%C3%A1o\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Không chịu bật thông báo</h2>\n<p>Mọi người cũng hay quên dùng tính năng <em>billing alarm</em> của AWS. Một công cụ tuyệt vời để báo liền cho chúng ta để biết được những khoản chi chúng ta đã bỏ ra có vượt ngoài tầm kiểm soát không</p>\n<p>Cài đặt Billing Alarm nên là điều đầu tiên chúng ta cần làm khi sử dụng AWS trước khi mọi thứ ra vượt ra ngoài tầm kiểm soát.</p>\n<h2 id=\"lambda-gọi-lambda-theo-cơ-chế-synchronous\"><a href=\"#lambda-g%E1%BB%8Di-lambda-theo-c%C6%A1-ch%E1%BA%BF-synchronous\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Lambda gọi Lambda theo cơ chế Synchronous</h2>\n<p>Một Lambda gọi một Lambda khác synchronous nghĩa là Lambda đầu nguồn sẽ <em>ngồi đợi</em> Lambda thứ 2 chạy xong trước khi nó tiếp tục chạy. Nó làm đội lên chi phí khá nhiều vì thời gian ngồi đợi vẫn bị tính phí, giống như lên xe taxi bạn ngồi đợi nhưng đồng hồ đếm tiền vẫn nhảy dù xe không chạy.</p>\n<p>Hãy luôn nhớ gọi Lambda asynchronous bất cứ ở đâu cho phép</p>\n<p><img src=\"https://lumigo.io/wp-content/uploads/2023/07/1__Z1-AG9GVnzRSQW_a77yYQ-768x334.png\"></p>\n<h2 id=\"không-cache\"><a href=\"#kh%C3%B4ng-cache\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Không cache</h2>\n<p>Caching là người bạn thân thiết, hay khắc cốt ghi tâm điều này, caching nghĩa là Lambda sẽ không cần gọi và làm gì cả, kết quả được trả thằng ngay từ API Gateway hay CloudFront. Bên cạnh đó ở ứng dụng có thể cân nhắc sử dụng thêm dịch vụ chuyên cache như ElastiCache hay Memento, hay DynamoDB Accelerator</p>\n<p><img src=\"https://lumigo.io/wp-content/uploads/2023/07/0_9V50W4A0o6-r7bce-768x329.png\"></p>\n<h2 id=\"cấp-quá-nhiều-tài-nguyên\"><a href=\"#c%E1%BA%A5p-qu%C3%A1-nhi%E1%BB%81u-t%C3%A0i-nguy%C3%AAn\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Cấp quá nhiều tài nguyên</h2>\n<p>Cấp quá nhiều memory cho Lambda cũng là một lỗi hay mắc. Lambda được tính phí theo 2 tiêu chi: lượng memory đã sử dụng và thời gian chạy của hàm.</p>\n<p>Câu hỏi là cấp bao nhiêu cho đủ? Công cụ <a href=\"https://github.com/alexcasalboni/aws-lambda-power-tuning\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Lambda Power Tuning</a> sẽ giúp chúng ta xác định lượng memory cần thiết để cân bằng giữa chi phí và hiệu năng</p>\n<p><img src=\"https://lumigo.io/wp-content/uploads/2023/07/0_V70C8Qw83OYgW5FW.png\"></p>\n<h2 id=\"kiến-trúc-củ-chuối\"><a href=\"#ki%E1%BA%BFn-tr%C3%BAc-c%E1%BB%A7-chu%E1%BB%91i\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Kiến trúc củ chuối</h2>\n<p>Kiến trúc mà củ chuối quá thì hậu quả là nhản tiền, vừa tốn chi phí, hiệu năng không tối ưu và lại còn khó vận hành bảo trì</p>\n<p>AWS có rất nhiều service để thực hiện gửi nhận message, như SNS, SQS, EventBridge, Kinesis, ưu nhược điểm là khác nhau và phải hiểu để sử dụng cho đúng mục đích, không khéo chúng ta là đi lấy giao chặt thịt heo đi giết kiến</p>\n<p><img src=\"https://lumigo.io/wp-content/uploads/2023/07/1_WQOGHnPyWMfVIR3yO3D0zA-768x485.jpg\"></p>\n<p>Tương tự, API Gateway cũng tốn khá khá tiền so với ALB nhưng nó có nhiều đồ chơi vượt trội hơn, tiền nào của đó thôi, liệu cơm gấp mắm</p>\n<p><img src=\"https://lumigo.io/wp-content/uploads/2023/07/1_gpJi-nd7tx8etGi0nvKR2A-768x383.png\"></p>\n<p>Mọi sai làm điều là một cơ hội để học hỏi, nên không sợ sai chỉ sợ không học được gì từ những gì mình đã làm sai. Chúc các bạn có một cuộc chơi đỡ tốn tiền hơn trên AWS</p>\n<p><a href=\"https://lumigo.io/blog/save-money-on-serverless-common-costly-mistakes-and-how-to-avoid-them/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Save money on Serverless: common costly mistakes and how to avoid them</a></p>\n","cover_image":""}},{"node":{"id":"9aafa421dad4e53de4b2273720758cca","title":"Sử dụng nhiều AWS account trong Gitlab CI","path":"/2023-04-09-su-dung-nhieu-account-aws-de-deploy-gitlab/","date":"2023-04-09","timeToRead":4,"desc":"Một bài toán cũng quá ư phổ biến khi deploy là có nhiều môi trường khác nhau dev, qa, staging và production, và chúng ta sẽ có các tài khoản tương ứng để có đủ quyền trên môi trường đó.","content":"<!-- TOC -->\n<ul>\n<li><a href=\"#s%E1%BB%AD-d%E1%BB%A5ng-1-t%C3%A0i-kho%E1%BA%A3n\">Sử dụng 1 tài khoản</a></li>\n<li><a href=\"#nhi%E1%BB%81u-t%C3%A0i-kho%E1%BA%A3n-b%E1%BA%B1ng-bi%E1%BA%BFn-m%C3%B4i-tr%C6%B0%E1%BB%9Dng\">Nhiều tài khoản bằng biến môi trường</a></li>\n<li><a href=\"#nhi%E1%BB%81u-t%C3%A0i-kho%E1%BA%A3n-theo-environment-v%C3%A0-scope-bi%E1%BA%BFn-m%C3%B4i-tr%C6%B0%E1%BB%9Dng-theo-environment\">Nhiều tài khoản theo environment và scope biến môi trường theo environment</a></li>\n<li><a href=\"#nhi%E1%BB%81u-t%C3%A0i-kho%E1%BA%A3n-b%E1%BA%B1ng-aws-profile\">Nhiều tài khoản bằng AWS Profile</a></li>\n</ul>\n<!-- /TOC -->\n<h2 id=\"sử-dụng-1-tài-khoản\"><a href=\"#s%E1%BB%AD-d%E1%BB%A5ng-1-t%C3%A0i-kho%E1%BA%A3n\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Sử dụng 1 tài khoản</h2>\n<p>Để bắt đầu, chúng ta sử dụng 1 tài khoản để upload lên S3, chúng ta sẽ khai báo các biến môi trường sau bên trong Gitlab CI</p>\n<ul>\n<li><code class=\"language-inline-text\">AWS_S3_BUCKET</code></li>\n<li><code class=\"language-inline-text\">AWS_ACCESS_KEY_ID</code></li>\n<li><code class=\"language-inline-text\">AWS_SECRET_ACCESS_KEY</code></li>\n<li><code class=\"language-inline-text\">AWS_DEFAULT_REGION</code></li>\n</ul>\n<p><img src=\"https://miro.medium.com/v2/resize:fit:720/format:webp/1*rPl9Icr-_VuZXHfSW0NCrg.png\"></p>\n<p>File pipeline <code class=\"language-inline-text\">.gitlab-ci.yml</code></p>\n<div class=\"gridsome-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">stages</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token punctuation\">-</span> build\n\t<span class=\"token punctuation\">-</span> production\n\n<span class=\"token key atrule\">create file</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token key atrule\">stage</span><span class=\"token punctuation\">:</span> build\n\t<span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> alpine\n\t<span class=\"token key atrule\">script</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token punctuation\">-</span> touch foo.bar\n\t<span class=\"token key atrule\">artifacts</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token key atrule\">paths</span><span class=\"token punctuation\">:</span>\n\t\t\t<span class=\"token punctuation\">-</span> foo.bar\n\n<span class=\"token key atrule\">deploy to production</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token key atrule\">stage</span><span class=\"token punctuation\">:</span> production\n\t<span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> amazon/aws<span class=\"token punctuation\">-</span>cli\n\t\t<span class=\"token key atrule\">entrypoint</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">]</span>\n\t<span class=\"token key atrule\">script</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token punctuation\">-</span> aws <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>version\n\t\t<span class=\"token punctuation\">-</span> aws s3 cp foo.bar s3<span class=\"token punctuation\">:</span>//$AWS_S3_BUCKET/foo.txt</code></pre></div>\n<p>Theo mặc định các biến <code class=\"language-inline-text\">AWS_ACCESS_KEY_ID</code>, <code class=\"language-inline-text\">AWS_SECRET_ACCESS_KEY</code>, <code class=\"language-inline-text\">AWS_DEFAULT_REGION</code> sẽ được AWS CLI sử dụng để authen, không cần khai báo gì thêm</p>\n<p><img src=\"https://miro.medium.com/v2/resize:fit:720/format:webp/1*vEKIXwu9giYQYDhVBmrT_g.png\"></p>\n<h2 id=\"nhiều-tài-khoản-bằng-biến-môi-trường\"><a href=\"#nhi%E1%BB%81u-t%C3%A0i-kho%E1%BA%A3n-b%E1%BA%B1ng-bi%E1%BA%BFn-m%C3%B4i-tr%C6%B0%E1%BB%9Dng\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Nhiều tài khoản bằng biến môi trường</h2>\n<p>Cách này không phải hay nhất nhưng đa phần chúng ta sẽ nghĩ ngay tới đó là đặt hàng loạt biến AWS khác nhau cho từng môi trường</p>\n<p><img src=\"https://miro.medium.com/v2/resize:fit:720/format:webp/1*oxrBcHZ7w83fDS8ej16grg.png\"></p>\n<p>Bên trong job, chúng ta sẽ lấy các biến môi trường này ra để sử dụng, khá \"thủ công\"</p>\n<div class=\"gridsome-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">stages</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> build\n    <span class=\"token punctuation\">-</span> test\n    <span class=\"token punctuation\">-</span> production\n\n<span class=\"token key atrule\">create file</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">stage</span><span class=\"token punctuation\">:</span> build\n    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> alpine\n    <span class=\"token key atrule\">script</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> touch foo.bar\n    <span class=\"token key atrule\">artifacts</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">paths</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> foo.bar\n\n<span class=\"token key atrule\">deploy to test</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">stage</span><span class=\"token punctuation\">:</span> test\n    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> amazon/aws<span class=\"token punctuation\">-</span>cli\n        <span class=\"token key atrule\">entrypoint</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token key atrule\">before_script</span><span class=\"token punctuation\">:</span>\n\t    <span class=\"token comment\"># Set lại giá trị credential</span>\n        <span class=\"token punctuation\">-</span> export AWS_ACCESS_KEY_ID=$TEST_AWS_ACCESS_KEY_ID\n        <span class=\"token punctuation\">-</span> export AWS_SECRET_ACCESS_KEY=$TEST_AWS_SECRET_ACCESS_KEY\n        <span class=\"token punctuation\">-</span> export AWS_DEFAULT_REGION=$TEST_AWS_DEFAULT_REGION\n    <span class=\"token key atrule\">script</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> aws <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>version\n        <span class=\"token punctuation\">-</span> aws s3 cp foo.bar s3<span class=\"token punctuation\">:</span>//$TEST_AWS_S3_BUCKET/foo.txt\n\n<span class=\"token key atrule\">deploy to production</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">stage</span><span class=\"token punctuation\">:</span> production\n    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> amazon/aws<span class=\"token punctuation\">-</span>cli\n        <span class=\"token key atrule\">entrypoint</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token key atrule\">before_script</span><span class=\"token punctuation\">:</span>\n\t    <span class=\"token comment\"># Set lại giá trị credential</span>\n        <span class=\"token punctuation\">-</span> export AWS_ACCESS_KEY_ID=$PROD_AWS_ACCESS_KEY_ID\n        <span class=\"token punctuation\">-</span> export AWS_SECRET_ACCESS_KEY=$PROD_AWS_SECRET_ACCESS_KEY\n        <span class=\"token punctuation\">-</span> export AWS_DEFAULT_REGION=$PROD_AWS_DEFAULT_REGION        \n    <span class=\"token key atrule\">script</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> aws <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>version\n        <span class=\"token punctuation\">-</span> aws s3 cp foo.bar s3<span class=\"token punctuation\">:</span>//$PROD_AWS_S3_BUCKET/foo.txt</code></pre></div>\n<p><img src=\"https://miro.medium.com/v2/resize:fit:720/format:webp/1*seYjr6dGwJ6dz3KxC-TPqw.png\"></p>\n<p>Cách này nhìn chung là dễ hiểu, dễ làm, tuy nhiên nó lại phải khai báo khá nhiều biến bên trong pipeline và quá nhiều config trên từng job</p>\n<h2 id=\"nhiều-tài-khoản-theo-environment-và-scope-biến-môi-trường-theo-environment\"><a href=\"#nhi%E1%BB%81u-t%C3%A0i-kho%E1%BA%A3n-theo-environment-v%C3%A0-scope-bi%E1%BA%BFn-m%C3%B4i-tr%C6%B0%E1%BB%9Dng-theo-environment\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Nhiều tài khoản theo environment và scope biến môi trường theo environment</h2>\n<p>Nếu bạn để ý bên trong phần khai báo biến môi trường, chúng ta có cột <strong>Environment</strong>, có nghĩa là biến có thể có scope theo từng môi trường được</p>\n<p><img src=\"https://miro.medium.com/v2/resize:fit:720/format:webp/1*OX--G_EvC4z_1EkawOfLwg.png\"></p>\n<p>Chúng ta cần khai báo thêm environment cho job để nó có thể sử dụng biến môi trường thuộc scope </p>\n<div class=\"gridsome-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">deploy to test</span><span class=\"token punctuation\">:</span>  \n    <span class=\"token key atrule\">stage</span><span class=\"token punctuation\">:</span> test  \n    <span class=\"token punctuation\">...</span>  \n    <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span>  \n        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> <span class=\"token key atrule\">testdeploy to production</span><span class=\"token punctuation\">:</span>  \n    <span class=\"token key atrule\">stage</span><span class=\"token punctuation\">:</span> production  \n    <span class=\"token punctuation\">...</span>  \n    <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span>  \n        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> production</code></pre></div>\n<p>Sau khi khai báo thêm biến môi trường cho job, bên trong màn hình thêm <strong>variables</strong> lúc này chúng ta sẽ có thêm các lựa chọn ngoài <strong>All</strong> như trước</p>\n<p><img src=\"https://miro.medium.com/v2/resize:fit:720/format:webp/1*rhppig_K2zKK88gvMqSGUw.png\"></p>\n<p>Bây giờ chúng ta chỉ cần bỏ đi prefix, đặt lại đúng tên và môi trường là xong</p>\n<p><img src=\"https://miro.medium.com/v2/resize:fit:720/format:webp/1*gcRkv_J8UAlP5-E9O7dsuQ.png\">\n<img src=\"https://miro.medium.com/v2/resize:fit:720/format:webp/1*3YNcoTVtC3_1asxMc-RzZw.png\"></p>\n<div class=\"gridsome-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">stages</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> build\n    <span class=\"token punctuation\">-</span> test\n    <span class=\"token punctuation\">-</span> production\n\n<span class=\"token key atrule\">create file</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">stage</span><span class=\"token punctuation\">:</span> build\n    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> alpine\n    <span class=\"token key atrule\">script</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> touch foo.bar\n    <span class=\"token key atrule\">artifacts</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">paths</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> foo.bar\n\n<span class=\"token key atrule\">deploy to test</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">stage</span><span class=\"token punctuation\">:</span> test\n    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> amazon/aws<span class=\"token punctuation\">-</span>cli\n        <span class=\"token key atrule\">entrypoint</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token key atrule\">script</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> aws <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>version\n        <span class=\"token punctuation\">-</span> aws s3 cp foo.bar s3<span class=\"token punctuation\">:</span>//$AWS_S3_BUCKET/foo.txt\n    <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> test        \n\n<span class=\"token key atrule\">deploy to production</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">stage</span><span class=\"token punctuation\">:</span> production\n    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> amazon/aws<span class=\"token punctuation\">-</span>cli\n        <span class=\"token key atrule\">entrypoint</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">]</span>      \n    <span class=\"token key atrule\">script</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> aws <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>version\n        <span class=\"token punctuation\">-</span> aws s3 cp foo.bar s3<span class=\"token punctuation\">:</span>//$AWS_S3_BUCKET/foo.txt\n    <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> production</code></pre></div>\n<p>Như có thể thấy, pipeline giờ gần giống như trường hợp chúng ta chỉ có 1 tài khoản, rất dễ hiểu dễ làm, không cần thêm config gì rườm rà trên file <code class=\"language-inline-text\">.gitlab-ci.yml</code>, tuy nhiên nó vẫn có quá nhiều biến môi trường cần phải quản lý</p>\n<h2 id=\"nhiều-tài-khoản-bằng-aws-profile\"><a href=\"#nhi%E1%BB%81u-t%C3%A0i-kho%E1%BA%A3n-b%E1%BA%B1ng-aws-profile\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Nhiều tài khoản bằng AWS Profile</h2>\n<p>Bên trong Gitlab, <strong>variables</strong> không chỉ có thể là giá trị, nó còn có thể là <strong>file</strong>, chúng ta khai báo các credentials theo dạng file</p>\n<p>Một file credentials của aws sẽ có dạng <code class=\"language-inline-text\">~/.aws/credentials</code></p>\n<div class=\"gridsome-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token punctuation\">[</span>production<span class=\"token punctuation\">]</span>\naws_access_key_id=AKIAXKYMDEKGYDJ2OT4U\naws_secret_access_key=N/T3ZafKprWt3EMnMFDQCXXXXXXXXXXXXX\nregion=us<span class=\"token punctuation\">-</span>east<span class=\"token punctuation\">-</span><span class=\"token number\">1</span>\n<span class=\"token punctuation\">[</span>test<span class=\"token punctuation\">]</span>\naws_access_key_id=AKIA6C7LEVAXLETXGONN\naws_secret_access_key=wtilH45rB3oUyIjJnIALhOhLlyXXXXXXXXXXXXX\nregion=us<span class=\"token punctuation\">-</span>east<span class=\"token punctuation\">-</span><span class=\"token number\">1</span></code></pre></div>\n<p>Khai báo biến <code class=\"language-inline-text\">AWS_SHARED_CREDENTIALS_FILE</code> dạng file</p>\n<p><img src=\"https://miro.medium.com/v2/resize:fit:720/format:webp/1*6_L4xNcITsl1Z1Ma6mO3Qg.png\"></p>\n<p>Biến <code class=\"language-inline-text\">AWS_SHARED_CREDENTIALS_FILE</code> lúc này sẽ chứa đường dẫn đến đến file</p>\n<p><img src=\"https://miro.medium.com/v2/resize:fit:720/format:webp/1*EUayc8Ef5VZBeIa1bbyeng.png\"></p>\n<p>AWS CLI một cách thần kỳ sẽ hiểu dùng file này để lấy thông tin credential, job chúng ta chỉ cần chỉ định biến <code class=\"language-inline-text\">AWS_PROFILE</code> muốn sử dụng</p>\n<div class=\"gridsome-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">stages</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> build\n    <span class=\"token punctuation\">-</span> test\n    <span class=\"token punctuation\">-</span> production\n\n<span class=\"token key atrule\">create file</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">stage</span><span class=\"token punctuation\">:</span> build\n    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> alpine\n    <span class=\"token key atrule\">script</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> touch foo.bar\n    <span class=\"token key atrule\">artifacts</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">paths</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> foo.bar\n\n<span class=\"token key atrule\">deploy to test</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">stage</span><span class=\"token punctuation\">:</span> test\n    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> amazon/aws<span class=\"token punctuation\">-</span>cli\n        <span class=\"token key atrule\">entrypoint</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token key atrule\">variables</span><span class=\"token punctuation\">:</span>\n\t    <span class=\"token comment\">## chỉ định profile test</span>\n        <span class=\"token key atrule\">AWS_PROFILE</span><span class=\"token punctuation\">:</span> test\n    <span class=\"token key atrule\">script</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> aws <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>version\n        <span class=\"token punctuation\">-</span> aws s3 cp foo.bar s3<span class=\"token punctuation\">:</span>//$AWS_S3_BUCKET/foo.txt\n    <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> test        \n\n<span class=\"token key atrule\">deploy to production</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">stage</span><span class=\"token punctuation\">:</span> production\n    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> amazon/aws<span class=\"token punctuation\">-</span>cli\n        <span class=\"token key atrule\">entrypoint</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">]</span> \n    <span class=\"token key atrule\">variables</span><span class=\"token punctuation\">:</span>\n\t    <span class=\"token comment\"># chỉ định profile production</span>\n        <span class=\"token key atrule\">AWS_PROFILE</span><span class=\"token punctuation\">:</span> production             \n    <span class=\"token key atrule\">script</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> aws <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>version\n        <span class=\"token punctuation\">-</span> aws s3 cp foo.bar s3<span class=\"token punctuation\">:</span>//$AWS_S3_BUCKET/foo.txt\n    <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> production</code></pre></div>\n<p>Và nếu thích dùng môi trường thay vì biến, chúng ta khai báo thêm biến môi trường để map vào từng profile, tuy nhiên mình thấy nó thêm rườm rà, khuyên bạn không nên.</p>\n<p><img src=\"https://miro.medium.com/v2/resize:fit:720/format:webp/1*Hn8tRLJ3CpAtnT4f-Eyy6g.png\"></p>\n<p>Chúc các bạn thực vui!</p>\n<p><a href=\"https://medium.com/devops-with-valentine/gitlab-ci-how-to-manage-aws-cli-credentials-for-multiple-aws-accounts-in-a-single-pipeline-bb2b37972999\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">GitLab CI: How to Manage AWS CLI Credentials for multiple AWS Accounts in a Single Pipeline</a>\nMarkdown selection 7246 bytes 840 words 249 lines Ln 250, Col 239HTML 4358 characters 807 words 173 paragraphs</p>\n","cover_image":""}},{"node":{"id":"ccf700f7119a151321d7d3c58f0ce932","title":"Xuất bản npm module bằng Lerna với Gitlab CI/CD","path":"/2023-03-30-huong-dan-xuat-ban-module-len-gitlab-registry/","date":"2023-03-30","timeToRead":5,"desc":"","content":"<p>Trong bài viết này chúng ta sẽ thực hiện tự động hóa quá trình xuất bản npm module lên <a href=\"https://docs.gitlab.com/ee/user/packages/npm_registry/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">gitlab registry</a> bằng lerna sử dụng Gitlab CI/CD, lưu ý chúng ta không dùng <a href=\"https://www.npmjs.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">npmjs registry</a>, nó cũng ko có quá nhiều khác biệt, chỉ cần một vài thay đổi nhỏ để xuất bản lên <em>npmjs registry</em>. Các công cụ chúng ta cần đến</p>\n<ul>\n<li><strong>lerna</strong> để quản lý và xuất bản version cho nhiều module cùng lúc</li>\n<li><strong>Gitlab CI/CD</strong>: source code sẽ lưu trên gitlab, dùng Gitlab CI/CD runner để đẩy module lên Gitlab NPM Registry (nơi chứa module npm của gitlab)</li>\n</ul>\n<p>Các bạn cần có căn bản về 2 công cụ này để có tể hiểu hết được bài viết</p>\n<p>Phương pháp đặt tên đánh version của chúng ta sẽ như sau</p>\n<ul>\n<li><strong>main</strong> là nhánh chính, chứa version chính thức chúng ta sẽ xuất bản</li>\n<li><strong>feature branch</strong> sẽ cho ra các version <em>alpha</em> (hay còn gọi với tên khác là <strong>canary</strong>) cho phép chúng ta test nhanh phiên bản mới trước khi xuất bản chính thức</li>\n</ul>\n<p>Dùng lerna, chúng ta xuất bản version canary bằng</p>\n<div class=\"gridsome-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">lerna publish <span class=\"token parameter variable\">--canary</span>\n<span class=\"token comment\"># => 1.0.1-alpha.0+${SHA}</span></code></pre></div>\n<div class=\"gridsome-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token comment\">// package.json</span>\n<span class=\"token property\">\"publish:canary\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"lerna publish --canary --no-git-tag-version --no-push --yes\"</span></code></pre></div>\n<p>Khi đã merge vào nhánh <code class=\"language-inline-text\">main</code>, chúng ta sẽ chạy <code class=\"language-inline-text\">lerna version</code> với những tham số cần thiết để <code class=\"language-inline-text\">push</code> thêm <strong>tag</strong> vào package cũng như cập nhập, <em>commit</em>, <em>push</em> version mới vào trong <strong>package.json</strong>. Để pipeline có quyền push những thay đổi vào trong repository, chúng ta có những thiết đặt rất quan trọng sẽ được đề cập trong phần Gitlab CI/CD bên dưới.</p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// package.json</span>\n<span class=\"token string-property property\">\"version:stable\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"lerna version --yes\"</span></code></pre></div>\n<h2 id=\"gitlab-cicd\"><a href=\"#gitlab-cicd\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Gitlab CI/CD</h2>\n<p>Trọng tâm của bài nay này chúng ta sẽ tập trung vào việc xuất bản một module tự động bằng CI/CD của Gitlab. Chúng ta sẽ đụng đến token, file pipeline <code class=\"language-inline-text\">.gitlab-ci.yml</code>, cần quyền <strong>Maintainer</strong> trên repo để có thể vào menu <strong>Settings</strong></p>\n<h3 id=\"token\"><a href=\"#token\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Token</h3>\n<p>Chúng ta sẽ cần 2 loại TOKEN</p>\n<ul>\n<li><strong>CI_JOB_TOKEN</strong> đây là token predefined của CI/CD, nó sẽ có quyền để xuất bản lên gitlab registry, nếu như cần xuất bản lên npm registry chúng ta sẽ cần <em>npm token</em> và lưu nó bào trong biến môi trường để sử dụng trong CI.</li>\n<li>Token cho việc push và thêm tag trên repo, chúng ta sẽ đặt tên nó là <code class=\"language-inline-text\">GL_TOKEN</code>, tạo một project token và cấp quyền <code class=\"language-inline-text\">api</code>, <code class=\"language-inline-text\">read_repository</code>, <code class=\"language-inline-text\">write_repository</code> trên nhánh main</li>\n</ul>\n<h3 id=\"gitlab-ciyml\"><a href=\"#gitlab-ciyml\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a><code class=\"language-inline-text\">.gitlab-ci.yml</code></h3>\n<p>Đây là một file pipeline dùng để tham khảo, các bạn có thể tùy biến thêm tùy theo nhu cầu,.</p>\n<p>Khai báo một step <code class=\"language-inline-text\">.prepare</code> sẽ dùng làm extend cho các <em>job</em>, trong trường hợp cần phải sử dụng lại các bước này nhiều lần, đây là cách hiệu quả để re-use logic</p>\n<div class=\"gridsome-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\">.prepare\n\t<span class=\"token key atrule\">before_script</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token punctuation\">-</span> git config user.email $GITLAB_USER_EMAIL\n\t\t<span class=\"token punctuation\">-</span> git config user.name $GITLAB_USER_NAME\n\t\t<span class=\"token punctuation\">-</span> git remote set<span class=\"token punctuation\">-</span>url origin \"https<span class=\"token punctuation\">:</span>//gitlab<span class=\"token punctuation\">-</span>ci<span class=\"token punctuation\">-</span>token<span class=\"token punctuation\">:</span>$GL_TOKEN@$CI_SERVER_HOST/$CI_PROJECT_PATH.git\"\n\t\t<span class=\"token punctuation\">-</span> echo \"//$<span class=\"token punctuation\">{</span>CI_SERVER_HOST<span class=\"token punctuation\">}</span>/api/v4/projects/$<span class=\"token punctuation\">{</span>CI_PROJECT_ID<span class=\"token punctuation\">}</span>/packages/npm/<span class=\"token punctuation\">:</span>_authToken=$CI_JOB_TOKEN\" <span class=\"token punctuation\">></span> .npmrc\n\t\t<span class=\"token punctuation\">-</span> git checkout $CI_COMMIT_BRANCH</code></pre></div>\n<p>Chúng ta cần phải đảm bảo các bước này được chạy trước <em>script</em> chính, nên nó được đặt ở <code class=\"language-inline-text\">before_script</code>. Vì Lerna có đụng chạm đến Git repository trong quá trình nó đổi version và xuất bản lên registry, chúng ta phải thêm các bước thiệt đặt email, name khi chạy git</p>\n<p><strong>Đây là đoạn cực kỳ quan trọng</strong>, mình muốn tách riêng và nhắc lại lần nữa, vì nếu không có $GL_TOKEN đã tạo ở trước, chúng ta sẽ fail và bị lỗi 403, chúng ta cũng không thể dùng CI_JOB_TOKEN ở đây vì nó chỉ có quyền xuất bản mà không có quyền can thiệp vào git repository</p>\n<div class=\"gridsome-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\">git remote set<span class=\"token punctuation\">-</span>url origin \"https<span class=\"token punctuation\">:</span>//gitlab<span class=\"token punctuation\">-</span>ci<span class=\"token punctuation\">-</span>token<span class=\"token punctuation\">:</span>$GL_TOKEN@$CI_SERVER_HOST/$CI_PROJECT_PATH.git\"</code></pre></div>\n<p>Sao đó chúng ta sẽ tạo ra phải <code class=\"language-inline-text\">.npmrc</code> để khai báo registry chúng ta muốn xuất bản, ở đây  vì chúng ta chỉ muốn xuất bản nó lên gitlab NPM registry. Trong trường hợp cần xuất bản lên npmjs registry, chúng ta thay đổi nó thành</p>\n<div class=\"gridsome-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\">// Nhớ tạo NPM_TOKEN và lưu thành biến môi trường\necho \"//registry.npmjs.org/<span class=\"token punctuation\">:</span>_authToken=$NPM_TOKEN\" <span class=\"token punctuation\">></span> .npmrc</code></pre></div>\n<p>Mặt định Gitlab CI/CD sẽ checkout nhánh đang chạy job theo state <code class=\"language-inline-text\">DETACHED HEAD</code>, chúng ta phải chỉ định cụ thể <code class=\"language-inline-text\">git checkout $CI_COMMIT_BRANCH</code> để Lerna không <em>chửi</em> chúng ta</p>\n<p>Để build một bản <em>canary</em> (phiên bản thử nghiệm chưa hoàn thiện) dành cho nhánh feature, chúng ta sẽ khai báo</p>\n<div class=\"gridsome-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token comment\"># .gitlab-ci.yml</span>\n<span class=\"token key atrule\">build-publish-canary</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">extends</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> .prepare\n  <span class=\"token key atrule\">script</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> yarn install <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>frozen<span class=\"token punctuation\">-</span>lockfile\n    <span class=\"token punctuation\">-</span> yarn build\n    <span class=\"token punctuation\">-</span> yarn test\n    <span class=\"token punctuation\">-</span> yarn publish<span class=\"token punctuation\">:</span>canary\n  <span class=\"token key atrule\">rules</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">if</span><span class=\"token punctuation\">:</span>\n        $CI_COMMIT_BRANCH <span class=\"token tag\">!=</span> \"main\" <span class=\"token important\">&amp;&amp;</span> $CI_PIPELINE_SOURCE <span class=\"token tag\">!=</span>\n        'merge_request_event' <span class=\"token important\">&amp;&amp;</span> $CI_COMMIT_TITLE <span class=\"token tag\">!=</span> \"Publish\"</code></pre></div>\n<p>Sau khi chạy các lệnh bên trong <code class=\"language-inline-text\">.prepare</code>, chúng ta cho chạy <code class=\"language-inline-text\">yarn install --frozone-lockfile</code> để cài đặt dependencies sử dụng chính xác như những gì đã liệt kê trong file <code class=\"language-inline-text\">yarn.lock</code>, đây là một kinh nghiệm để tránh CI làm thay đổi file lock.</p>\n<p>Có những <code class=\"language-inline-text\">rules</code> rất quan trọng mà chúng ta đã thiết đặt</p>\n<ul>\n<li><code class=\"language-inline-text\">$CI_COMMIT_BRANCH != main</code> đảm bảo job này chỉ chạy trên các nhánh không phải là <code class=\"language-inline-text\">main</code></li>\n<li><code class=\"language-inline-text\">$CI_PIPELINE_SOURCE != 'merge_request_event</code> đảm báo job không chạy trên merge request</li>\n<li><code class=\"language-inline-text\">$CI_COMMIT_TITLE != Publish</code> đảm bảo job không chạy sau khi Lerna tạo ra một commit với title là <strong>Publish</strong>, commit này sẽ xuất hiện khi chạy <code class=\"language-inline-text\">lerna version</code></li>\n</ul>\n<p>Đối với nhánh <code class=\"language-inline-text\">main</code> chúng ta sẽ có một job khác</p>\n<div class=\"gridsome-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># .gitlab-ci.yml</span>\n<span class=\"token key atrule\">build-version-stable</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">extends</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> .prepare\n  <span class=\"token key atrule\">script</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> yarn install <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>frozen<span class=\"token punctuation\">-</span>lockfile\n    <span class=\"token punctuation\">-</span> yarn build\n    <span class=\"token punctuation\">-</span> yarn test\n    <span class=\"token punctuation\">-</span> yarn version<span class=\"token punctuation\">:</span>stable\n  <span class=\"token key atrule\">rules</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">if</span><span class=\"token punctuation\">:</span> $CI_COMMIT_BRANCH == \"main\" <span class=\"token important\">&amp;&amp;</span> $CI_COMMIT_TITLE <span class=\"token tag\">!=</span> \"Publish\"</code></pre></div>\n<p>Chúc các bạn thành công !</p>\n<p>Bài viết của luckyluu</p>\n","cover_image":""}}]}}},"context":{}}