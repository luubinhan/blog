{"hash":"e7cd9c5d01ce1d92a79e9b2d1377b8916f87e6c3","data":{"tag":{"title":"thuat-thuat","belongsTo":{"edges":[{"node":{"id":"ac91020c4cb3f555dd43eb61a87000b8","title":"Một vài điểm nên nhớ khi viết CSS","path":"/2020-10-25-neu-ban-viet-css-co-tam/","date":"2020-10-25","timeToRead":1,"desc":"Nếu bạn là người viết CSS có tâm, bạn cần đọc bài này để tránh những lỗi edge case khi viết CSS","content":"<h2 id=\"khoảng-cách-giữa-title-và-icon\"><a href=\"#kho%E1%BA%A3ng-c%C3%A1ch-gi%E1%BB%AFa-title-v%C3%A0-icon\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Khoảng cách giữa title và icon</h2>\n<p><img src=\"https://ishadeed.com/assets/just-in-case/just-in-case-1.png\" alt=\"img\"></p>\n<p>Phần chữ ở <em>title</em> có thể sẽ rất dài, về để tránh nó bị dính sát rạt với cái icon, thêm <code class=\"language-text\">margin-right: 1rem</code></p>\n<h2 id=\"2-button-nằm-kề-nhau\"><a href=\"#2-button-n%E1%BA%B1m-k%E1%BB%81-nhau\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>2 button nằm kề nhau</h2>\n<p>Nếu có 2 button nằm kế nhau, 99,9999% chúng ta muốn giữa các button có khoảng trắng, dùng css selector <code class=\"language-text\">adjacent-sibling</code></p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\"><span class=\"token class\">.button</span> <span class=\"token combinator\">+</span> <span class=\"token class\">.button</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">margin-left</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token unit\">rem</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h2 id=\"tag-và-category\"><a href=\"#tag-v%C3%A0-category\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Tag và Category</h2>\n<p><img src=\"https://ishadeed.com/assets/just-in-case/just-in-case-3.png\" alt=\"img\"></p>\n<p>Trong trường hợp mà tag name và category name quá dài, nếu để nó dàn trải như trong hình, sẽ tốt hơn nếu cho nó rớt dòng</p>\n<p><img src=\"https://ishadeed.com/assets/just-in-case/just-in-case-3-1.png\" alt=\"img\"></p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\"><span class=\"token class\">.tag</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">6.25</span><span class=\"token unit\">rem</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">text-overflow</span><span class=\"token punctuation\">:</span> ellipsis<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">overflow</span><span class=\"token punctuation\">:</span> hidden<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">white-space</span><span class=\"token punctuation\">:</span> nowrap<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h2 id=\"không-load-được-image\"><a href=\"#kh%C3%B4ng-load-%C4%91%C6%B0%E1%BB%A3c-image\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Không load được image</h2>\n<p>Nếu dùng thẻ <code class=\"language-text\">&lt;img /&gt;</code> mà nó ko load được hình thì sao, 1 cách cũng khá đơn giản là set <code class=\"language-text\">background-color</code></p>\n<p><img src=\"https://ishadeed.com/assets/just-in-case/just-in-case-5.png\" alt=\"img\"></p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">img</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> <span class=\"token hexcode color\">#525252</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h2 id=\"hình-avatar\"><a href=\"#h%C3%ACnh-avatar\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Hình Avatar</h2>\n<p>Đừng quên đặt <code class=\"language-text\">object-fit: cover</code> để có một hình tròn trịa đẹp đẽ như bên dưới, không bị <em>stretch</em> hay <em>compressed</em></p>\n<p><img src=\"https://ishadeed.com/assets/just-in-case/just-in-case-6.png\" alt=\"img\"></p>\n<p><a href=\"https://ishadeed.com/article/the-just-in-case-mindset-css/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">The Just in Case Mindset in CSS</a></p>\n","cover_image":""}},{"node":{"id":"08b2d75c19c84653923db247c4a7da12","title":"Mock API bằng Mirage JS","path":"/2020-10-23-huon-dan-mock-api-bang-mirage-js/","date":"2020-10-23","timeToRead":4,"desc":"Hướng dẫn bạn giả lập API khi chưa các bạn BE đang bận làm việc lớn","content":"<!-- TOC -->\n<ul>\n<li><a href=\"#t%E1%BA%A1i-sao-b%E1%BA%A1n-c%E1%BA%A7n-gi%E1%BA%A3-l%E1%BA%ADp-mock-api\">Tại sao bạn cần giả lập (mock) API</a></li>\n<li><a href=\"#l%C3%A0m-nh%C6%B0-th%E1%BA%BF-n%C3%A0o\">Làm như thế nào</a></li>\n<li><a href=\"#th%C3%AAm-n%E1%BB%99i-dung-%C4%91%E1%BB%99ng\">Thêm nội dung động</a></li>\n<li><a href=\"#th%C3%AAm-route-%C4%91%E1%BB%99ng\">Thêm route động</a></li>\n<li><a href=\"#gi%E1%BA%A3-l%E1%BA%ADp-nh%E1%BB%AFng-route-ch%E1%BB%89-%C4%91%E1%BB%8Bnh\">Giả lập những route chỉ định</a></li>\n<li><a href=\"#k%E1%BA%BFt\">Kết</a></li>\n</ul>\n<!-- /TOC -->\n<h2 id=\"tại-sao-bạn-cần-giả-lập-mock-api\"><a href=\"#t%E1%BA%A1i-sao-b%E1%BA%A1n-c%E1%BA%A7n-gi%E1%BA%A3-l%E1%BA%ADp-mock-api\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Tại sao bạn cần giả lập (mock) API</h2>\n<p>FE sẽ <strong>ko phải đợi</strong> đến khi BE làm xong API mới có thể bắt đầu integrate, nếu bạn có thể mock những API sẽ được trả về dựa trên <em>contract</em> đã thống nhất, thì <em>gần như</em> là không còn quá nhiều việc phải làm khi API làm xong.</p>\n<h2 id=\"làm-như-thế-nào\"><a href=\"#l%C3%A0m-nh%C6%B0-th%E1%BA%BF-n%C3%A0o\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Làm như thế nào</h2>\n<p>Để mock API, kể thể dùng nhiều cách như <a href=\"https://www.npmjs.com/package/json-server\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">JSON Server</a>, <a href=\"http://www.mbtest.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">mountebank</a>, hôm nay mình hướng dẫn dùng <a href=\"https://miragejs.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Mirage</a> mình mới biết, kết hợp với Vue nhé, React cũng tương tự thôi.</p>\n<ol>\n<li>Cài đặt vào devDependencies</li>\n</ol>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> i miragejs -D</code></pre>\n<ol start=\"2\">\n<li>Mình chọn tổ chức thư mục theo kiểu này, bạn có thể để nó ở chỗ khác thì tùy ý</li>\n</ol>\n<pre class=\"language-text\"><code class=\"language-text\">/\n├── public\n├── src\n│   ├── api\n│   │   └── mock\n│   │       ├── fixtures\n│   │       │   └── get-tasks.js\n│   │       └── index.js\n│   └── main.js\n├── package.json\n└── package-lock.json</code></pre>\n<ol start=\"3\">\n<li>Tạo mock server </li>\n</ol>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// api/mock/index.js</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">Server</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'miragejs'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword module\">export</span> <span class=\"token keyword module\">default</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> environment <span class=\"token operator\">=</span> <span class=\"token string\">'development'</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword control-flow\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Server</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    environment<span class=\"token punctuation\">,</span>\n    <span class=\"token function\">routes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// chút thêm routes ở đây</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<ol start=\"4\">\n<li>Mở file dùng để bootstrap app của chúng ta, nếu dùng Vue nó sẽ là <code class=\"language-text\">src/main.js</code> (<code class=\"language-text\">src/index.js</code> nếu bạn dùng với React)</li>\n</ol>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword module\">import</span> <span class=\"token imports\">createServer</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'./api/mock'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// chỉ tạo fake server trong lúc chạy dev mode</span>\n<span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span><span class=\"token property-access\">env</span><span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">===</span> <span class=\"token string\">'development'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">createServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Ví dụ bạn gọi API trong code như thế này</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword control-flow\">await</span> axios<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api/tasks'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Chúng ta sẽ cập nhập lại file <code class=\"language-text\">api/mock/index.js</code>, bổ sung route <code class=\"language-text\">/api/tasks</code> cho mock server</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// api/mock/index.js</span>\n\n<span class=\"token keyword module\">export</span> <span class=\"token keyword module\">default</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> environment <span class=\"token operator\">=</span> <span class=\"token string\">'development'</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n    <span class=\"token function\">routes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api/tasks'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        tasks<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n          <span class=\"token punctuation\">{</span> id<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> text<span class=\"token operator\">:</span> <span class=\"token string\">\"Feed the cat\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">{</span> id<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> text<span class=\"token operator\">:</span> <span class=\"token string\">\"Wash the dishes\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          <span class=\"token comment\">//...</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Tương tự để mock các HTTP method khác</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/tasks'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">schema<span class=\"token punctuation\">,</span> request</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span> <span class=\"token spread operator\">...</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/tasks'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">schema<span class=\"token punctuation\">,</span> request</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span> <span class=\"token spread operator\">...</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">patch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/tasks/:id'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">schema<span class=\"token punctuation\">,</span> request</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span> <span class=\"token spread operator\">...</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/tasks/:id'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">schema<span class=\"token punctuation\">,</span> request</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span> <span class=\"token spread operator\">...</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">del</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/tasks/:id'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">schema<span class=\"token punctuation\">,</span> request</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span> <span class=\"token spread operator\">...</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">options</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/tasks'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">schema<span class=\"token punctuation\">,</span> request</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span> <span class=\"token spread operator\">...</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Nếu mọi thứ <em>êm đẹp</em> bạn sẽ được thông báo trên cửa sổ console</p>\n<p><img src=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/07/image-32.png?resize=1208%2C296&#x26;ssl=1\" alt=\"Screenshot of a Mirage response in the console showing data for two task objects with IDs 1 and 2.\"></p>\n<h2 id=\"thêm-nội-dung-động\"><a href=\"#th%C3%AAm-n%E1%BB%99i-dung-%C4%91%E1%BB%99ng\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Thêm nội dung động</h2>\n<p>Bạn có thể dùng <a href=\"https://github.com/marak/Faker.js/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">fakerjs</a> để chèn thêm dữ liệu một cách ngẫu nhiên.</p>\n<p>Để có dữ liệu <strong>init</strong> cho fake server, chúng ta sẽ sử dụng <code class=\"language-text\">seeds()</code></p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword module\">export</span> <span class=\"token keyword module\">default</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> environment <span class=\"token operator\">=</span> <span class=\"token string\">'development'</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">seeds</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">server</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        server<span class=\"token punctuation\">.</span><span class=\"token property-access\">db</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">loadData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n            tasks<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n                <span class=\"token punctuation\">{</span> id<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> text<span class=\"token operator\">:</span> <span class=\"token string\">\"Feed the cat\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">{</span> id<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> text<span class=\"token operator\">:</span> <span class=\"token string\">\"Wash the dishes\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">routes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api/tasks'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">schema</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword control-flow\">return</span> schema<span class=\"token punctuation\">.</span><span class=\"token property-access\">db</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">tasks</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api/tasks'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">schema<span class=\"token punctuation\">,</span> request</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token comment\">// nhận data được gửi từ post</span>\n          <span class=\"token keyword\">const</span> task <span class=\"token operator\">=</span> <span class=\"token known-class-name class-name\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">parse</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">.</span><span class=\"token property-access\">requestBody</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">data</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword control-flow\">return</span> schema<span class=\"token punctuation\">.</span><span class=\"token property-access\">db</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">tasks</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">insert</span><span class=\"token punctuation\">(</span>task<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token spread operator\">...</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h2 id=\"thêm-route-động\"><a href=\"#th%C3%AAm-route-%C4%91%E1%BB%99ng\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Thêm route động</h2>\n<p>Route động là gì, ví dụ như bạn dùng phương thức delete hay update bằng một route như thế này</p>\n<pre class=\"language-text\"><code class=\"language-text\">DELETE: /api/tasks/8lVzv5lv2n6Mu912x19UdKDC08\nPUT: /api/tasks/8lVzv5lv2n6Mu912x19UdKDC08</code></pre>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// api/mock/index.js</span>\n<span class=\"token spread operator\">...</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">delete</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api/tasks/:id'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">schema<span class=\"token punctuation\">,</span> request</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  \t<span class=\"token comment\">// id từ url</span>\n    <span class=\"token keyword\">const</span> id <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span><span class=\"token property-access\">params</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">id</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword control-flow\">return</span> schema<span class=\"token punctuation\">.</span><span class=\"token property-access\">db</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">tasks</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">remove</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token spread operator\">...</span></code></pre>\n<p>Nếu bạn để ý, tất cả đều bắt đầu bằng <code class=\"language-text\">api</code>, <code class=\"language-text\">namespace</code> sinh ra là để phục vụ đối tượng lười biếng như chúng ta</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">routes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// bọn dưới sẽ bắt đầu bằng /api hết</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">namespace</span> <span class=\"token operator\">=</span> <span class=\"token string\">'/api'</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/tasks'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span> <span class=\"token spread operator\">...</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">delete</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/tasks/:id'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span> <span class=\"token spread operator\">...</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/tasks'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span> <span class=\"token spread operator\">...</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h2 id=\"giả-lập-những-route-chỉ-định\"><a href=\"#gi%E1%BA%A3-l%E1%BA%ADp-nh%E1%BB%AFng-route-ch%E1%BB%89-%C4%91%E1%BB%8Bnh\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Giả lập những route chỉ định</h2>\n<p>Nếu như bạn đã có một số API, một số BE đang implement, tất nhiên chúng ta chỉ mock những API chưa làm, còn cái nào làm rồi thì cứ xài cái thật luôn</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">routes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// chỉ giả lập GET /task</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/task'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span> <span class=\"token spread operator\">...</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\">// còn lại dùng hàng thật</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">passthrough</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Nhưng đa phần API thật sẽ nằm đâu đó chứ không phải <code class=\"language-text\">localhost:3000</code>, thêm đoạn sau</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">routes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// api thực nằm ở đây</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">urlPrefix</span> <span class=\"token operator\">=</span> <span class=\"token string\">'https://devenv.ourapp.example'</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\">// chỉ giả lập GET /task</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/task'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span> <span class=\"token spread operator\">...</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\">// còn lại dùng hàng thật</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">passthrough</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Lúc này tất cả API đều sẽ gọi lên <code class=\"language-text\">https://devenv.ourapp.example</code>, duy chỉ gặp thằng <code class=\"language-text\"></code><a href=\"https://devenv.ourapp.example/task%60\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://devenv.ourapp.example/task`</a>, mirage sẽ <strong>intercept</strong> và đưa hàng giả vào.</p>\n<h2 id=\"kết\"><a href=\"#k%E1%BA%BFt\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Kết</h2>\n<p>Sử dụng cũng được vài cái thư viện làm mock API, MirageJS là thằng mình thấy ưng nhất, không quá phức tạp, giải quyết được những vấn đề rất căn cơ của FE.</p>\n<p>Mirage JS còn khá nhiều chiêu trò thú vị chờ bạn khám phá trên <a href=\"https://miragejs.com/docs/getting-started/introduction/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">tài liệu chính thức của nó</a>, nếu thấy hay đừng quên nhất <strong>like</strong> và contribute cho dự án trên <a href=\"https://github.com/miragejs/miragejs\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Github</a></p>\n<p><strong>Happy coding</strong> 🎉🙌</p>\n","cover_image":""}},{"node":{"id":"a5f51b09727276f0405b8707bd2eb12c","title":"3 cách xóa phần tử bị duplicate trong mảng","path":"/2020-10-22-import-lodash-sao-cho-dung/","date":"2020-10-22","timeToRead":1,"desc":"Nâng cao kỹ năng xử lý mảng và object không bao giờ là dư thừa","content":"<p>Nếu phần tử trong mảng chỉ là kiểu <em>primitive</em> thì rất đơn giản nếu muốn xóa tất cả phần tự bị trùng</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> values <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'c'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">const</span> uniqueValues <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token spread operator\">...</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Set</span><span class=\"token punctuation\">(</span>values<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Còn nếu phần tử trong mảng là <code class=\"language-text\">object</code> thì ta làm sao?</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> members <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    first<span class=\"token operator\">:</span> <span class=\"token string\">'Jane'</span><span class=\"token punctuation\">,</span>\n    last<span class=\"token operator\">:</span> <span class=\"token string\">'Bond'</span><span class=\"token punctuation\">,</span>\n    id<span class=\"token operator\">:</span> <span class=\"token string\">'10yejma'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    first<span class=\"token operator\">:</span> <span class=\"token string\">'Lars'</span><span class=\"token punctuation\">,</span>\n    last<span class=\"token operator\">:</span> <span class=\"token string\">'Croft'</span><span class=\"token punctuation\">,</span>\n    id<span class=\"token operator\">:</span> <span class=\"token string\">'1hhs0k2'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    first<span class=\"token operator\">:</span> <span class=\"token string\">'Jane'</span><span class=\"token punctuation\">,</span>\n    last<span class=\"token operator\">:</span> <span class=\"token string\">'Bond'</span><span class=\"token punctuation\">,</span>\n    id<span class=\"token operator\">:</span> <span class=\"token string\">'1y15hhu'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre>\n<h2 id=\"cách-1-tạo-mảng-mới-ko-chứa-phần-tử-bị-trùng\"><a href=\"#c%C3%A1ch-1-t%E1%BA%A1o-m%E1%BA%A3ng-m%E1%BB%9Bi-ko-ch%E1%BB%A9a-ph%E1%BA%A7n-t%E1%BB%AD-b%E1%BB%8B-tr%C3%B9ng\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Cách 1: tạo mảng mới ko chứa phần tử bị trùng</h2>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">containsMember</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">memberArray<span class=\"token punctuation\">,</span> member</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">return</span> memberArray<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">find</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">m</span> <span class=\"token arrow operator\">=></span> m<span class=\"token punctuation\">.</span><span class=\"token property-access\">first</span> <span class=\"token operator\">===</span> member<span class=\"token punctuation\">.</span><span class=\"token property-access\">first</span> <span class=\"token operator\">&amp;&amp;</span> m<span class=\"token punctuation\">.</span><span class=\"token property-access\">last</span> <span class=\"token operator\">===</span> member<span class=\"token punctuation\">.</span><span class=\"token property-access\">last</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> uniqueValues <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword control-flow\">for</span>\t<span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> m <span class=\"token keyword\">of</span> members<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">containsMember</span><span class=\"token punctuation\">(</span>uniqueValues<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        uniqueValues<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">push</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h2 id=\"cách-2-dùng-filter\"><a href=\"#c%C3%A1ch-2-d%C3%B9ng-filter\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Cách 2: dùng <code class=\"language-text\">filter()</code></h2>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">getIndexOfMember</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">memberArray<span class=\"token punctuation\">,</span> member</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">return</span> memberArray<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">findIndex</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">m</span> <span class=\"token arrow operator\">=></span> m<span class=\"token punctuation\">.</span><span class=\"token property-access\">first</span> <span class=\"token operator\">===</span> member<span class=\"token punctuation\">.</span><span class=\"token property-access\">first</span> <span class=\"token operator\">&amp;&amp;</span> m<span class=\"token punctuation\">.</span><span class=\"token property-access\">last</span> <span class=\"token operator\">===</span> member<span class=\"token punctuation\">.</span><span class=\"token property-access\">last</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> uniqueValues <span class=\"token operator\">=</span> members<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">filter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">m<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">,</span> ms</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token function\">getIndexOfMember</span><span class=\"token punctuation\">(</span>ms<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<h2 id=\"cách-3-sử-dụng-map\"><a href=\"#c%C3%A1ch-3-s%E1%BB%AD-d%E1%BB%A5ng-map\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Cách 3: sử dụng Map</h2>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> uniqueKeyToMember <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span>members<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">m</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">[</span>m<span class=\"token punctuation\">.</span><span class=\"token property-access\">first</span><span class=\"token operator\">+</span><span class=\"token string\">'\\t'</span><span class=\"token operator\">+</span>m<span class=\"token punctuation\">.</span><span class=\"token property-access\">last</span><span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> uniqueMembers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token spread operator\">...</span>uniqueKeyToMember<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> </code></pre>\n<p><a href=\"https://2ality.com/2020/07/eliminating-duplicate-objects.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Eliminating duplicate objects: three approaches</a></p>\n","cover_image":""}}]}}},"context":{}}