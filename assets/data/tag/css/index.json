{"hash":"a024fab2966897089cf72f0b270a7db411a685ed","data":{"tag":{"title":"css","belongsTo":{"edges":[{"node":{"id":"d8a89e9d260680d5e60955d1a8a2b306","title":"CSS Clamp giải thích và ứng dụng","path":"/css-clamp-giai-thich-va-ung-dung/","date":"2021-04-16","timeToRead":1,"desc":"hàm clamp() của CSS rất hữu dụng khi xử lý các vấn đề liên quan đến responsive, là một tính năng mới hay ho bạn cũng nên biết đế áp dụng","content":"<h2 id=\"diễn-giải\"><a href=\"#di%E1%BB%85n-gi%E1%BA%A3i\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Diễn giải</h2>\n<blockquote>\n<p>Lưu ý: hàm clamp không chạy trên IE</p>\n</blockquote>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token function\">clamp</span><span class=\"token punctuation\">(</span>MIN<span class=\"token punctuation\">,</span> PREFER<span class=\"token punctuation\">,</span> MAX<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Trong đó:</p>\n<ul>\n<li><strong>MIN</strong>: là giá trị chặn dưới, nếu giá trị <strong>PREFER &#x3C; MIN => return giá trị MIN</strong></li>\n<li><strong>PREFER</strong>: là giá trị sẽ được return nếu đang nằm trong khoản giữa MIN và MAX</li>\n<li><strong>MAX</strong>: là giá trị chặn trên, nếu giá trị <strong>PREFER > MAX => return giá trị MAX</strong></li>\n</ul>\n<h2 id=\"ứng-dụng\"><a href=\"#%E1%BB%A9ng-d%E1%BB%A5ng\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Ứng dụng</h2>\n<p>Sử dụng cho giá trị <code class=\"language-text\">font-size</code></p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">body</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> <span class=\"token function\">clamp</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.1</span><span class=\"token unit\">rem</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token unit\">vw</span> <span class=\"token operator\">+</span> <span class=\"token number\">1.1</span><span class=\"token unit\">rem</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.5</span><span class=\"token unit\">rem</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Diễn giải đoạn code chỉnh <code class=\"language-text\">font-size</code> không thể rắc rối hơn ở trên: \"tính dùm tôi cái font size cho nó tự động to nhỏ theo màn hình, với công thức tính là 1% của viewport + 1.1rem, kết quả không được phép nhỏ hơn 1.1rem và lớn hơn 2.5rem\"</p>\n<p>Kết quả nhận được</p>\n<p><img src=\"https://css-tricks.com/wp-content/uploads/2020/08/clamp.gif\" alt=\"CSS Clamp giải thích và ứng dụng\"></p>\n<p>Chúng ta vừa cho phép giá trị font-size linh động theo kích thước màn hình, nhưng vẫn đảm bảo nó không được quá lớn và quá nhỏ với hai giá trị chặn trên, chặn dưới.</p>\n<p>Sử dụng với thuộc tính <code class=\"language-text\">width</code></p>\n<p>Nếu bạn có đam mê với typography thì thể đọc hết cuốn <a href=\"https://readings.design/PDF/the_elements_of_typographic_style.pdf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">The element of typographic style</a>. Ở đây mình xin trích một đoạn trong cuốn sách này: từ 45 đến 75 ký tự trên một cột là chuẩn không cần chỉnh. Áp dụng lý thuyết này ta có thể viết</p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">div</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> <span class=\"token function\">clamp</span><span class=\"token punctuation\">(</span><span class=\"token number\">45</span><span class=\"token unit\">ch</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token unit\">%</span><span class=\"token punctuation\">,</span> <span class=\"token number\">75</span><span class=\"token unit\">ch</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<blockquote>\n<p><code class=\"language-text\">ch</code> là đơn vị tính độ rộng của một ký tự</p>\n</blockquote>\n<iframe height=\"265\" style=\"width: 100%;\" scrolling=\"no\" title=\"clamp example\" src=\"https://codepen.io/luckyluu/embed/VwPdEOK?height=265&theme-id=light&default-tab=html,result\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href='https://codepen.io/luckyluu/pen/VwPdEOK'>clamp example</a> by Lưu An\n  (<a href='https://codepen.io/luckyluu'>@luckyluu</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n","cover_image":""}},{"node":{"id":"f92db246b489ea2b34cf82e11e30aea6","title":"Làm tính năng Theme trong React?","path":"/lam-tinh-nang-theme-trong-react/","date":"2021-02-21","timeToRead":3,"desc":"Sẽ có nhiều tiếp cận để làm theme cho trang web, mổ xẻ 2 cách phổ biến hiện nay trong React, chọn cách nào cho nó đơn giản nhưng mang lại hiệu quả cao","content":"<p>Để hỗ trợ tính năng <em>Theme</em>, cho phép người dùng lựa chọn kiểu giao diện mà họ thích, trong React, bạn sẽ có thể tiếp cận 1 trong 2 cách dùng CSS-in-JS hoặc dùng CSS variable (tất nhiên không có hỗ trợ với IE)</p>\n<p>Nếu dùng CSS-in-JS bạn sẽ có thể làm được nhiều <em>thứ</em> hơn, bạn có một bộ công cụ đủ các <strong>đạo cụ</strong> để mua mai trong JS. Bài viết này sẽ chỉ ra tại sao bạn nên dùng CSS variable cho nhu cầu làm theme</p>\n<p>Nếu dùng CSS-in-JS, trong React bạn sẽ tổ chức một <code class=\"language-text\">ThemeProvider</code> bằng React Context, dùng hook <code class=\"language-text\">useTheme</code>  để lấy giá trị trong <code class=\"language-text\">ThemeProvider</code>, sẽ như thế này</p>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token operator\">*</span> <span class=\"token keyword module\">as</span> <span class=\"token maybe-class-name\">React</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'react'</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\">styled</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'@emotion/styled'</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span><span class=\"token maybe-class-name\">ThemeProvider</span><span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'emotion-theming'</span>\n\n<span class=\"token keyword\">const</span> themes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  light<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    colors<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      primary<span class=\"token operator\">:</span> <span class=\"token string\">'deeppink'</span><span class=\"token punctuation\">,</span>\n      background<span class=\"token operator\">:</span> <span class=\"token string\">'white'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  dark<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    colors<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      primary<span class=\"token operator\">:</span> <span class=\"token string\">'lightpink'</span><span class=\"token punctuation\">,</span>\n      background<span class=\"token operator\">:</span> <span class=\"token string\">'black'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token maybe-class-name\">PrimaryText</span> <span class=\"token operator\">=</span> styled<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">div</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>theme<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  padding<span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\n  color<span class=\"token operator\">:</span> theme<span class=\"token punctuation\">.</span><span class=\"token property-access\">colors</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">primary</span><span class=\"token punctuation\">,</span>\n  backgroundColor<span class=\"token operator\">:</span> theme<span class=\"token punctuation\">.</span><span class=\"token property-access\">colors</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">background</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\"><span class=\"token maybe-class-name\">ThemeToggler</span></span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>theme<span class=\"token punctuation\">,</span> onClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> nextTheme <span class=\"token operator\">=</span> theme <span class=\"token operator\">===</span> <span class=\"token string\">'light'</span> <span class=\"token operator\">?</span> <span class=\"token string\">'dark'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'light'</span>\n  <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token function\">onClick</span><span class=\"token punctuation\">(</span>nextTheme<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      Change to </span><span class=\"token punctuation\">{</span>nextTheme<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> mode\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\"><span class=\"token maybe-class-name\">App</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>theme<span class=\"token punctuation\">,</span> setTheme<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">'light'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ThemeProvider</span></span> <span class=\"token attr-name\">theme</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>themes<span class=\"token punctuation\">[</span>theme<span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">PrimaryText</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">This text is the primary color</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">PrimaryText</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ThemeToggler</span></span>\n        <span class=\"token attr-name\">theme</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>theme<span class=\"token punctuation\">}</span></span>\n        <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">nextTheme</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token function\">setTheme</span><span class=\"token punctuation\">(</span>nextTheme<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span>\n      <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">ThemeProvider</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword module\">export</span> <span class=\"token keyword module\">default</span> <span class=\"token maybe-class-name\">App</span></code></pre>\n<p>Nếu dùng CSS variable, chúng ta khai bao một bộ các biến cần dùng, rồi chèn thêm <code class=\"language-text\">data-theme</code> cho thẻ <code class=\"language-text\">body</code></p>\n<p>CSS</p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">body<span class=\"token attribute\"><span class=\"token punctuation\">[</span><span class=\"token attr-name\">data-theme</span><span class=\"token operator\">=</span><span class=\"token attr-value\">'light'</span><span class=\"token punctuation\">]</span></span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token variable\">--colors-primary</span><span class=\"token punctuation\">:</span> <span class=\"token color\">deeppink</span><span class=\"token punctuation\">;</span>\n  <span class=\"token variable\">--colors-background</span><span class=\"token punctuation\">:</span> <span class=\"token color\">white</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">body<span class=\"token attribute\"><span class=\"token punctuation\">[</span><span class=\"token attr-name\">data-theme</span><span class=\"token operator\">=</span><span class=\"token attr-value\">'dark'</span><span class=\"token punctuation\">]</span></span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token variable\">--colors-primary</span><span class=\"token punctuation\">:</span> <span class=\"token color\">lightpink</span><span class=\"token punctuation\">;</span>\n  <span class=\"token variable\">--colors-background</span><span class=\"token punctuation\">:</span> <span class=\"token color\">black</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Phần implement của React component lúc này sửa lại</p>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token operator\">*</span> <span class=\"token keyword module\">as</span> <span class=\"token maybe-class-name\">React</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'react'</span>\n<span class=\"token keyword module\">import</span> <span class=\"token string\">'./css-vars.css'</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\">styled</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'@emotion/styled'</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token maybe-class-name\">PrimaryText</span> <span class=\"token operator\">=</span> styled<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">div</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  padding<span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\n  color<span class=\"token operator\">:</span> <span class=\"token string\">'var(--colors-primary)'</span><span class=\"token punctuation\">,</span>\n  backgroundColor<span class=\"token operator\">:</span> <span class=\"token string\">'var(--colors-background)'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\"><span class=\"token maybe-class-name\">ThemeToggler</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>theme<span class=\"token punctuation\">,</span> setTheme<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">'light'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> nextTheme <span class=\"token operator\">=</span> theme <span class=\"token operator\">===</span> <span class=\"token string\">'light'</span> <span class=\"token operator\">?</span> <span class=\"token string\">'dark'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'light'</span>\n  <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">body</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">dataset</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">theme</span> <span class=\"token operator\">=</span> theme\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>theme<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token function\">setTheme</span><span class=\"token punctuation\">(</span>nextTheme<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      Change to </span><span class=\"token punctuation\">{</span>nextTheme<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> mode\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\"><span class=\"token maybe-class-name\">App</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">PrimaryText</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">This text is the primary color</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">PrimaryText</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ThemeToggler</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword module\">export</span> <span class=\"token keyword module\">default</span> <span class=\"token maybe-class-name\">App</span></code></pre>\n<p>Thẳng thắn mà nói, cả 2 cách làm này đều cho kết quả như nhau về mặt trãi nghiệm sử dụng, dùng CSS-in-JS sẽ có chút cảm giác hơi quá đà kỹ thuật, từ chuyên ngành là over-engineering.</p>\n<iframe src=\"https://codesandbox.io/embed/css-variables-vs-themeprovider-df90h?fontsize=14&hidenavigation=1&theme=dark\"\n     style=\"width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;\"\n     title=\"CSS Variables vs ThemeProvider\"\n     allow=\"accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking\"\n     sandbox=\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\"\n   ></iframe>\n<p>Về hiệu năng thì sao?</p>\n<p>ThemeProvider</p>\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/b903d3908c2f09f6139573d3da3ce48d0e831885/2cc29/static/e25d5f73f3fffe0fed8586eea95892df/e7448/theme-provider.png\" alt=\"Profiling session showing everything rendered\"></p>\n<p>CSS variable</p>\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/e737a004afce33b75c4c0b07e42c58a3ff1aaeec/21d3b/static/47d22cd6f96a31f50329ff658f18af39/e7448/css-vars.png\" alt=\"Profiling session showing only one component rendered\"></p>\n<p>Cũng không nhất thiết phải nhìn vào con số mili giây phải tốn cho việc render, vì simple này khá là bé. Bạn cứ hình dùng nếu một cây React Component với hàng trăm component con lồng ghép nhau, khi thay đổi giá trị trong ThemeProvider, tất cả những component đều bị render lại thì sẽ như thế nào? Việc dùng CSS variable sẽ mang lại hiệu quả hơn nhiều vì trình duyệt không phải làm quá nhiều thứ như cách 1.</p>\n<p>Có một lý do mà mình cho là hơi ngụy biện khi khăng khăng đòi dùng JS-in-CSS theo mình đoán là các bạn thật sự chưa đủ tự tin cũng như \"trình\" để viết CSS hiện đại, bạn chuyên tâm nâng tầm JS của mình mà quên mất việc nâng tầm CSS, vón đã phát triển rất xa từ cái thời bạn dùng <code class=\"language-text\">float</code></p>\n<p><a href=\"https://epicreact.dev/css-variables/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Use CSS Variables instead of React Context</a></p>\n","cover_image":""}},{"node":{"id":"ea2beb2df9bee4098b4ee97077eaa64d","title":"Với CSS, chuyện gì xảy ra khi có 2 giá trị margin nằm liền kề nhau?","path":"/voi-css-chuyen-gi-xay-ra-khi-co-2-gia-tri-margin-nam-lien-ke-nhau/","date":"2020-12-14","timeToRead":2,"desc":"Được biết với tên margin collapse, thường gây khó hiểu nếu bạn không nắm rule được áp dụng sẽ được chỉ ra trong bài này","content":"<p>Ví dụ với 2 thẻ <code class=\"language-text\">&lt;p /&gt;</code> nằm liền kề nhau như thế này:</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n  <span class=\"token selector\">p</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">margin-top</span><span class=\"token punctuation\">:</span> <span class=\"token number\">24</span><span class=\"token unit\">px</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">margin-bottom</span><span class=\"token punctuation\">:</span> <span class=\"token number\">24</span><span class=\"token unit\">px</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>Paragraph One<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>Paragraph Two<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>Thay vì <code class=\"language-text\">48px</code>, thực tế giữa hai thẻ <code class=\"language-text\">&lt;p /&gt;</code> chỉ có khoảng cách là <code class=\"language-text\">24px</code></p>\n<p>Không rõ vì lý do <em>cá nhân</em> gì, mà CSS chỉ áp dụng cái luật <em>margin collapse</em> này cho giá trị <code class=\"language-text\">top</code> và <code class=\"language-text\">bottom</code>, nếu giá trị <em>margin</em> là <code class=\"language-text\">left</code> hoặc <code class=\"language-text\">right</code>, thì nó lại bình thường</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n  <span class=\"token selector\">p</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> inline-block<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">margin-left</span><span class=\"token punctuation\">:</span> <span class=\"token number\">24</span><span class=\"token unit\">px</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">margin-right</span><span class=\"token punctuation\">:</span> <span class=\"token number\">24</span><span class=\"token unit\">px</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>P1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>P2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></code></pre>\n<p><em>Khoảng cách giữa (trái phải) là 48px</em></p>\n<p>Chưa đủ <em>dị</em>, CSS lại còn có quy định <strong>chỉ khi 2 element nằm liền kề với nhau mới hiệu nghiệm</strong>, nếu có 1 element chèn ở giữa thì lại bình thường 48px</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n  <span class=\"token selector\">p</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">margin-top</span><span class=\"token punctuation\">:</span> <span class=\"token number\">24</span><span class=\"token unit\">px</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">margin-bottom</span><span class=\"token punctuation\">:</span> <span class=\"token number\">24</span><span class=\"token unit\">px</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>Paragraph One<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>Paragraph Two<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>Và sẽ ra sao nếu 2 element có giá trị <strong>margin không bằng nhau</strong>. <strong>winner take all</strong> sẽ được áp dụng, giá trị nào lớn hơn thì chỉ lấy giá trị đó.</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n    <span class=\"token selector\">p</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">margin-bottom</span><span class=\"token punctuation\">:</span> <span class=\"token number\">48</span><span class=\"token unit\">px</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token selector\">div</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">margin-top</span><span class=\"token punctuation\">:</span> <span class=\"token number\">90</span><span class=\"token unit\">px</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>Paragraph One<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>Paragraph Two<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n<p><em>khoảng cách trên dưới sẽ là 90px</em></p>\n<p><em>margin collapse</em> không chỉ xuất hiện khi có giá trị <code class=\"language-text\">top</code> và <code class=\"language-text\">bottom</code>, nó còn xảy ra khi có 2 giá trị <code class=\"language-text\">top</code> hoặc <code class=\"language-text\">bottom</code></p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n  <span class=\"token selector\"><span class=\"token class\">.parent</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">margin-top</span><span class=\"token punctuation\">:</span> <span class=\"token number\">72</span><span class=\"token unit\">px</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token selector\"><span class=\"token class\">.child</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">margin-top</span><span class=\"token punctuation\">:</span> <span class=\"token number\">24</span><span class=\"token unit\">px</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>parent<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>child<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Paragraph One<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n<p><em>Giá trị margin sẽ chỉ lấy top = 72px</em></p>\n<p>Lời khuyên cuối cùng, nếu thực sự hiểu và nhớ mình đang viết gì thì dùng margin, còn không thì dùng <code class=\"language-text\">padding</code> cho an toàn.</p>\n","cover_image":""}},{"node":{"id":"ac91020c4cb3f555dd43eb61a87000b8","title":"Một vài điểm nên nhớ khi viết CSS","path":"/mot-vai-diem-nen-nho-khi-viet-css/","date":"2020-10-25","timeToRead":1,"desc":"Nếu bạn là người viết CSS có tâm, bạn cần đọc bài này để tránh những lỗi edge case khi viết CSS","content":"<h2 id=\"khoảng-cách-giữa-title-và-icon\"><a href=\"#kho%E1%BA%A3ng-c%C3%A1ch-gi%E1%BB%AFa-title-v%C3%A0-icon\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Khoảng cách giữa title và icon</h2>\n<p><img src=\"https://ishadeed.com/assets/just-in-case/just-in-case-1.png\" alt=\"img\"></p>\n<p>Phần chữ ở <em>title</em> có thể sẽ rất dài, về để tránh nó bị dính sát rạt với cái icon, thêm <code class=\"language-text\">margin-right: 1rem</code></p>\n<h2 id=\"2-button-nằm-kề-nhau\"><a href=\"#2-button-n%E1%BA%B1m-k%E1%BB%81-nhau\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>2 button nằm kề nhau</h2>\n<p>Nếu có 2 button nằm kế nhau, 99,9999% chúng ta muốn giữa các button có khoảng trắng, dùng css selector <code class=\"language-text\">adjacent-sibling</code></p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\"><span class=\"token class\">.button</span> <span class=\"token combinator\">+</span> <span class=\"token class\">.button</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">margin-left</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token unit\">rem</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h2 id=\"tag-và-category\"><a href=\"#tag-v%C3%A0-category\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Tag và Category</h2>\n<p><img src=\"https://ishadeed.com/assets/just-in-case/just-in-case-3.png\" alt=\"img\"></p>\n<p>Trong trường hợp mà tag name và category name quá dài, nếu để nó dàn trải như trong hình, sẽ tốt hơn nếu cho nó rớt dòng</p>\n<p><img src=\"https://ishadeed.com/assets/just-in-case/just-in-case-3-1.png\" alt=\"img\"></p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\"><span class=\"token class\">.tag</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">6.25</span><span class=\"token unit\">rem</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">text-overflow</span><span class=\"token punctuation\">:</span> ellipsis<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">overflow</span><span class=\"token punctuation\">:</span> hidden<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">white-space</span><span class=\"token punctuation\">:</span> nowrap<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h2 id=\"không-load-được-image\"><a href=\"#kh%C3%B4ng-load-%C4%91%C6%B0%E1%BB%A3c-image\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Không load được image</h2>\n<p>Nếu dùng thẻ <code class=\"language-text\">&lt;img /&gt;</code> mà nó ko load được hình thì sao, 1 cách cũng khá đơn giản là set <code class=\"language-text\">background-color</code></p>\n<p><img src=\"https://ishadeed.com/assets/just-in-case/just-in-case-5.png\" alt=\"img\"></p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">img</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> <span class=\"token hexcode color\">#525252</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h2 id=\"hình-avatar\"><a href=\"#h%C3%ACnh-avatar\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Hình Avatar</h2>\n<p>Đừng quên đặt <code class=\"language-text\">object-fit: cover</code> để có một hình tròn trịa đẹp đẽ như bên dưới, không bị <em>stretch</em> hay <em>compressed</em></p>\n<p><img src=\"https://ishadeed.com/assets/just-in-case/just-in-case-6.png\" alt=\"img\"></p>\n<p><a href=\"https://ishadeed.com/article/the-just-in-case-mindset-css/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">The Just in Case Mindset in CSS</a></p>\n","cover_image":""}},{"node":{"id":"67b6f325941d1f641ba6144fc210f796","title":"3 điều bạn có thể không biết về biến trong CSS","path":"/3-dieu-ban-co-the-khong-biet-ve-bien-trong-css/","date":"2020-10-07","timeToRead":2,"desc":"Bài này chúng ta sẽ đi qua ba thứ chúng ta có thể làm được với biến trong css, có thể bạn chưa biết","content":"<h2 id=\"chuyện-gì-xảy-ra-nếu-chúng-ta-dùng-var-với-một-biến-undefined\"><a href=\"#chuy%E1%BB%87n-g%C3%AC-x%E1%BA%A3y-ra-n%E1%BA%BFu-ch%C3%BAng-ta-d%C3%B9ng-var-v%E1%BB%9Bi-m%E1%BB%99t-bi%E1%BA%BFn-undefined\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Chuyện gì xảy ra nếu chúng ta dùng <code class=\"language-text\">var()</code> với một biến undefined</h2>\n<p>Trước hết phải nói CSS và HTML là ngôn ngữ không quá strictly, một vài lỗi nhỏ không làm làm chết nguyên trang, nếu dùng <code class=\"language-text\">var()</code> với một biến không tồn tại, không gây ra ảnh hưởng parsing.</p>\n<p>Sẽ có nhiều lý do cho việc xuất biến undefined trong <code class=\"language-text\">var</code>, có thể là</p>\n<ul>\n<li>Gõ nhầm tên biến</li>\n<li>Tưởng là có nhưng chưa define biến này</li>\n<li>Biến đó ko tồn tại trên trang đang xem</li>\n</ul>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">ol li</span> <span class=\"token punctuation\">{</span> <span class=\"token variable\">--foo</span><span class=\"token punctuation\">:</span> <span class=\"token color\">red</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token selector\">ul li</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span><span class=\"token variable\">--foo</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span></code></pre>\n<p>Bởi, lời khuyên là luôn đặt biết ở node trên cùng như <code class=\"language-text\">:root</code> hay <code class=\"language-text\">html</code>, như vậy biến có thể truy xuất ở bất cứ đâu trong DOM.</p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\"><span class=\"token pseudo-class\">:root</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">--main-color</span><span class=\"token punctuation\">:</span> <span class=\"token hexcode color\">#f06</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\"><span class=\"token class\">.my-lovely-component</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token unit\">px</span> solid <span class=\"token function\">var</span><span class=\"token punctuation\">(</span><span class=\"token variable\">--main-color</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Vậy nếu biến đó <code class=\"language-text\">undefined</code> thì sao? Thứ tự xử lý sẽ là</p>\n<ol>\n<li>Nếu property đó ko <em>inheritable</em> (ví dụ như <code class=\"language-text\">border</code>) nó được đưa về <code class=\"language-text\">initial</code></li>\n<li>Nếu là property kế thừa, như <code class=\"language-text\">color</code>, thì <code class=\"language-text\">inherited</code> giá trị từ thằng cha, nếu không có cái nào hết, thì sẽ dùng <code class=\"language-text\">initial</code></li>\n</ol>\n<p>Giá trị initial của <code class=\"language-text\">border</code> sẽ là <code class=\"language-text\">medium none currentColor</code>, cái này siêng thì kiểm tra trên <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/border#Formal_definition\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">MDN</a></p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\"><span class=\"token pseudo-class\">:root</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">--main-color</span><span class=\"token punctuation\">:</span> <span class=\"token hexcode color\">#f06</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">body</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token color\">gold</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\"><span class=\"token class\">.my-lovely-component</span></span> <span class=\"token punctuation\">{</span>\n    // nó sẽ dùng giá trị `<span class=\"token color\">gold</span>` kế thừa từ body\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span><span class=\"token variable\">--secondary-color</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h2 id=\"fallback-value-khi-giá-trị-biến-không-tìm-thấy\"><a href=\"#fallback-value-khi-gi%C3%A1-tr%E1%BB%8B-bi%E1%BA%BFn-kh%C3%B4ng-t%C3%ACm-th%E1%BA%A5y\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Fallback value khi giá trị biến không tìm thấy</h2>\n<p>Đây cũng ít ai để ý mà dùng, <code class=\"language-text\">var()</code> có thể truyền thêm tham số thứ 2, là giá trị fallback khi không tìm thấy biến</p>\n<pre class=\"language-css\"><code class=\"language-css\">// dùng <span class=\"token color\">red</span> nếu không thấy <span class=\"token variable\">--theme-color</span>\n<span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span><span class=\"token variable\">--theme-color</span><span class=\"token punctuation\">,</span> <span class=\"token color\">red</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Khá clear đúng không, nhưng bạn cũng có thể viết như thế này cho nó <em>rắc rối</em> đồng đội chơi</p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span><span class=\"token variable\">--foo</span><span class=\"token punctuation\">,</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span><span class=\"token variable\">--bar</span><span class=\"token punctuation\">,</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span><span class=\"token variable\">--baz</span><span class=\"token punctuation\">,</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span><span class=\"token variable\">--are</span><span class=\"token punctuation\">,</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span><span class=\"token variable\">--you</span><span class=\"token punctuation\">,</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span><span class=\"token variable\">--crazy</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Cú pháp trên hoàn toàn hợp lệ, nhưng không nên làm khó nhau như vậy. Ngoài ra đây cũng là một cách viết hợp lệ </p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token variable\">--my-variable</span><span class=\"token punctuation\">:</span> one<span class=\"token punctuation\">,</span> two<span class=\"token punctuation\">,</span> three<span class=\"token punctuation\">;</span>\n<span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span><span class=\"token variable\">--foo</span><span class=\"token punctuation\">,</span> one<span class=\"token punctuation\">,</span> two<span class=\"token punctuation\">,</span> three<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Hãy nhớ, làm mọi thứ đơn giản nhất thôi các bạn, đừng nghĩ mình viết như vậy sẽ thông minh hơn người khác.</p>\n<h2 id=\"devtool-của-trình-duyệt-giúp-được-gì\"><a href=\"#devtool-c%E1%BB%A7a-tr%C3%ACnh-duy%E1%BB%87t-gi%C3%BAp-%C4%91%C6%B0%E1%BB%A3c-g%C3%AC\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>DevTool của trình duyệt giúp được gì</h2>\n<p>Rắc rối là như vậy, may mà chúng ta có DevTool cứu giúp</p>\n<p><strong>Tự động điền tên biến</strong></p>\n<p>Khi cần quick change trên trình duyệt, sau khi gõ <code class=\"language-text\">var(</code>, nó tự động gợi ý các biến hợp lệ</p>\n<p><img src=\"https://patrickbrosset.com/assets/firefox-css-var-autocomplete.png\" alt=\"Screenshot of Firefox&#x27;s css var autocomplete\"></p>\n<p>Firefox, Edge, Chrome đều có</p>\n<p><strong>Biết giá trị nào đang được sử dụng</strong></p>\n<p>Bên trong tab <strong>Computed</strong>, giá trị cuối cùng đang sử dụng sau cả tá kế thừa sẽ được hiện ra</p>\n<p><img src=\"https://patrickbrosset.com/assets/edge-computed-css-var.png\" alt=\"Screenshot of the tooltip that appears in Edge when you hover over a var() function\"></p>\n<p>Hy vọng trong tương lai DevTool sẽ có nhiều hỗ trợ hơn như xác định biến <code class=\"language-text\">undefined</code></p>\n<p><a href=\"https://patrickbrosset.com/articles/2020-09-21-3-things-about-css-variables-you-might-not-know/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">3 things about CSS variables you might not know</a></p>\n","cover_image":""}},{"node":{"id":"6e12ee448b407c69e13739fd004305be","title":"Hướng dẫn dùng biến trong CSS để làm dark/light mode","path":"/huong-dan-dung-bien-trong-css-de-lam-dark-light-mode/","date":"2020-09-28","timeToRead":2,"desc":"Nếu bạn cũng như mình, mặc kệ những đứa xài IE11, mình chỉ hỗ  trợ cho đối tượng người sử dụng là những người trẻ thông minh, xài Edge, xài Chrome, xài Firefox, đọc ngay bài viết này mình chỉ cách làm.","content":"<p>Cách đây mười năm, nếu bạn hỏi mình có thể đặt biến trong CSS thì câu trả lời sẽ là KHÔNG, bạn cần viết bằng các ngôn ngữ như SCSS, LESS để có thể xài biến.</p>\n<blockquote>\n<p>Còn trong năm 2020, thì câu trả lời sẽ là CÓ.</p>\n</blockquote>\n<p>Tại sao chúng ta lại muốn đặt biến màu sắc kích thước? Để khi chúng ta muốn thay đổi bộ mặt một website từ xanh lá chuối sang đỏ rực lửa, chỉ cần \"búng tay\" là có liền.</p>\n<p>Ví dụ chúng ta theo trào lưu \"light và dark theme\" cho website, user có thể chọn kiểu sáng-sạch-sẽ hay đen-đuông-đuốc</p>\n<p><img src=\"https://storage.googleapis.com/spec-host-backup/mio-design%2Fassets%2F11xwGmImm24QEBIRv6a0NzhW-wTc9rFh6%2Fdarktheme-darktheme-usage-availability-toggle.png\"></p>\n<p>Cú pháp đặt biến trong CSS, bắt đầu bằng dấu <code class=\"language-text\">--</code>, sau đó là tên biến</p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\"><span class=\"token pseudo-class\">:root</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">--my-background-color</span><span class=\"token punctuation\">:</span> <span class=\"token hexcode color\">#fff</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">--heading-1-font-size</span><span class=\"token punctuation\">:</span> <span class=\"token number\">15</span><span class=\"token unit\">em</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">--another-variable</span><span class=\"token punctuation\">:</span> <span class=\"token number\">20</span><span class=\"token unit\">px</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Ví dụ sử dụng những biến đã khai báo</p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">h1</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span><span class=\"token variable\">--my-background-color</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span><span class=\"token variable\">--heading-1-font-size</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    \n<span class=\"token punctuation\">}</span></code></pre>\n<p>Chúng ta đưa tất cả những giá trị cần thay đổi khi switch qua lại giữa 2 mode dark/light vào các biến số bên trong <code class=\"language-text\">body</code></p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">// Light theme\nbody</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">--bg-color</span><span class=\"token punctuation\">:</span> <span class=\"token hexcode color\">#F3F7F9</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">--bg-content-color</span><span class=\"token punctuation\">:</span> <span class=\"token hexcode color\">#fff</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">--bg-code</span><span class=\"token punctuation\">:</span> <span class=\"token hexcode color\">#fffbf3</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">--body-color</span><span class=\"token punctuation\">:</span> <span class=\"token hexcode color\">#444</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">--title-color</span><span class=\"token punctuation\">:</span> <span class=\"token hexcode color\">#111</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">--link-color</span><span class=\"token punctuation\">:</span> <span class=\"token hexcode color\">#6b17e6</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">--border-color</span><span class=\"token punctuation\">:</span>  <span class=\"token color\"><span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">.1</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">--space</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3.5</span><span class=\"token unit\">rem</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">--content-width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">860</span><span class=\"token unit\">px</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">--header-height</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span><span class=\"token unit\">px</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">--radius</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5</span><span class=\"token unit\">px</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Khi thay đổi giá trị sang dark mode</p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">// Dark theme\nbody<span class=\"token attribute\"><span class=\"token punctuation\">[</span><span class=\"token attr-name\">data-theme</span><span class=\"token operator\">=</span><span class=\"token attr-value\">\"dark\"</span><span class=\"token punctuation\">]</span></span></span> <span class=\"token punctuation\">{</span>\n \t<span class=\"token variable\">--bg-color</span><span class=\"token punctuation\">:</span> <span class=\"token hexcode color\">#0D2538</span><span class=\"token punctuation\">;</span>\n \t<span class=\"token variable\">--bg-content-color</span><span class=\"token punctuation\">:</span> <span class=\"token hexcode color\">#0f2d44</span><span class=\"token punctuation\">;</span>\n \t<span class=\"token variable\">--bg-code</span><span class=\"token punctuation\">:</span> <span class=\"token color\"><span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">.3</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">;</span>\n \t<span class=\"token variable\">--border-color</span><span class=\"token punctuation\">:</span>  <span class=\"token color\"><span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">.1</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n \t<span class=\"token variable\">--body-color</span><span class=\"token punctuation\">:</span> <span class=\"token hexcode color\">#ced8de</span><span class=\"token punctuation\">;</span>\n \t<span class=\"token variable\">--title-color</span><span class=\"token punctuation\">:</span> <span class=\"token hexcode color\">#fff</span><span class=\"token punctuation\">;</span>\n \t<span class=\"token variable\">--link-color</span><span class=\"token punctuation\">:</span> <span class=\"token hexcode color\">#af9cef</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Chúng ta sẽ thêm một số hàm cần thiết vào trong <code class=\"language-text\">window</code></p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Mượn xài đỡ của overreacted.io</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token dom variable\">window</span><span class=\"token punctuation\">.</span><span class=\"token method-variable function-variable method function property-access\">__onThemeChange</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">setTheme</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">newTheme</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token dom variable\">window</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">__theme</span> <span class=\"token operator\">=</span> newTheme<span class=\"token punctuation\">;</span>\n        preferredTheme <span class=\"token operator\">=</span> newTheme<span class=\"token punctuation\">;</span>\n        <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">body</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-theme'</span><span class=\"token punctuation\">,</span> newTheme<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token dom variable\">window</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">__onThemeChange</span><span class=\"token punctuation\">(</span>newTheme<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">var</span> preferredTheme<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword control-flow\">try</span> <span class=\"token punctuation\">{</span>\n        preferredTheme <span class=\"token operator\">=</span> <span class=\"token dom variable\">localStorage</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'theme'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword control-flow\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span>\n\n    <span class=\"token dom variable\">window</span><span class=\"token punctuation\">.</span><span class=\"token method-variable function-variable method function property-access\">__setPreferredTheme</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">newTheme</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">setTheme</span><span class=\"token punctuation\">(</span>newTheme<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword control-flow\">try</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token dom variable\">localStorage</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'theme'</span><span class=\"token punctuation\">,</span> newTheme<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword control-flow\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">var</span> darkQuery <span class=\"token operator\">=</span> <span class=\"token dom variable\">window</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">matchMedia</span><span class=\"token punctuation\">(</span><span class=\"token string\">'(prefers-color-scheme: dark)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    darkQuery<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">addListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token dom variable\">window</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">__setPreferredTheme</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token property-access\">matches</span> <span class=\"token operator\">?</span> <span class=\"token string\">'dark'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'light'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">setTheme</span><span class=\"token punctuation\">(</span>preferredTheme <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>darkQuery<span class=\"token punctuation\">.</span><span class=\"token property-access\">matches</span> <span class=\"token operator\">?</span> <span class=\"token string\">'dark'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'light'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Thao tác cuối cùng là một đoạn JS để trigger việc đổi mode</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Ví dụ hàm xử lý onClickChangeTheme sẽ được gắn vào một button</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">onClickChangeTheme</span><span class=\"token punctuation\">(</span>mode <span class=\"token operator\">=</span> <span class=\"token string\">'dark'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token dom variable\">window</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">__setPreferredTheme</span><span class=\"token punctuation\">(</span>mode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Chúng ta cũng có thể check được theme mà user đã chọn trước đó</p>\n<pre class=\"language-js\"><code class=\"language-js\"> <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span><span class=\"token dom variable\">window</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">__theme</span> <span class=\"token operator\">==</span> <span class=\"token string\">'dark'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// làm gì đó thật vi diệu</span></code></pre>\n<p>Kỹ thuật là như vậy, còn nếu bạn hỏi mình sẽ cập nhập trang blog này cho có 2 mode light/dark theme? Mình sẽ không làm, một số website như trang của mình thì việc switch màu như vậy không đem lại nhiều giá trị cho người đọc.</p>\n<p>Bài viết của vuilaptrinh.com</p>\n","cover_image":""}},{"node":{"id":"4c10a4ea5b43449c00b3d2717f69c6a3","title":"Sử dụng ellipsis text với flexbox","path":"/su-dung-ellipsis-text-voi-flexbox/","date":"2020-07-22","timeToRead":1,"desc":"Câu chuyển cắt chuỗi khi quá dài bằng CSS, trong tình huống sau, cái tên file của bạn quá dài, nhưng bạn không muốn cắt ở cuối chuỗi, mà cắt ở giữa để vẫn thấy được file extension","content":"<p><img src=\"https://leonardofaria.net/wp-content/uploads/2020/07/finder.jpg\" alt=\"Finder\"></p>\n<p>Chuỗi chưa cắt</p>\n<pre class=\"language-text\"><code class=\"language-text\">mobile-phone-screenshot-long-fine-name.png</code></pre>\n<p>Chuỗi sau khi cắt</p>\n<pre class=\"language-text\"><code class=\"language-text\">mobile-phone-sc...g-fine-name.png</code></pre>\n<p><img src=\"https://leonardofaria.net/wp-content/uploads/2020/07/filename.gif\" alt=\"Finder\"></p>\n<p>Cái HTML structure dĩ nhiên là chúng ta tách cái đuôi file ra riêng, độc lập với cái tên</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>filename<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>filename__base<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>this-file-has-a-really-really-really-long-filename.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>filename__extension<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>pdf<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>CSS:</p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\"><span class=\"token class\">.filename</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">min-width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\"><span class=\"token class\">.filename__base</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">text-overflow</span><span class=\"token punctuation\">:</span> ellipsis<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">white-space</span><span class=\"token punctuation\">:</span> nowrap<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">overflow</span><span class=\"token punctuation\">:</span> hidden<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\"><span class=\"token class\">.filename__extension</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">flex-shrink</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Việc ellipsis text sẽ được thực hiện bởi kết hợp ba thuộc tính <code class=\"language-text\">text-overflow</code>, <code class=\"language-text\">white-space</code> và <code class=\"language-text\">overflow</code>. Tuy nhiên chúng ta vẫn phải ước lượng được mối liên hệ giữa phần chứa file name <code class=\"language-text\">.filename__base</code> và element bọc bên ngoài (ở đây là <code class=\"language-text\">.filename</code>)</p>\n<p>Thủ thuật quan trọng ở đây là dùng thuộc tính <strong><code class=\"language-text\">min-width: 0</code></strong>, chúng ta đặt giá trị nhỏ nhất cho phép của <code class=\"language-text\">.filename</code>, nó sẽ <em>ép</em> các thằng con bên dưới co lại nếu nó không có khai báo thuộc tính <code class=\"language-text\">flex-shrink</code></p>\n<p><a href=\"https://codepen.io/leonardofaria/pen/rNxZJad\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Demo các bạn xem ở đây</a></p>\n<p><a href=\"https://leonardofaria.net/2020/07/18/using-flexbox-and-text-ellipsis-together/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Using Flexbox and text ellipsis together</a></p>\n","cover_image":""}},{"node":{"id":"39970bf34d66401b7a43dee75d82df7b","title":"Cảm giác khi bạn viết CSS như thế nào trong năm 2020","path":"/cam-giac-khi-ban-viet-css-nhu-the-nao-trong-nam-2020/","date":"2020-05-22","timeToRead":4,"desc":"Nếu đã có bài làm một website trong năm 2016 nó như thế nào, thì giờ ta sẽ nói xem viết css trong năm 2020 sẽ ra mần sao","content":"<p><strong>Anh technical leader: em biết sao không, anh đã không viết code từ năm 2016 tới giờ, công việc của anh giờ chỉ toàn làm chính trị trong công ty thôi. Giờ em thấy cái dự án này công ty mình mới lấy về, họ muốn thêm phần giao diện cho nó khác đi, sửa responsive lại chút</strong></p>\n<p>Ngon ăn đấy anh, nhận đi.</p>\n<p><strong>Cái này họ làm React, nhưng mà lúc đó không biết đứa nào viết chỉ có một file css duy nhất với hơn 3000 dòng code, nhìn gớm quá, nhiều cái cứ xài tới xài lui mà không chịu kế thừa, cấu trúc thì khỏi nói rồi, gớm luôn, em thấy giờ mình làm sao cho tốt?</strong></p>\n<p>Đúng rồi anh, ai mà làm như thế.</p>\n<p><strong>Trước mắt, chúng ta coi hết lại đống này, xóa bớt mấy cái không cần thiết, sắp xếp lại, comment mọi thứ cho nó rõ ràng</strong></p>\n<p>Làm trên một file CSS đó luôn hả anh?</p>\n<p><strong>Ừ thì mình làm thêm bộ màu mới, thêm mấy tương tác cho nó cool hơn, sửa lỗi media queries, chắc là đủ rồi</strong></p>\n<p>Được mà, mà giờ không ai viết CSS thuần nữa đâu anh.</p>\n<p><strong>Giờ mình có những lựa chọn khác nào vậy em?</strong></p>\n<p>Giờ mình có nhiều framework, với những bộ màu đã định nghĩa sẵn, làm sẵn luôn responsive và hiệu ứng nhè nhẹ.</p>\n<p><strong>Kiểu bootstrap đúng không?</strong></p>\n<p>Xài cũng được, nhưng em không khuyến khích anh xài cái đó.</p>\n<p><strong>Sao vậy ta, hồi anh còn code, nó nổi lắm mà</strong></p>\n<p>Bớt nổi rồi anh. Giờ còn nhiều em <em>hót</em> không kém như Foundation, Bulma, Materialize, Semantic UI, Tailwind</p>\n<p><strong>Chọn đại một cái được không em</strong></p>\n<p>Mỗi thằng có ưu nhược khác nhau anh à, mà xài những cái này, các website bây giờ cứ na ná nhau, kiểu template, nói thật nhìn nó <em>khắm</em> lắm.</p>\n<p><strong>Vậy hổng lẽ tự viết sao em?</strong></p>\n<p>Bậy nè, anh không nên tự viết từ đầu chi, mà anh phải đi override lại chúng thôi, cũng khá khá nhiều thứ cần override.</p>\n<p><strong>Ít nhất nó cũng giúp chúng ta đơn giản hóa việt layout và responsive đúng chứ?</strong></p>\n<p>Nếu mà không yêu cầu cao, anh dùng những thư viện <em>nhẹ hiều</em> như Skeleton hay Pure CSS đi.</p>\n<p><strong>Pure CSS, anh tưởng anh đã đang viết pure css</strong></p>\n<p>Bậy nè, nó là tên thư viện, mà anh ít nhất biết dùng Flexbox chứ?</p>\n<p><strong>Nó là gì đó, anh dùng float không à, ủa mà tại sao ít nhất?</strong></p>\n<p>Kiểu layout bây giờ dùng flexbox không anh, còn cao cấp hơn thì dùng luôn css grid</p>\n<p><strong>Nó có gì hay ho vậy?</strong></p>\n<p>Nếu mà flexbox là kiểu layout một chiều, thì css grid là kiểu layout 2 chiều</p>\n<p><strong>Kiểu 2 chiều, như X, Y đúng không</strong></p>\n<p>Nó cho phép anh đưa nội dung về dạng row và column, rất nhiều tính năng xịn sò để làm các layout bay bổng</p>\n<p><strong>Ngon, vậy xài được đó</strong></p>\n<p>Chịu khó học nghe anh, lúc đầu hơi chua ăn đó.</p>\n<p><strong>Còn lựa chọn nào khác cho css không em?</strong></p>\n<p>Giờ anh có css variable nè, mixins, nesting, import, tính toán, hàm helper để code anh có tổ chức hơn.</p>\n<p><strong>Anh có nghe nhầm không, function và variable?</strong></p>\n<p>Không nhầm ạ</p>\n<p><strong>Mấy cái syntax lạ lồng như thế, có nguy hiểm không</strong></p>\n<p>Anh có mấy cái CSS preprocessor lo rồi mà</p>\n<p><strong>Như SASS/SCSS?</strong></p>\n<p>Đúng. Mà nó khác nhau đó nghe anh, SCSS > SASS, giờ cũng ít ai viết SASS lắm</p>\n<p><strong>LESS xài được ko em, anh quen viết LESS</strong></p>\n<p>Xưa rồi anh ơi, ai mà viết less nữa, nó chết bà rồi.</p>\n<p><strong>Nhiều thứ quá nhỉ</strong></p>\n<p>Đó em chưa kể đến mấy cái preprocessor mới ra là Stylus, CSS Crush, Myth đó.</p>\n<p><strong>Khó quá, bỏ qua, chọn đại một cái đi</strong></p>\n<p>Anh định dùng animation không, có quan tâm tới việc support nhiều trình duyệt không?</p>\n<p><strong>Có chứ em</strong></p>\n<p>Vậy anh phải coi thêm post-processor nữa, như PostCSS vậy</p>\n<p><strong>Nó là gì nữa á</strong></p>\n<p>Pre là xử lý <em>đường vào</em>, post là xử lý <em>đường ra</em> đó anh, nó đơn giản là thêm mấy cái syntax phù hợp cho các trình duyệt khác nhau</p>\n<p><strong>Vậy còn kinh nghiệm của em, thì chúng ta nên tổ chức sao cho tốt?</strong></p>\n<p>Xem thêm BEM á anh, một chuẩn mực đặt tên class sao cho dễ đọc để nuốt</p>\n<p><strong>Em có tự chế không đó?</strong></p>\n<p>Nào có anh ơi, em còn biết đến OOCSS và SUITCSS nữa mà không dám nói sợ anh nói em nói xạo</p>\n<p><strong>Kiểu này là anh phải sấp mặt mấy tháng để cập nhập kiến thức rồi em</strong></p>\n<p>Mà anh biết CSS-in-JS chưa?</p>\n<p><strong>Nó là cái nồi gì nữa em?</strong></p>\n<p>Nó cho anh viết CSS trong file JS</p>\n<p><strong>Em đùa vui quá</strong></p>\n<p>Xạo làm chó, bây giờ React nó hổng viết CSS như bình thường nữa anh, nó chơi kiểu CSS in JS, hay là styled component. Còn không anh dùng inline style sheet,, CSS module,...</p>\n<p><strong>Inline CSS, cái đó là Bad practice mà em</strong></p>\n<p>Giờ người ta không nghĩ vậy nữa đâu anh, nó là chuyện bình thường mà. Còn chưa nói đến JSS nữa đó anh</p>\n<p><strong>Thôi em à, anh thấy chúng ta đi xa quá rồi, từ CSS mà em chuyển nó thành JSS</strong></p>\n<p>Nhưng đó là những gì đang hót nhất mà anh, anh thấy không hót hả.</p>\n<p><strong>Anh nghĩ mình nên để yên cái project này và không thêm thắt gì nữa đi em, nó như vậy là đẹp rồi</strong></p>\n<p><a href=\"https://dev.to/madarsbiss/how-it-feels-like-to-style-things-in-2020-21cm\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://dev.to/madarsbiss/how-it-feels-like-to-style-things-in-2020-21cm</a></p>\n","cover_image":""}},{"node":{"id":"6dd172312a7c9858ab04392f1b780d3b","title":"Nên dùng gì thay cho input number","path":"/nen-dung-gi-thay-cho-input-number/","date":"2020-03-27","timeToRead":1,"desc":"Ngoài input type number, còn những giá trị gì bạn nên cân nhắc sử dụng","content":"<!-- TOC -->\n<ul>\n<li><a href=\"#tel\">tel</a></li>\n<li><a href=\"#decimal\">decimal</a></li>\n<li><a href=\"#email\">Email</a></li>\n<li><a href=\"#url\">Url</a></li>\n<li><a href=\"#search\">Search</a></li>\n</ul>\n<!-- /TOC -->\n<p>Có thể bạn sẽ nghĩ ngay đến <code class=\"language-text\">&lt;input type=&#39;number&#39; /&gt;</code> khi muốn cho user nhập số. Tuy nhiên <em>đời không như là mơ</em>, nó có kha khá vấn đề, đôi khi có những giá trị nhìn thì như <em>số</em>, nhưng không phải (như credit card), hoặc một dạng chuỗi số.</p>\n<p>Trên Gov.uk họ dùng kiểu này</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">inputmode</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>numeric<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">pattern</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>[0-9]*<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></code></pre>\n<p>Thuộc tính <code class=\"language-text\">inputmode</code> cũng khá hay ho, được đề cập rất cũ thể <a href=\"https://css-tricks.com/everything-you-ever-wanted-to-know-about-inputmode/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ở đây</a></p>\n<p>Tóm tắt lại cho bạn nào lười đọc</p>\n<h3 id=\"tel\"><a href=\"#tel\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>tel</h3>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">inputmode</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>tel<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></code></pre>\n<h3 id=\"decimal\"><a href=\"#decimal\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>decimal</h3>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">inputmode</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>decimal<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></code></pre>\n<p><img src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2019/05/inputmode-03.png?ssl=1\"></p>\n<h3 id=\"email\"><a href=\"#email\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Email</h3>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">inputmode</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>email<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></code></pre>\n<p><img src=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2019/05/inputmode-04.png?ssl=1\"></p>\n<h3 id=\"url\"><a href=\"#url\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Url</h3>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">inputmode</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>url<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></code></pre>\n<p><img src=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2019/05/inputmode-05.png?ssl=1\"></p>\n<h3 id=\"search\"><a href=\"#search\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Search</h3>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">inputmode</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>search<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></code></pre>\n<p><img src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2019/05/inputmode-06a.png?ssl=1\"></p>\n<p>Hoặc để nhập vào mã code xác thực, Twilio sử dụng định dạng này</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n  <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>token<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>token<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">inputmode</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>numeric<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">pattern</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>[0-9]*<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">autocomplete</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>one-time-code<span class=\"token punctuation\">\"</span></span>\n<span class=\"token punctuation\">/></span></span></code></pre>\n<p>Với <code class=\"language-text\">autocomplete=&quot;one-time-code&quot;</code> chúng ta sẽ có được <em>tính năng</em> tự điền như thế này</p>\n<p><img src=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/03/two-factor-input.png\" alt=\"iOS screen with a numeric input and a text message offering to auto-fill the two-factor auth\"></p>\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete#Values\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Xem danh sách autocomplete đầy đủ</a></p>\n<p><a href=\"https://css-tricks.com/what-to-use-instead-of-number-inputs/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">What to Use Instead of Number Inputs</a></p>\n","cover_image":""}},{"node":{"id":"c764b91e3b81ee538e35cfc01d180b37","title":"Thủ thuật sử dụng đơn vị viewport trên mobile","path":"/thu-thuat-su-dung-don-vi-viewport-tren-mobile/","date":"2020-03-12","timeToRead":2,"desc":"Để có thể quản lý được state của ứng dụng một cách tốt nhất, chúng ta cần sự phân chia phù hợp giữa local state (internal state của component) và state cửa ứng dụng đặt trong React Context. Một vài điều muốn chia sẽ để nâng cao khả năng bảo trì và trải nghiệm nếu sử dụng đến context trong React.","content":"<p>Đơn vị viewport trong css (<code class=\"language-text\">vh</code>, <code class=\"language-text\">vw</code>) không phải lúc nào cũng chạy đúng trên mọi trình duyệt điện thoại. Giống như chưa đủ khổ cho dev nên mỗi trình duyệt mobile lại có cách xử lý riêng cho đơn vị này.</p>\n<p>Cách mà <a href=\"https://www.w3.org/TR/css-values-3/#viewport-relative-lengths\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">w3 định nghĩa</a> cách tính đơn vị này. Với mobile cái chúng ta quan tâm nhiều nhất là đơn vị <code class=\"language-text\">vh</code></p>\n<blockquote>\n<p>1vh = 1% độ cao khởi tạo của khu vực trình duyệt dùng để hiển thị trang web.</p>\n</blockquote>\n<p>Nghĩa là giá trị này không bao gồm các phần khác của trình duyệt, như thanh address, thanh bookmark (<strong>nếu có</strong>), tab bar, ... và những thứ linh tinh khác mà user có thể add thêm vào trình duyệt của họ.</p>\n<p>Nhưng khi bạn bắt đầu scroll trên điện thoại, câu chuyện trở nên phức tạp hơn, thanh address bar sẽ biến mất, giá trị của <code class=\"language-text\">vh</code> cần phải cập nhập lại, hiện tượng <em>cà khịa</em> xuất hiện trên màn hình.</p>\n<p>Trình duyệt Safari trên iOS là người tiên phong sử dụng luôn một giá trị cố định đúng với kích thước màn hình (không phải kích thước khung hiển thị của trình duyệt). Chrome mobile cũng bắt đầu áp dụng cách này để chặn việc nội dung trang nhảy lung tung.</p>\n<p>Điều này có ý nghĩa như thế nào? Nghĩa là khi bạn đặt giá trị <code class=\"language-text\">100vh</code> nó sẽ vượt ra ngoài, user sẽ phải scroll trên trình duyệt để xem hết.</p>\n<p><img src=\"https://i2.wp.com/css-tricks.com/wp-content/uploads/2018/07/viewport-units-mobile-crop.jpg?ssl=1\"></p>\n<p>Để khắc phục nhược điểm này. Chúng ta không thể trông cậy vào css, phải dùng đến javascript túm lấy độ cao <code class=\"language-text\">window.innerHeight</code>, lưu giá trị đó lại thành một biến CSS và sử dụng nó thay cho đơn vị <code class=\"language-text\">vh</code></p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\"><span class=\"token class\">.my-element</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token unit\">vh</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* fallback khi trình duyệt không hỗ trợ biến css */</span>\n  <span class=\"token comment\">/* cái này chỉ có trên webkit */</span>\n  <span class=\"token property\">min-height</span><span class=\"token punctuation\">:</span> -webkit-fill-available<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> <span class=\"token function\">calc</span><span class=\"token punctuation\">(</span><span class=\"token function\">var</span><span class=\"token punctuation\">(</span><span class=\"token variable\">--vh</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token unit\">vh</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Chúng ta sẽ <em>túm lấy</em> và định nghĩa <code class=\"language-text\">--vh</code> bằng javascript</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Trước tiên lấy viewport height và chuyển thành giá trị 1%</span>\n<span class=\"token keyword\">let</span> vh <span class=\"token operator\">=</span> <span class=\"token dom variable\">window</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">innerHeight</span> <span class=\"token operator\">*</span> <span class=\"token number\">0.01</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Đặt biến css</span>\n<span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">documentElement</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">style</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">setProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"--vh\"</span><span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>vh<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">px</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Còn một vấn đề nhỏ còn lại cần phải xử lý là cập nhập lại giá trị này khi trình duyệt thay đổi kích thước (xoay trái, xoay phải, xoay ngang, xoay dọc)</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// chạy lại khi window resize</span>\n<span class=\"token dom variable\">window</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"resize\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// làm tương tự 2 bước đã làm</span>\n  <span class=\"token keyword\">let</span> vh <span class=\"token operator\">=</span> <span class=\"token dom variable\">window</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">innerHeight</span> <span class=\"token operator\">*</span> <span class=\"token number\">0.01</span><span class=\"token punctuation\">;</span>\n  <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">documentElement</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">style</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">setProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"--vh\"</span><span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>vh<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">px</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p><a href=\"https://css-tricks.com/the-trick-to-viewport-units-on-mobile/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">The trick to viewport units on mobile</a></p>\n","cover_image":""}},{"node":{"id":"fc1ff3b7528e0a068b87722fc19b5e40","title":"Gắn video làm background toàn màn hình","path":"/gan-video-lam-background-toan-man-hinh/","date":"2019-11-12","timeToRead":3,"desc":"Chia sẽ kỹ thuật làm background video để chạy full màn hình","content":"<p>Kết quả các bạn có thể xem trên trang mình mới làm\n<a href=\"http://chat-production.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">http://chat-production.com/</a></p>\n<p>Để có một cái video chạy toàn màn hình, chúng ta sẽ nghĩ ngay đến việc dùng thẻ <code class=\"language-text\">&lt;video /&gt;</code> của HTML5, đặt nó trong một cái <code class=\"language-text\">&lt;div/&gt;</code> có kích thước <code class=\"language-text\">width: 100%</code>, buồn thay nó không đúng như chúng ta mong đợi.</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token comment\">&lt;!-- HTML --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>videoContainer<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>video</span> <span class=\"token attr-name\">loop</span> <span class=\"token attr-name\">autoplay</span> <span class=\"token attr-name\">muted</span> <span class=\"token attr-name\">playsinline</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>source</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/show-reel.mp4<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>video/mp4<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>video</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n<blockquote>\n<p>Thêm <code class=\"language-text\">playsinline</code> để có thể chạy trên IOS như iPhone</p>\n</blockquote>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\"><span class=\"token id\">#container</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">overflow</span><span class=\"token punctuation\">:</span> hidden<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> <span class=\"token number\">60</span><span class=\"token unit\">vw</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n \n<span class=\"token selector\">video</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token unit\">%</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token unit\">%</span><span class=\"token punctuation\">;</span>   \n  <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token property\">left</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token property\">right</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token property\">bottom</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Thứ nhất là nó sẽ không tự scale ra 100% của màn hình, thứ 2 khi chúng ta kéo to thu nhỏ cửa sổ trình duyệt, tỷ lệ khung hình (ngang và đứng) cũng sẽ không đạt đúng tỉ lệ thật của video.</p>\n<p>Để video có thể thay đổi kích thước theo từng giá trị màn hình khác nhau, chúng ta phải dùng đến javascript và css</p>\n<pre class=\"language-scss\"><code class=\"language-scss\"><span class=\"token selector\">#videoContainer </span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token unit\">vh</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">overflow</span><span class=\"token punctuation\">:</span> hidden<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative<span class=\"token punctuation\">;</span>\n  <span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">780</span><span class=\"token unit\">px</span><span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> <span class=\"token number\">60</span><span class=\"token unit\">vw</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token selector\">video </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token unit\">vw</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">/* canh video ngay giữa */</span>\n    <span class=\"token property\">left</span><span class=\"token punctuation\">:</span> <span class=\"token number\">50</span><span class=\"token unit\">%</span><span class=\"token punctuation\">;</span> <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> <span class=\"token number\">50</span><span class=\"token unit\">%</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">translate</span><span class=\"token punctuation\">(</span><span class=\"token number\">-50</span><span class=\"token unit\">%</span><span class=\"token punctuation\">,</span> <span class=\"token number\">-50</span><span class=\"token unit\">%</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Source này được lấy từ <a href=\"https://codetheory.in/html5-fullscreen-background-video/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://codetheory.in/html5-fullscreen-background-video/</a>, mình sử dụng chung với React</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// JS</span>\n  <span class=\"token keyword\">var</span> video <span class=\"token operator\">=</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"video\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    container <span class=\"token operator\">=</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#videoContainer\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">setVideoDimensions</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> w <span class=\"token operator\">=</span> video<span class=\"token punctuation\">.</span><span class=\"token property-access\">videoWidth</span><span class=\"token punctuation\">,</span>\n      h <span class=\"token operator\">=</span> video<span class=\"token punctuation\">.</span><span class=\"token property-access\">videoHeight</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Intrinsic Ratio</span>\n    <span class=\"token comment\">// Will be more than 1 if W > H and less if W &lt; H</span>\n    <span class=\"token keyword\">var</span> videoRatio <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>w <span class=\"token operator\">/</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toFixed</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Get the container's computed styles</span>\n    <span class=\"token comment\">//</span>\n    <span class=\"token comment\">// Also calculate the min dimensions required (this will be</span>\n    <span class=\"token comment\">// the container dimensions)</span>\n    <span class=\"token keyword\">var</span> containerStyles <span class=\"token operator\">=</span> <span class=\"token dom variable\">window</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getComputedStyle</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      minW <span class=\"token operator\">=</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>containerStyles<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getPropertyValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"width\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      minH <span class=\"token operator\">=</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>containerStyles<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getPropertyValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"height\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// What's the min:intrinsic dimensions</span>\n    <span class=\"token comment\">//</span>\n    <span class=\"token comment\">// The idea is to get which of the container dimension</span>\n    <span class=\"token comment\">// has a higher value when compared with the equivalents</span>\n    <span class=\"token comment\">// of the video. Imagine a 1200x700 container and</span>\n    <span class=\"token comment\">// 1000x500 video. Then in order to find the right balance</span>\n    <span class=\"token comment\">// and do minimum scaling, we have to find the dimension</span>\n    <span class=\"token comment\">// with higher ratio.</span>\n    <span class=\"token comment\">//</span>\n    <span class=\"token comment\">// Ex: 1200/1000 = 1.2 and 700/500 = 1.4 - So it is best to</span>\n    <span class=\"token comment\">// scale 500 to 700 and then calculate what should be the</span>\n    <span class=\"token comment\">// right width. If we scale 1000 to 1200 then the height</span>\n    <span class=\"token comment\">// will become 600 proportionately.</span>\n    <span class=\"token keyword\">var</span> widthRatio <span class=\"token operator\">=</span> minW <span class=\"token operator\">/</span> w<span class=\"token punctuation\">,</span>\n      heightRatio <span class=\"token operator\">=</span> minH <span class=\"token operator\">/</span> h<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Whichever ratio is more, the scaling</span>\n    <span class=\"token comment\">// has to be done over that dimension</span>\n    <span class=\"token keyword\">let</span> newWidth <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> newHeight <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>widthRatio <span class=\"token operator\">></span> heightRatio<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      newWidth <span class=\"token operator\">=</span> minW<span class=\"token punctuation\">;</span>\n      newHeight <span class=\"token operator\">=</span> <span class=\"token known-class-name class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">ceil</span><span class=\"token punctuation\">(</span>newWidth <span class=\"token operator\">/</span> videoRatio<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword control-flow\">else</span> <span class=\"token punctuation\">{</span>\n      newHeight <span class=\"token operator\">=</span> minH<span class=\"token punctuation\">;</span>\n      newWidth <span class=\"token operator\">=</span> <span class=\"token known-class-name class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">ceil</span><span class=\"token punctuation\">(</span>newHeight <span class=\"token operator\">*</span> videoRatio<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    video<span class=\"token punctuation\">.</span><span class=\"token property-access\">style</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">width</span> <span class=\"token operator\">=</span> newWidth <span class=\"token operator\">+</span> <span class=\"token string\">\"px\"</span><span class=\"token punctuation\">;</span>\n    video<span class=\"token punctuation\">.</span><span class=\"token property-access\">style</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">height</span> <span class=\"token operator\">=</span> newHeight <span class=\"token operator\">+</span> <span class=\"token string\">\"px\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  video<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"loadedmetadata\"</span><span class=\"token punctuation\">,</span> setVideoDimensions<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token dom variable\">window</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"resize\"</span><span class=\"token punctuation\">,</span> setVideoDimensions<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Đoạn js trên để đảm bảo kích thước của video được scale ra hết khung hình và thay đổi cho phù hợp khi trình duyệt thay đổi kích thước</p>\n<blockquote>\n<p>Dùng 2 listener <code class=\"language-text\">loadedmetadata</code> trên video và <code class=\"language-text\">resize</code> trên window để chỉnh lại kích thước thẻ video</p>\n</blockquote>\n","cover_image":""}},{"node":{"id":"279a88e44a33e49f28daacde42d9d2c6","title":"Căn bản cách sử dụng media query","path":"/can-ban-cach-su-dung-media-query/","date":"2019-09-27","timeToRead":2,"desc":"Những kiến thức căn bản bắt buộc nhất để bạn làm responsive","content":"<!-- TOC -->\n<ul>\n<li><a href=\"#media-type\">Media type</a></li>\n<li><a href=\"#to%c3%a1n-t%e1%bb%ad-logic\">Toán tử logic</a></li>\n<li><a href=\"#n%c3%a2ng-c%e1%ba%a5p-t%e1%bb%ab-level-4-%c4%91%e1%ba%a1i-kh%c3%a1i-l%c3%a0-s%e1%bb%ad-d%e1%bb%a5ng-tr%c3%aan-tr%c3%acnh-duy%e1%bb%87t-c%c5%a9-kh%c3%b4ng-%c4%91%e1%ba%a3m-b%e1%ba%a3o-%c4%91%c3%b3\">Nâng cấp từ level 4 (đại khái là sử dụng trên trình duyệt cũ không đảm bảo đó)</a></li>\n<li><a href=\"#pattern-hay-s%e1%bb%ad-d%e1%bb%a5ng\">Pattern hay sử dụng</a></li>\n</ul>\n<!-- /TOC -->\n<p>Query media là kiến thức bắt buộc phải nắm nếu muốn làm tốt responsive, nó sẽ được sử dụng trong các trường hợp sau </p>\n<ul>\n<li>Đặt điều kiện để apply css qua <code class=\"language-text\">@media</code> hoặc <code class=\"language-text\">@import</code></li>\n<li>Chỉ định cụ thể trên một số HTML element và các file resource cho <code class=\"language-text\">&lt;link/&gt;</code> và <code class=\"language-text\">&lt;source /&gt;</code></li>\n<li>Kiểm tra sự thay đổi kích thước của window trong hàm <code class=\"language-text\">Window.matchMedia</code> và <code class=\"language-text\">MediaQueryList.addListener</code> </li>\n</ul>\n<p>Bài này chỉ dùng CSS <code class=\"language-text\">@media</code> để làm ví dụ, sử dụng trên các cách khác cũng tương tự  </p>\n<h2 id=\"media-type\"><a href=\"#media-type\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Media type</h2>\n<p>Chỉ định kiểu device sẽ có hiệu lực, nếu không truyền vào thì mặc định là <code class=\"language-text\">all</code>  </p>\n<ul>\n<li><code class=\"language-text\">all</code> tất cả các loại device</li>\n<li><code class=\"language-text\">print</code> đang xem trên màn hình ở chế độ preview, hoặc lúc in</li>\n<li><code class=\"language-text\">screen</code> chỉ áp dụng trên màn hình</li>\n<li><code class=\"language-text\">speech</code> các thiết bị đọc văn bản  </li>\n</ul>\n<p>Các thằng khác đã bỏ rồi, nên các bạn không cần nhớ chi cho nhiều, thấy một số bài viết trên mạng còn liệt kê chi không biết.  </p>\n<p>Cũng không sử dụng nhiều đến cách này, đa phần khi thiết kế thì người ta làm trên từng kích thước độ rộng màn hình, chứ không nghĩ cụ thể cho từng loại thiết bị như để in, xem trên màn hình  </p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@media</span> print</span> <span class=\"token punctuation\">{</span> ... <span class=\"token punctuation\">}</span>\n<span class=\"token atrule\"><span class=\"token rule\">@media</span> screen</span> <span class=\"token punctuation\">{</span> ... <span class=\"token punctuation\">}</span>\n<span class=\"token atrule\"><span class=\"token rule\">@media</span> speech</span><span class=\"token punctuation\">{</span> ... <span class=\"token punctuation\">}</span></code></pre>\n<h2 id=\"toán-tử-logic\"><a href=\"#to%C3%A1n-t%E1%BB%AD-logic\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Toán tử logic</h2>\n<p>Có một số toán tử có thể sử dụng trong câu media là <code class=\"language-text\">not</code>, <code class=\"language-text\">and</code>, <code class=\"language-text\">only</code>, <code class=\"language-text\">,</code> - cái này thì giống như toán tử <code class=\"language-text\">or</code> vậy đó</p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token property\">min-height</span><span class=\"token punctuation\">:</span> <span class=\"token number\">680</span><span class=\"token unit\">px</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> screen <span class=\"token keyword\">and</span> <span class=\"token punctuation\">(</span><span class=\"token property\">orientation</span><span class=\"token punctuation\">:</span> portrait<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span> ... <span class=\"token punctuation\">}</span> \n<span class=\"token atrule\"><span class=\"token rule\">@media</span> screen <span class=\"token keyword\">and</span> <span class=\"token punctuation\">(</span><span class=\"token property\">min-width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">30</span><span class=\"token unit\">em</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> <span class=\"token punctuation\">(</span><span class=\"token property\">orientation</span><span class=\"token punctuation\">:</span> landscape<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span> ... <span class=\"token punctuation\">}</span></code></pre>\n<h2 id=\"nâng-cấp-từ-level-4-đại-khái-là-sử-dụng-trên-trình-duyệt-cũ-không-đảm-bảo-đó\"><a href=\"#n%C3%A2ng-c%E1%BA%A5p-t%E1%BB%AB-level-4-%C4%91%E1%BA%A1i-kh%C3%A1i-l%C3%A0-s%E1%BB%AD-d%E1%BB%A5ng-tr%C3%AAn-tr%C3%ACnh-duy%E1%BB%87t-c%C5%A9-kh%C3%B4ng-%C4%91%E1%BA%A3m-b%E1%BA%A3o-%C4%91%C3%B3\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Nâng cấp từ level 4 (đại khái là sử dụng trên trình duyệt cũ không đảm bảo đó)</h2>\n<p>Trước đây để áp dụng điều kiện <strong>nằm trong khoản màn hình</strong> nào đó, chúng ta dùng kiểu <code class=\"language-text\">max-width:</code> hay <code class=\"language-text\">min-width</code></p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">30</span><span class=\"token unit\">em</span><span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span> ... <span class=\"token punctuation\">}</span>\n<span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token property\">min-width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">30</span><span class=\"token unit\">em</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> <span class=\"token punctuation\">(</span><span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">50</span><span class=\"token unit\">em</span><span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span> ... <span class=\"token punctuation\">}</span></code></pre>\n<p>Giờ có thể viết theo kiểu</p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span>width &lt;= <span class=\"token number\">30</span><span class=\"token unit\">em</span><span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span> ... <span class=\"token punctuation\">}</span>\n<span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token unit\">em</span> &lt;= width &lt;= <span class=\"token number\">50</span><span class=\"token unit\">em</span><span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span> ... <span class=\"token punctuation\">}</span></code></pre>\n<h2 id=\"pattern-hay-sử-dụng\"><a href=\"#pattern-hay-s%E1%BB%AD-d%E1%BB%A5ng\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Pattern hay sử dụng</h2>\n<p>Tài liệu thì rườm rà, rắc rối vậy thôi, chứ khi sử dụng, mình chỉ dùng bộ media định nghĩa trong bootstrap là đủ xài</p>\n<pre class=\"language-css\"><code class=\"language-css\">// màn hình điện thoại\n<span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token property\">min-width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">576</span><span class=\"token unit\">px</span><span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span> ... <span class=\"token punctuation\">}</span>\n// màn hình ipad đứng\n<span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token property\">min-width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">768</span><span class=\"token unit\">px</span><span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span> ... <span class=\"token punctuation\">}</span>\n// màn hình bự hơn ipad\n<span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token property\">min-width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">992</span><span class=\"token unit\">px</span><span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span> ... <span class=\"token punctuation\">}</span>\n// màn hình laptop trở lên\n<span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token property\">min-width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1200</span><span class=\"token unit\">px</span><span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span> ... <span class=\"token punctuation\">}</span></code></pre>\n","cover_image":""}},{"node":{"id":"3fc010c23eda34d2e63e8432026d5760","title":"Không cho cuộn trang khi mở Modal","path":"/khong-cho-cuon-trang-khi-mo-modal/","date":"2019-06-07","timeToRead":1,"desc":"Xử lý cuộn trang khi mở modal","content":"<!-- TOC -->\n<ul>\n<li><a href=\"#C%C3%A1ch-%C4%91%C6%A1n-gi%E1%BA%A3n-nh%E1%BA%A5t\">Cách đơn giản nhất</a></li>\n<li><a href=\"#Tr%C3%AAn-mobile\">Trên mobile</a></li>\n<li><a href=\"#Gi%E1%BA%A3i-ph%C3%A1p-cu%E1%BB%91i-c%C3%B9ng\">Giải pháp cuối cùng</a></li>\n</ul>\n<!-- /TOC -->\n<h2 id=\"cách-đơn-giản-nhất\"><a href=\"#c%C3%A1ch-%C4%91%C6%A1n-gi%E1%BA%A3n-nh%E1%BA%A5t\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Cách đơn giản nhất</h2>\n<p>Đặt độ cao của body = 100% của viewport, sau đó cho overflow thành hidden, thêm mục padding right = 15 để fix trường hợp trang đã có thanh cuộn rồi</p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">body<span class=\"token class\">.model-open</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token unit\">vh</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">overflow-y</span><span class=\"token punctuation\">:</span> hidden<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">padding-right</span><span class=\"token punctuation\">:</span> <span class=\"token number\">15</span><span class=\"token unit\">px</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h2 id=\"trên-mobile\"><a href=\"#tr%C3%AAn-mobile\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Trên mobile</h2>\n<p>Cách trên chạy tốt trên desktop và android, buồn thay iOS vẫn cuộn được, thêm <code class=\"language-text\">position fixed</code> để sửa bug này</p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">body</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> fixed<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Tuy nhiên, cách này vẫn bị vấn để bự khác, nếu cuộn xuống dưới, mở modal lên, đóng lại thì trang cuộn lên đầu</p>\n<h2 id=\"giải-pháp-cuối-cùng\"><a href=\"#gi%E1%BA%A3i-ph%C3%A1p-cu%E1%BB%91i-c%C3%B9ng\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Giải pháp cuối cùng</h2>\n<p>Đi đâu rồi cũng về javascript thôi. Lưu lại vị trí scroll, set lại vị trí này khi đóng modal</p>\n<p>Khi bung modal</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">showDialog</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'dialog'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">classList</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'show'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> scrollY <span class=\"token operator\">=</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">documentElement</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">style</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getPropertyValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">'--scroll-y'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> body <span class=\"token operator\">=</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">body</span><span class=\"token punctuation\">;</span>\n  body<span class=\"token punctuation\">.</span><span class=\"token property-access\">style</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">position</span> <span class=\"token operator\">=</span> <span class=\"token string\">'fixed'</span><span class=\"token punctuation\">;</span>\n  body<span class=\"token punctuation\">.</span><span class=\"token property-access\">style</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">top</span> <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>scrollY<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Khi đóng modal</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">closeDialog</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> body <span class=\"token operator\">=</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">body</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> scrollY <span class=\"token operator\">=</span> body<span class=\"token punctuation\">.</span><span class=\"token property-access\">style</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">top</span><span class=\"token punctuation\">;</span>\n  body<span class=\"token punctuation\">.</span><span class=\"token property-access\">style</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">position</span> <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n  body<span class=\"token punctuation\">.</span><span class=\"token property-access\">style</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">top</span> <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n  <span class=\"token dom variable\">window</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">scrollTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>scrollY <span class=\"token operator\">||</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'dialog'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">classList</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">remove</span><span class=\"token punctuation\">(</span><span class=\"token string\">'show'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token dom variable\">window</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'scroll'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">documentElement</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">style</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">setProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">'--scroll-y'</span><span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token dom variable\">window</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">scrollY</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">px</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<iframe height=\"265\" style=\"width: 100%;\" scrolling=\"no\" title=\"Avoid body scrollable in safari when modal dialog shown\" src=\"//codepen.io/geoffgraham/embed/LogERe/?height=265&theme-id=0&default-tab=html,result\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href='https://codepen.io/geoffgraham/pen/LogERe/'>Avoid body scrollable in safari when modal dialog shown</a> by Geoff Graham\n  (<a href='https://codepen.io/geoffgraham'>@geoffgraham</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://css-tricks.com/prevent-page-scrolling-when-a-modal-is-open/\">Prevent Page Scrolling When a Modal is Open</a></p>\n","cover_image":""}},{"node":{"id":"a6bf825820a31e190743bacb8f4eb5a7","title":"Làm layout masonry bằng flexbox","path":"/lam-layout-masonry-bang-flexbox/","date":"2019-05-15","timeToRead":3,"desc":"Những ngày làm masonry layout với các thư viện jquery đã ko còn nữa","content":"<p>Một trong những cách đơn giản nhất để tạo masonry layout là dùng flexbox, tất cả những gì cần làm là set <code class=\"language-text\">flex-flow: column wrap</code> và <code class=\"language-text\">height: giá-trị-độ-cao-nào-đó</code>, là bạn có kiểu layout nổi tiếng của pinterest.</p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token comment\">/* hiển thị theo dạng column, rớt dòng khi cần thiết */</span>\n<span class=\"token selector\"><span class=\"token class\">.container</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">flex-flow</span><span class=\"token punctuation\">:</span> column wrap<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">align-content</span><span class=\"token punctuation\">:</span> space-between<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">/* fixed height, cao hơn độ cao của item cao nhất */</span>\n    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> <span class=\"token number\">960</span><span class=\"token unit\">px</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Cách này bị một vấn đề, thứ tự các item chúng ta sẽ là như thế này\n<img src=\"https://i.imgur.com/Xiyr8Gj.jpg\" alt=\"Làm layout masonry bằng flexbox\"></p>\n<p>Đây không phải là kết quả chúng ta mong muốn, nó phải xếp các item từ trái qua phải mới hợp gu</p>\n<p>Nếu chuyển giá trị <code class=\"language-text\">flex-direction: row</code>, thứ tự sẽ đúng như mong muốn, tuy nhiên nó lại bị khoảng trống khi các item có độ cao không đồng nhất, như thế này </p>\n<p><img src=\"https://i.imgur.com/iC5BJRw.jpg\" alt=\"Làm layout masonry bằng flexbox\"></p>\n<p>Sử dụng kết hợp với 2 thuộc tính <code class=\"language-text\">:nth-child()</code> và <code class=\"language-text\">order</code> để giải quyết vấn đề này</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Column 1</th>\n<th>Column 2</th>\n<th>Column 3</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Row 1</td>\n<td>1</td>\n<td>2</td>\n<td>3</td>\n</tr>\n<tr>\n<td>Row 2</td>\n<td>4</td>\n<td>5</td>\n<td>6</td>\n</tr>\n<tr>\n<td>Row 3</td>\n<td>7</td>\n<td>8</td>\n<td>9</td>\n</tr>\n<tr>\n<td>Row 4</td>\n<td>10</td>\n<td>11</td>\n<td>12</td>\n</tr>\n</tbody>\n</table>\n<p>Chúng ta có 3 cột, chúng ta sẽ xếp các item theo từng cột, nhưng order nó theo hàng</p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token comment\">/* sắp xếp lại theo từng dòng */</span>\n<span class=\"token selector\"><span class=\"token class\">.item</span><span class=\"token pseudo-class\">:nth-child</span><span class=\"token punctuation\">(</span><span class=\"token n-th\"><span class=\"token number\">3n</span><span class=\"token operator\">+</span><span class=\"token number\">1</span></span><span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span> <span class=\"token property\">order</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token selector\">// set order = 1 cho các item 1<span class=\"token punctuation\">,</span> 4<span class=\"token punctuation\">,</span> 7<span class=\"token punctuation\">,</span> 10<span class=\"token punctuation\">,</span>...\n<span class=\"token class\">.item</span><span class=\"token pseudo-class\">:nth-child</span><span class=\"token punctuation\">(</span><span class=\"token n-th\"><span class=\"token number\">3n</span><span class=\"token operator\">+</span><span class=\"token number\">2</span></span><span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span> <span class=\"token property\">order</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token selector\">// set order = 1 cho các item 2<span class=\"token punctuation\">,</span> 5<span class=\"token punctuation\">,</span> 8<span class=\"token punctuation\">,</span> 11<span class=\"token punctuation\">,</span>...\n<span class=\"token class\">.item</span><span class=\"token pseudo-class\">:nth-child</span><span class=\"token punctuation\">(</span><span class=\"token n-th\"><span class=\"token number\">3n</span></span><span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span> <span class=\"token property\">order</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n// set order = <span class=\"token number\">1</span> cho các item <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span>...</code></pre>\n<p>Với các item có cùng giá trị order như <code class=\"language-text\">1, 4, 7, 10</code> trình duyệt sẽ render theo thứ tự xuất hiện của html, một cách ngắn gọn với đoạn css trên chúng ta đã xếp các item lại theo thứ tự là <code class=\"language-text\">1,4,7,10,2,5,8,11,3,6,9,12</code></p>\n<p>Còn một trường hợp có thể xảy ra là item có độ cao ko <code class=\"language-text\">fill</code> hết chỗ trống trong cột, khi ấy nó sẽ dồn item đó về cột phía trước</p>\n<p><img src=\"https://i.imgur.com/4oBdLOd.png\" alt=\"Làm layout masonry bằng flexbox\"></p>\n<p>Để xử trí vụ này, đây là một cái trick khá vi diệu, chúng ta sẽ chèn 2 element <code class=\"language-text\">before</code> và <code class=\"language-text\">after</code> có giá trị  <code class=\"language-text\">order: 2</code> để các item sẽ theo thứ tự <code class=\"language-text\">1, 4, 7, 10, &lt;break&gt;, 2, 5, 8, 11, &lt;break&gt;, 3, 6, 9, 12</code></p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token comment\">/* bắt buộc chèn vào cột mới */</span>\n<span class=\"token selector\"><span class=\"token class\">.container</span><span class=\"token pseudo-element\">::before</span><span class=\"token punctuation\">,</span>\n<span class=\"token class\">.container</span><span class=\"token pseudo-element\">::after</span></span> <span class=\"token punctuation\">{</span>\n<span class=\"token property\">content</span><span class=\"token punctuation\">:</span> “”<span class=\"token punctuation\">;</span>\n<span class=\"token property\">flex-basis</span><span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token unit\">%</span><span class=\"token punctuation\">;</span>\n<span class=\"token property\">width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token property\">order</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Đường màu xám là 2 element <code class=\"language-text\">before</code> và <code class=\"language-text\">after</code></p>\n<p><img src=\"https://i.imgur.com/yTnodUu.jpg\" alt=\"Làm layout masonry bằng flexbox\"></p>\n<p>Toàn bộ source</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>container<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  ...\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token comment\">/* hiển thị theo dạng column, rớt dòng khi cần thiết */</span>\n<span class=\"token selector\"><span class=\"token class\">.container</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">flex-flow</span><span class=\"token punctuation\">:</span> column wrap<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">align-content</span><span class=\"token punctuation\">:</span> space-between<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">/* fixed height, cao hơn độ cao của item cao nhất */</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> <span class=\"token number\">600</span><span class=\"token unit\">px</span><span class=\"token punctuation\">;</span> \n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\"><span class=\"token class\">.item</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">32</span><span class=\"token unit\">%</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">margin-bottom</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token unit\">%</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/* sắp xếp lại theo từng dòng */</span>\n<span class=\"token selector\"><span class=\"token class\">.item</span><span class=\"token pseudo-class\">:nth-child</span><span class=\"token punctuation\">(</span><span class=\"token n-th\"><span class=\"token number\">3n</span><span class=\"token operator\">+</span><span class=\"token number\">1</span></span><span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span> <span class=\"token property\">order</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token selector\">// set order = 1 cho các item 1<span class=\"token punctuation\">,</span> 4<span class=\"token punctuation\">,</span> 7<span class=\"token punctuation\">,</span> 10<span class=\"token punctuation\">,</span>...\n<span class=\"token class\">.item</span><span class=\"token pseudo-class\">:nth-child</span><span class=\"token punctuation\">(</span><span class=\"token n-th\"><span class=\"token number\">3n</span><span class=\"token operator\">+</span><span class=\"token number\">2</span></span><span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span> <span class=\"token property\">order</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token selector\">// set order = 1 cho các item 2<span class=\"token punctuation\">,</span> 5<span class=\"token punctuation\">,</span> 8<span class=\"token punctuation\">,</span> 11<span class=\"token punctuation\">,</span>...\n<span class=\"token class\">.item</span><span class=\"token pseudo-class\">:nth-child</span><span class=\"token punctuation\">(</span><span class=\"token n-th\"><span class=\"token number\">3n</span></span><span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span> <span class=\"token property\">order</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n// set order = <span class=\"token number\">1</span> cho các item <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span>...\n\n<span class=\"token comment\">/* bắt buộc chèn vào cột mới */</span>\n<span class=\"token selector\"><span class=\"token class\">.container</span><span class=\"token pseudo-element\">::before</span><span class=\"token punctuation\">,</span>\n<span class=\"token class\">.container</span><span class=\"token pseudo-element\">::after</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">flex-basis</span><span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token unit\">%</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">order</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p><a href=\"https://codepen.io/collection/XPjvPP/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Toàn bộ source trên codepen</a></p>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://tobiasahlin.com/blog/masonry-with-css/\">CSS masonry with flexbox, :nth-child(), and order</a></p>\n","cover_image":""}},{"node":{"id":"218e6c4e047054bf9f0bd059f25580d8","title":"Preload, prefetch và các thuộc tính khác trên link","path":"/preload-prefetch-va-cac-thuoc-tinh-khac-tren-link/","date":"2019-04-25","timeToRead":3,"desc":"Cùng tìm hiểu các attribute sử dụng trên thẻ link để cải thiện hiệu năng","content":"<!-- TOC -->\n<ul>\n<li><a href=\"#preload\">preload</a></li>\n<li><a href=\"#prefetch\">prefetch</a></li>\n<li><a href=\"#preconnect\">preconnect</a></li>\n<li><a href=\"#dns-prefetch\">dns-prefetch</a></li>\n<li><a href=\"#prerender\">prerender</a></li>\n</ul>\n<!-- /TOC -->\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>prefetch<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/style.css<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">as</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>style<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>preload<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/style.css<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">as</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>style<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>preconnect<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://example.com<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>dns-prefetch<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://example.com<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>prerender<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://example.com<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></code></pre>\n<h2 id=\"preload\"><a href=\"#preload\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>preload</h2>\n<p><code class=\"language-text\">&lt;link rel=&quot;preload&quot; /&gt;</code>  sẽ báo với trình duyệt download và cache một resource (như script hoặc stylesheet) nhanh nhất có thể. Nếu chúng ta cần resource đó ngay sau khi trang đang load.</p>\n<p>Một khi trình duyệt đã download xong resource này, trình duyệt sẽ không làm gì hết, file script đó sẽ ko được thực thi, file stylesheet sẽ ko được áp dụng. Nó cache lại ở đó, khi có một thằng nào khác cần tới nó, nó sẽ được cung cấp ngay lập tức.</p>\n<p>Cú pháp</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>preload<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/style.css<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">as</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>style<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></code></pre>\n<p>Các giá trị có thể cung cấp cho <code class=\"language-text\">as</code></p>\n<ul>\n<li>style</li>\n<li>script</li>\n<li>font</li>\n<li>fetch</li>\n</ul>\n<p>Chúng ta cần phải cung cấp giá trị <code class=\"language-text\">as</code> để trình duyệt biết thứ tự ưu tiên download về cho đúng.</p>\n<p>Ví dụ, sử dụng custom font, nếu sử dụng font face chúng ta đặt việc load file này trong css</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>index.css<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></code></pre>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token comment\">/* index.css */</span>\n<span class=\"token atrule\"><span class=\"token rule\">@font-face</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">src</span><span class=\"token punctuation\">:</span> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span><span class=\"token string url\">'comic-sans.woff2'</span><span class=\"token punctuation\">)</span></span> <span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">'woff2'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Theo mặc định file <code class=\"language-text\">comic-sans.woff2</code> chỉ được download khi file <code class=\"language-text\">index.css</code> đã được load và áp dụng. Chúng ta có thể <em>cưỡng ép</em> load file font này về trước</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>preload<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>comic-sans.woff2<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">as</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>font<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></code></pre>\n<h2 id=\"prefetch\"><a href=\"#prefetch\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>prefetch</h2>\n<p><code class=\"language-text\">&lt;link rel=&quot;prefetch&quot; /&gt;</code> yêu cầu trình duyệt download và cache lại resource ngầm bên dưới, nó sẽ có độ ưu tiên thấp, không tranh giành thứ tự ưu tiên với các resource quan trọng hơn. Thí dụ như bạn cần resource đó ở các trang sau nữa, bạn có thể load trước để sẵn ở trang hiện tại.</p>\n<p>Cú pháp</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>prefetch<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/style.css<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">as</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>style<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></code></pre>\n<p>Ví dụ, user di chuyển từ home page sang trang product page, đa phần luồng đi của user sẽ là như thế, trừ trường hợp học bookmark lại trang đó, hoặc nhấp vào một link được share. Chúng ta có thể sử dụng <code class=\"language-text\">&lt;link rel=&quot;prefetch&quot; /&gt;</code> để tải trước các file css, js sẽ dùng trên trang product.</p>\n<h2 id=\"preconnect\"><a href=\"#preconnect\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>preconnect</h2>\n<p><code class=\"language-text\">&lt;link rel=&quot;preconnect&quot; /&gt;</code> được dùng để tăng tốc độ load ban đầu bằng việc báo với trình duyệt, chúng ta sẽ load một resource từ domain nào đó không sớm thì muộn. Thí dụ chúng ta load font từ Google, CDN, JSON từ API server.</p>\n<p>Thực hư tăng tốc được bao nhiêu thì cũng chưa rõ, nhưng đây là cách chúng ta báo với trình duyệt</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>preconnect<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://api.my-app.com<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></code></pre>\n<h2 id=\"dns-prefetch\"><a href=\"#dns-prefetch\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>dns-prefetch</h2>\n<p><code class=\"language-text\">&lt;link rel=&quot;dns-prefetch&quot; /&gt;</code> công dụng cũng tương tự như <code class=\"language-text\">preconnect</code>, nó sẽ setup sẵn các config cần thiết trên trình duyệt khi cần thực hiện một DNS resolution</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>dns-prefetch<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://api.my-app.com<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></code></pre>\n<h2 id=\"prerender\"><a href=\"#prerender\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>prerender</h2>\n<p><code class=\"language-text\">&lt;link rel=&quot;prerender&quot; /&gt;</code> yêu cầu trình duyệt load 1 url và render nó trong một tab ẩn,  khi user click vào đường link đến url đó, trang web sẽ được hiển thị ngay và luôn.</p>\n<p>Tuy nhiên là thuộc tính này tính đến thời điểm hiện tại rất ít trình duyệt hỗ trợ</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>prerender<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://my-app.com/pricing<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></code></pre>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://3perf.com/blog/link-rels/watch?v=I14fXc7sXdU&list=WL&index=2&t=0s\">Preload, prefetch and other link tags\n</a></p>\n","cover_image":""}},{"node":{"id":"2e469e5dd86391a52d1ab775c4722c8d","title":"Sửa lỗi scroll với fixed header bằng CSS","path":"/sua-loi-scroll-voi-fixed-header-bang-css/","date":"2019-04-17","timeToRead":1,"desc":"Giải quyết issue với fixed header và scroll đến một element bằng hashtag","content":"<p>Khi sử dụng hashtag <code class=\"language-text\">#</code> cho attribute <code class=\"language-text\">href</code>, trình duyệt sẽ scroll tới element có id tương ứng <code class=\"language-text\">section-two</code>. Đây là một tính năng từ thời trình duyệt mới ra đời.</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#section-two<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Section Two<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>Nhưng một khi chúng ta thêm một element với <code class=\"language-text\">position: fixed</code>,  như header, vị trí scroll đến sẽ ko còn đúng nữa, nó vẫn scroll tới element đó, nhưng giờ nó có thể bị che bởi element đang set fixed.</p>\n<p>Có rất nhiều cách để giải quyết vấn đề này trước đây, như thêm vào một đoạn padding vào element, hoặc dùng một đoạn javascript để handle, có tất cả <a href=\"http://nicolasgallagher.com/jump-links-and-viewport-positioning/demo/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">5 cách để giải quyết con issue này</a>. </p>\n<p><img src=\"https://res.cloudinary.com/css-tricks/image/upload/c_scale,w_964,f_auto,q_auto/v1553563039/anchor-linking_z85vjt.gif\" alt=\"Fixed Header, Page Links\"></p>\n<p>Giờ đây chúng ta có cách hoàn toàn mới <strong>chỉ với css</strong></p>\n<p>Sử dụng 2 thuộc tính mới là <code class=\"language-text\">scroll-padding</code> và <code class=\"language-text\">scroll-margin</code></p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">body</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">scroll-padding-top</span><span class=\"token punctuation\">:</span> <span class=\"token number\">70</span><span class=\"token unit\">px</span><span class=\"token punctuation\">;</span>\n <span class=\"token comment\">/* giá trị chiều cao của header */</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Hiện tại cái này chỉ chạy tốt trên trình duyệt dùng Chromium</p>\n<iframe height=\"265\" style=\"width: 100%;\" scrolling=\"no\" title=\"Scroll Padding on Fixed Postion Headers\" src=\"//codepen.io/chriscoyier/embed/NJJERg/?height=265&theme-id=0&default-tab=html,result\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href='https://codepen.io/chriscoyier/pen/NJJERg/'>Scroll Padding on Fixed Postion Headers</a> by Chris Coyier \n  (<a href='https://codepen.io/chriscoyier'>@chriscoyier</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://css-tricks.com/fixed-headers-on-page-links-and-overlapping-content-oh-my/\">HFixed Headers, On-Page Links, and Overlapping Content, Oh My!\n</a></p>\n","cover_image":""}},{"node":{"id":"d9e884765bb027ba864e4261490d0bd0","title":"Những cách thay đổi giá trị fill của SVG khi hover","path":"/nhung-cach-thay-doi-gia-tri-fill-cua-svg-khi-hover/","date":"2019-02-10","timeToRead":4,"desc":"Chúng ta có thể định dạng file SVG một cách dễ dàng bằng CSS, chúng ta sẽ tận dụng CSS để thay đổi định dạng khi hover chuột lên. Tất cả những cách có thể làm sẽ được liệt kê trong bài viết này.","content":"<!-- TOC -->\n<ul>\n<li><a href=\"#thay-%C4%91%E1%BB%95i-b%E1%BA%B1ng-gi%C3%A1-tr%E1%BB%8B-fill\">Thay đổi bằng giá trị <code class=\"language-text\">fill</code></a></li>\n<li><a href=\"#css-filters\">CSS Filters</a></li>\n<li><a href=\"#svg-filters\">SVG filters</a></li>\n</ul>\n<!-- /TOC -->\n<p>File SVG</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>svg</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>icon<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>path</span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>svg</span><span class=\"token punctuation\">></span></span></code></pre>\n<h2 id=\"thay-đổi-bằng-giá-trị-fill\"><a href=\"#thay-%C4%91%E1%BB%95i-b%E1%BA%B1ng-gi%C3%A1-tr%E1%BB%8B-fill\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Thay đổi bằng giá trị <code class=\"language-text\">fill</code></h2>\n<p>Cách dễ nhất, 1 dòng css duy nhất</p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\"><span class=\"token class\">.icon</span><span class=\"token pseudo-class\">:hover</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">fill</span><span class=\"token punctuation\">:</span> <span class=\"token hexcode color\">#DA4567</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Tuy nhiên cái này chỉ làm được khi chúng ta sử dụng file svg dạng <em>inline</em>, nếu dùng thẻ <code class=\"language-text\">&lt;img src=&#39;duong-dan-file.svg&#39;&#39;/&gt;</code>, để tách riêng file svg ra cho nó sạch sẽ file html, cached lại hình này trên trình duyệt, thì coi như chúng ta không thực hiện được cách ở trên.</p>\n<h2 id=\"css-filters\"><a href=\"#css-filters\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>CSS Filters</h2>\n<p>Với CSS filters chúng ta có trong tại kha khá đồ chơi <strong>như trong photoshop</strong> để <em>vẽ hoa vẽ lá</em> trên trình duyệt. Filter cũng sẽ được thực hiện sau khi trình duyệt render xong DOM, thực hiện xong bước paint (cái này các bạn phải xem lại critical render path để rõ hơn), nghĩa là nếu ko được hỗ trợ bởi trình duyệt thì cũng ko tới mức bể layout</p>\n<ul>\n<li>brightness(<number-percentage>);</li>\n<li>contrast(<number-percentage>);</li>\n<li>grayscale(<number-percentage>);</li>\n<li>invert(<number-percentage>);</li>\n<li>opacity(<number-percentage>);</li>\n<li>saturate(<number-percentage>);</li>\n<li>sepia(<number-percentage>);</li>\n<li>hue-rotate(<angle>);</li>\n<li>blur(<length>);</li>\n<li>drop-shadow(<length><color>);</li>\n</ul>\n<p>Chúng ta ko có filter nào để thay đổi cụ thể một giá trị màu, chỉ có <code class=\"language-text\">hue-rotate</code> để <strong>chỉnh nhẹ</strong> cái màu đang hiển thị. May mắn là chúng ta có thể kết hợp nhiều giá trị filter cùng một lúc</p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\"><span class=\"token class\">.icon</span><span class=\"token pseudo-class\">:hover</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">filter</span><span class=\"token punctuation\">:</span> <span class=\"token function\">grayscale</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token unit\">%</span><span class=\"token punctuation\">)</span> <span class=\"token function\">sepia</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token unit\">%</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Nếu một trong số các filter ko được hỗ trợ, thì nó <em>nhẹ nhàng</em> cho qua, chứ ko bỏ hết thuộc tính filter. Nếu bạn dùng photoshop rồi, cũng hiểu là thứ tự áp dụng các filter sẽ ảnh hưởng đến kết quả cuối cùng.</p>\n<p><img src=\"https://res.cloudinary.com/css-tricks/image/upload/c_scale,w_891,f_auto,q_auto/v1548375654/s_178E094ED4F0E309B3AB7AE2DA412CE0BF45D3B8E0DADFAE5F16060B35783F80_1548178599920_ScreenShot2019-01-15at16.05.26_nfeayr.png\" alt=\"Những cách thay đổi giá trị fill của SVG khi hover\"></p>\n<p>Để sử dụng <code class=\"language-text\">hue-rotate</code> chúng ta phải dùng một ảnh SVG có màu, lẽ nào bạn dùng ảnh gốc trắng đen rồi css đổ màu vào được?</p>\n<p><img src=\"https://res.cloudinary.com/css-tricks/image/upload/c_scale,w_730,f_auto,q_auto/v1548375670/s_178E094ED4F0E309B3AB7AE2DA412CE0BF45D3B8E0DADFAE5F16060B35783F80_1548178627636_ScreenShot2019-01-16at10.20.53_ze2wh8.png\" alt=\"Những cách thay đổi giá trị fill của SVG khi hover\"></p>\n<p>Trước hết phải <code class=\"language-text\">invert()</code> cái hình xuống, chuyển thành dạng medium grey</p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\"><span class=\"token class\">.icon</span><span class=\"token pseudo-class\">:hover</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">filter</span><span class=\"token punctuation\">:</span> <span class=\"token function\">invert</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p><img src=\"https://res.cloudinary.com/css-tricks/image/upload/c_scale,w_1000,f_auto,q_auto/v1548375770/svg-icon-filter-01_ovjce8.png\" alt=\"Những cách thay đổi giá trị fill của SVG khi hover\"></p>\n<p>Sau đó mới dùng <code class=\"language-text\">sepia()</code></p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\"><span class=\"token class\">.icon</span><span class=\"token pseudo-class\">:hover</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">filter</span><span class=\"token punctuation\">:</span> <span class=\"token function\">invert</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span> <span class=\"token function\">sepia</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p><img src=\"https://res.cloudinary.com/css-tricks/image/upload/c_scale,w_1000,f_auto,q_auto/v1548375803/svg-icon-filter-02_rfpwow.png\" alt=\"Những cách thay đổi giá trị fill của SVG khi hover\"></p>\n<p>Tiếp đến là thêm màu sắc mình yêu thích</p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\"><span class=\"token class\">.icon</span><span class=\"token pseudo-class\">:hover</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">filter</span><span class=\"token punctuation\">:</span> <span class=\"token function\">invert</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span> <span class=\"token function\">sepia</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token function\">hue-rotate</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token unit\">deg</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p><img src=\"https://res.cloudinary.com/css-tricks/image/upload/c_scale,w_1000,f_auto,q_auto/v1548376336/svg-icon-filter-05_b7hae1.png\" alt=\"Những cách thay đổi giá trị fill của SVG khi hover\"></p>\n<p>Tinh chỉnh một chút nữa</p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\"><span class=\"token class\">.icon</span><span class=\"token pseudo-class\">:hover</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">filter</span><span class=\"token punctuation\">:</span> \n    <span class=\"token function\">invert</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">sepia</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">hue-rotate</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token unit\">deg</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">saturate</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">brightness</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p><img src=\"https://res.cloudinary.com/css-tricks/image/upload/c_scale,w_1000,f_auto,q_auto/v1548375874/svg-icon-filter-04_v4mo9x.png\" alt=\"Những cách thay đổi giá trị fill của SVG khi hover\"></p>\n<p>Để dễ hình dung hơn, <a href=\"https://codepen.io/cassie-codes/pen/561304e31eb955362b8d850d7eb7500e\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">dùng tool này của tác giả</a>, kéo thả thấy kết quả</p>\n<p>Tuy nhiên đây cũng chỉ cho được kết quả là một màu tương đối, không chỉ định một màu cụ thể được</p>\n<h2 id=\"svg-filters\"><a href=\"#svg-filters\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>SVG filters</h2>\n<p>Nếu cần hỗ trợ nhiều trình duyệt hơn, màu sắc cụ thể hơn, dùng đến SVG</p>\n<p>Không giống với CSS, chúng ta phải <em>đổ mồ hôi sôi nước miếng</em> mới làm được</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>svg</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&lt;http://www.w3.org/2000/svg><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">version</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1.1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>defs</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>filter</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>id-of-your-filter<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      ...          \n      ...\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>filter</span><span class=\"token punctuation\">></span></span>\n    ...\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>defs</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>svg</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>Chúng ta định nghĩa bằng thẻ <code class=\"language-text\">&lt;filter /&gt;</code>, thẻ này phải nằm trong thẻ <code class=\"language-text\">&lt;defs/&gt;</code></p>\n<p>Trong CSS chúng ta trỏ đến thằng filter ở trên như sau</p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\"><span class=\"token class\">.icon</span><span class=\"token pseudo-class\">:hover</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">filter</span><span class=\"token punctuation\">:</span> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span><span class=\"token string url\">'assets/your-SVG.svg#id-of-your-filter'</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Những filter có thể sử dụng</p>\n<ul>\n<li><code class=\"language-text\">&lt;feBlend&gt;</code></li>\n<li><code class=\"language-text\">&lt;feColorMatrix&gt;</code></li>\n<li><code class=\"language-text\">&lt;feComponentTransfer&gt;</code></li>\n<li><code class=\"language-text\">&lt;feComposite&gt;</code></li>\n<li><code class=\"language-text\">&lt;feConvolveMatrix&gt;</code></li>\n<li><code class=\"language-text\">&lt;feDiffuseLighting&gt;</code></li>\n<li><code class=\"language-text\">&lt;feDisplacementMap&gt;</code></li>\n<li><code class=\"language-text\">&lt;feDropShadow&gt;</code></li>\n<li><code class=\"language-text\">&lt;feFlood&gt;</code></li>\n<li><code class=\"language-text\">&lt;feGaussianBlur&gt;</code></li>\n<li><code class=\"language-text\">&lt;feImage&gt;</code></li>\n<li><code class=\"language-text\">&lt;feMerge&gt;</code></li>\n<li><code class=\"language-text\">&lt;feMorphology&gt;</code></li>\n<li><code class=\"language-text\">&lt;feOffset&gt;</code></li>\n<li><code class=\"language-text\">&lt;feSpecularLighting&gt;</code></li>\n<li><code class=\"language-text\">&lt;feTile&gt;</code></li>\n<li><code class=\"language-text\">&lt;feTurbulence&gt;</code></li>\n</ul>\n<p>Với yêu cầu đổi màu, chúng ta sẽ dùng <code class=\"language-text\">feColorMatrix</code></p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>svg</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&lt;http://www.w3.org/2000/svg><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">version</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1.1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>defs</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>filter</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>id-of-your-filter<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>feColorMatrix</span>\n        <span class=\"token attr-name\">color-interpolation-filters</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>sRGB<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>matrix<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">values</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1 0 0 0 0\n                0 1 0 0 0\n                0 0 1 0 0\n                0 0 0 1 0 <span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>filter</span><span class=\"token punctuation\">></span></span>\n    ...\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>defs</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>svg</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>Cùng xem xét kỹ hơn giá trị matrix chúng ta đã sử dụng ở trên</p>\n<p><img src=\"https://res.cloudinary.com/css-tricks/image/upload/c_scale,w_795,f_auto,q_auto/v1548375895/s_178E094ED4F0E309B3AB7AE2DA412CE0BF45D3B8E0DADFAE5F16060B35783F80_1548179549387_ScreenShot2019-01-16at18.17.32_n1bwdy.png\" alt=\"Những cách thay đổi giá trị fill của SVG khi hover\"></p>\n<p>Các cột giá trị tương ứng là red, green, blue, alpha và multiplier. Chúng ta sẽ ko quan tâm đến giá trị multiplier với nhu cầu đổi màu, chỉ cần 4 giá trị ở đầu.</p>\n<p><img src=\"https://res.cloudinary.com/css-tricks/image/upload/c_scale,w_762,f_auto,q_auto/v1548375908/s_178E094ED4F0E309B3AB7AE2DA412CE0BF45D3B8E0DADFAE5F16060B35783F80_1548179504680_ScreenShot2019-01-16at17.44.47_lin7vm.png\" alt=\"Những cách thay đổi giá trị fill của SVG khi hover\"></p>\n<p>Ví dụ chúng ta muốn set giá trị rgba(0,128,128,1), chuyển nó về giá trị ma trận theo cách tính</p>\n<p><img src=\"https://res.cloudinary.com/css-tricks/image/upload/c_scale,w_816,f_auto,q_auto/v1548375925/s_178E094ED4F0E309B3AB7AE2DA412CE0BF45D3B8E0DADFAE5F16060B35783F80_1548179540671_ScreenShot2019-01-16at18.39.03_oe0itu.png\" alt=\"Những cách thay đổi giá trị fill của SVG khi hover\"></p>\n<blockquote>\n<p>Lưu ý: SVG filter không thực hiện được trên hình nền đen, nên nếu đang là hình đen thì invert nó thành trắng trước khi thực hiện</p>\n</blockquote>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\"><span class=\"token class\">.icon</span><span class=\"token pseudo-class\">:hover</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">filter</span><span class=\"token punctuation\">:</span> <span class=\"token function\">invert</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token unit\">%</span><span class=\"token punctuation\">)</span> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span><span class=\"token string url\">'assets/your-SVG.svg#id-of-your-filter'</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Tiếp tục <a href=\"https://codepen.io/cassie-codes/pen/46c5b9af3e9923138f950bcdd1dfc4af\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">sử dụng công cụ</a> <strong>kéo thả thấy kết quả</strong> của tác giả nếu bạn ko siêng làm toán <strong>mẫu giáo</strong></p>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://css-tricks.com/the-many-ways-to-change-an-svg-fill-on-hover-and-when-to-use-them/\n\">The Many Ways to Change an SVG Fill on Hover (and When to Use Them)</a></p>\n","cover_image":""}},{"node":{"id":"1a3824b9858fba1f8ff1964152e8c531","title":"Dùng Px, Em hay Rem để viết media query","path":"/dung-px-em-hay-rem-de-viet-media-query/","date":"2018-11-26","timeToRead":3,"desc":"Khi viết media query, bạn có bao giờ thắc mắc nên dùng đơn vị nào: px, em hay rem?","content":"<!-- TOC -->\n<ul>\n<li><a href=\"#setup-%C4%91%E1%BB%83-th%E1%BB%AD-nghi%E1%BB%87m\">Setup để thử nghiệm</a></li>\n<li><a href=\"#thay-%C4%91%E1%BB%95i-font-size-%E1%BB%9F-html\">Thay đổi font size ở HTML</a></li>\n<li><a href=\"#user-g%E1%BB%8Di-zoom-in\">User gọi Zoom In</a></li>\n<li><a href=\"#user-thay-%C4%91%E1%BB%95i-gi%C3%A1-tr%E1%BB%8B-font-m%E1%BA%B7c-%C4%91%E1%BB%8Bnh-c%E1%BB%A7a-tr%C3%ACnh-duy%E1%BB%87t\">User thay đổi giá trị font mặc định của trình duyệt</a></li>\n<li><a href=\"#k%E1%BA%BFt-lu%E1%BA%ADn\">Kết luận</a></li>\n</ul>\n<!-- /TOC -->\n<p>Các bạn đọc bài này mình mặc định bạn đã phân biệt được sự khác nhau giữa <code class=\"language-text\">em</code> và <code class=\"language-text\">rem</code></p>\n<h2 id=\"setup-để-thử-nghiệm\"><a href=\"#setup-%C4%91%E1%BB%83-th%E1%BB%AD-nghi%E1%BB%87m\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Setup để thử nghiệm</h2>\n<p>Chúng ta sẽ dùng 3 div tô 3 màu khác nhau để thấy được kết quả dễ dàng</p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\"><span class=\"token class\">.pixel</span></span> <span class=\"token punctuation\">{</span> <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> <span class=\"token color\">red</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token selector\"><span class=\"token class\">.em</span></span> <span class=\"token punctuation\">{</span> <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> <span class=\"token color\">green</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token selector\"><span class=\"token class\">.rem</span></span> <span class=\"token punctuation\">{</span> <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> <span class=\"token color\">blue</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span></code></pre>\n<p>Chúng ta viết query min-width trên 3 element này, thay đổi opacity để thấy được khi nào css này được áp dụng</p>\n<pre class=\"language-scss\"><code class=\"language-scss\"><span class=\"token selector\">.pixel </span><span class=\"token punctuation\">{</span>\n\t<span class=\"token property\">background</span><span class=\"token punctuation\">:</span> <span class=\"token color\">red</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token property\">min-width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">400</span><span class=\"token unit\">px</span><span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token property\">opacity</span><span class=\"token punctuation\">:</span> <span class=\"token number\">.5</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Chúng ta sẽ đặt font-size cho html là 16px = 1em = 1rem. Như vậy 400px = 25em = 25rem</p>\n<pre class=\"language-scss\"><code class=\"language-scss\"><span class=\"token selector\">.em </span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> <span class=\"token color\">green</span><span class=\"token punctuation\">;</span>  \n  <span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token property\">min-width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">25</span><span class=\"token unit\">em</span><span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">opacity</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0.5</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.rem </span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> <span class=\"token color\">blue</span><span class=\"token punctuation\">;</span>  \n  <span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token property\">min-width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">25</span><span class=\"token unit\">rem</span><span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">opacity</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0.5</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Tất cả đều được trigger ở chính xác kích thước 400px</p>\n<p><img src=\"https://zellwk.com/images/2016/media-query-units/control.gif\" alt=\"Dùng Px, Em hay Rem để viết media query\"></p>\n<h2 id=\"thay-đổi-font-size-ở-html\"><a href=\"#thay-%C4%91%E1%BB%95i-font-size-%E1%BB%9F-html\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Thay đổi font size ở HTML</h2>\n<p>Trường hợp phổ biến nhất chúng ta hay gặp là thay đổi font-size trên HTML</p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">html</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> <span class=\"token number\">200</span><span class=\"token unit\">%</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Khi thay đổi font-size lên 200%, nghĩa là 1em = 1rem = 32px. Nếu sự thay đổi font-size này tác động lên <code class=\"language-text\">em</code> và <code class=\"language-text\">rem</code>, chúng ta sẽ thấy 2 element bên dưới trigger ở 800px</p>\n<p>Kết quả trên Chrome, Firefox và IE11, cả 3 thằng đều trigger ở 400px</p>\n<p><img src=\"https://zellwk.com/images/2016/media-query-units/chrome.gif\" alt=\"Dùng Px, Em hay Rem để viết media query\"></p>\n<p>Nếu chạy đúng, <code class=\"language-text\">em</code> và <code class=\"language-text\">rem</code> không nên bị ảnh hưởng bởi thay đổi font-size trên HTML, nó chỉ được phụ thuộc vào font-size mặc định của trình duyệt.</p>\n<p>Tuy nhiên, trên Safari lại cho kết quả không như mong đợi, nó trigger ở 800px</p>\n<p><img src=\"https://zellwk.com/images/2016/media-query-units/safari-200.gif\" alt=\"Dùng Px, Em hay Rem để viết media query\"></p>\n<p>Với kết quả này chúng ta có thể bỏ qua việc sử dụng <code class=\"language-text\">rem</code> với media query vì nó ko đảm bảo chạy đúng trên mọi trình duyệt.</p>\n<p>Tuy nhiên, các thí nghiệm bên dưới chúng ta vẫn đưa <code class=\"language-text\">rem</code> vào cho vui!</p>\n<h2 id=\"user-gọi-zoom-in\"><a href=\"#user-g%E1%BB%8Di-zoom-in\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>User gọi Zoom In</h2>\n<p>Đây cũng là tình huống thường thấy, chữ quá nhỏ, user có xu hướng zoom to lên xem.</p>\n<blockquote>\n<p>Nguyên nhân chính có đơn vị <code class=\"language-text\">em</code> là vì các trình duyệt cũ không thể update giá trị pixel khi user gọi zoom</p>\n</blockquote>\n<p>Trên Chrome, Firefox và IE, <code class=\"language-text\">px</code>, <code class=\"language-text\">em</code>, <code class=\"language-text\">rem</code> xảy ra cùng lúc</p>\n<p><img src=\"https://zellwk.com/images/2016/media-query-units/chrome-zoom.gif\" alt=\"Dùng Px, Em hay Rem để viết media query\"></p>\n<p>Và đương nhiên Safari tiếp tục không giống ai </p>\n<p><img src=\"https://zellwk.com/images/2016/media-query-units/safari-zoom.gif\" alt=\"Dùng Px, Em hay Rem để viết media query\"></p>\n<p>Điều này có nghĩa là, đơn vị pixel không đúng trên mọi browser, bạn nên dừng sử dụng pixel trong câu media query, trừ khi bạn thuộc kiểu sống bất chấp sự tồn tại của safari</p>\n<h2 id=\"user-thay-đổi-giá-trị-font-mặc-định-của-trình-duyệt\"><a href=\"#user-thay-%C4%91%E1%BB%95i-gi%C3%A1-tr%E1%BB%8B-font-m%E1%BA%B7c-%C4%91%E1%BB%8Bnh-c%E1%BB%A7a-tr%C3%ACnh-duy%E1%BB%87t\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>User thay đổi giá trị font mặc định của trình duyệt</h2>\n<p>Rất nhiều developer tin rằng user chả đứa nào thay đổi font size mặc định của trình duyệt, tìm cái thiết đặt này trong trình duyệt đã đủ khó khăn làm user nản chí</p>\n<p>Tuy nhiên đó là niềm tin không có căn cứ, không có dữ liệu chứng minh được, user vẫn có thể google tìm cách thay đổi font size mặc định của trình duyệt, đặc biệt các thanh niên bị cận như mình.</p>\n<p>Nếu chưa biết cách thay đổi font-size mặc định của trình duyệt, mình chỉ cho</p>\n<p>Chrome: <strong>Settings > Show advanced settings > Web content</strong>\nFirefox: <strong>preferences > content > fonts and colors</strong>\nIE: <strong>page > text-size</strong></p>\n<p>Safari thì mình chưa biết thay đổi font-size của nó bằng cách nào.</p>\n<p><img src=\"https://zellwk.com/images/2016/media-query-units/chrome-very-large-font-size.gif\" alt=\"Dùng Px, Em hay Rem để viết media query\"></p>\n<p>Như có thể thấy, câu query dùng <code class=\"language-text\">px</code> trigger sớm hơn <code class=\"language-text\">em</code> và <code class=\"language-text\">rem</code></p>\n<p>Cái này không phải là bug, vì px là đơn vị chính xác đến từng pixel!!! Nó chỉ cần biết kích thước độ rộng màn hình, không liên quan họ hàng gì tới font-size</p>\n<p>Ngược lại 2 đơn vị <code class=\"language-text\">rem</code> và <code class=\"language-text\">em</code> phụ thuộc hoàn toàn vào font-size của trình duyệt</p>\n<blockquote>\n<p>Chúng ta phải nói lời chia tay với pixel khi viết media query</p>\n</blockquote>\n<p>Ví dụ bạn setup để màn hình dưới 600px có một cột, ngược lại có 2 cột. Mọi thứ đẹp nếu font size là 16px, tuy nhiên nếu user đổi font size thành 20px và xem ở màn hình 650px. Đơn vị <code class=\"language-text\">rem</code> và <code class=\"language-text\">em</code> sẽ cho ra giao diện 1 cột, trong khi pixel vẫn <em>lì lợm</em> 2 cột bất chấp cái font chữ giờ đã to đùng.</p>\n<h2 id=\"kết-luận\"><a href=\"#k%E1%BA%BFt-lu%E1%BA%ADn\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Kết luận</h2>\n<p><strong>Đơn vị cho kết quả chấp nhận được ở mọi tình huống là <code class=\"language-text\">em</code></strong></p>\n<p>Nếu từng thắc mắc khi đang dùng một thư viện nào đó, như bootstrap, tại sao nó lại dùng đơn vị <code class=\"language-text\">em</code> trong câu media query, thì giờ bạn đã có câu trả lời rồi đó.</p>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://zellwk.com/blog/media-query-units/\">PX, EM or REM Media Queries?</a></p>\n","cover_image":""}},{"node":{"id":"e9d2a9d4a3ed5b8ecc39c580a3f2ffb8","title":"Giới thiệu Markdown","path":"/gioi-thieu-markdown/","date":"2018-11-03","timeToRead":2,"desc":"Markdown vở lòng cho bạn nào chưa biết","content":"<!-- TOC -->\n<ul>\n<li><a href=\"#markdown---ng%C3%B4n-ng%E1%BB%AF-d%C3%A0nh-%C4%91%E1%BB%83-so%E1%BA%A1n-th%E1%BA%A3o-tr%C3%AAn-web\">Markdown - Ngôn ngữ dành để soạn thảo trên web</a></li>\n<li><a href=\"#t%E1%BA%A1i-sao-b%E1%BA%A1n-n%C3%AAn-t%C3%ACm-hi%E1%BB%83u-v%C3%A0-s%E1%BB%AD-d%E1%BB%A5ng-markdown\">Tại sao bạn nên tìm hiểu và sử dụng markdown</a></li>\n<li><a href=\"#c%C3%A1ch-vi%E1%BA%BFt-c%C3%B3-%C4%91%E1%BB%8Bnh-d%E1%BA%A1ng\">Cách viết có định dạng</a></li>\n<li><a href=\"#s%E1%BB%AD-d%E1%BB%A5ng-markdown-v%E1%BB%9Bi-gmail\">Sử dụng Markdown với gmail</a></li>\n</ul>\n<!-- /TOC -->\n<h1 id=\"markdown---ngôn-ngữ-dành-để-soạn-thảo-trên-web\"><a href=\"#markdown---ng%C3%B4n-ng%E1%BB%AF-d%C3%A0nh-%C4%91%E1%BB%83-so%E1%BA%A1n-th%E1%BA%A3o-tr%C3%AAn-web\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Markdown - Ngôn ngữ dành để soạn thảo trên web</h1>\n<p>Markdown không phải là ngôn ngữ mới được giới thiệu để thay thế ngôn ngữ hiển thị văn bản trên web hiện tại - HTML, là ngôn ngữ được phát triển với mục đích dễ viết, dễ học và dễ đọc cho những người không muốn học các tag html hoặc viết các tag html rối mắt, những vẫn đáp ứng được một định dạng văn bản \"chuẩn web\". Nói cách khác, Markdown là một công cụ chuyển đổi file text thông thường sang HTML.</p>\n<p>Nói Markdown không phải là ngôn ngữ mới bởi nó đã được phát triển từ tháng 5, 2004, bởi John Gruber và Aaron Swartz, nhưng chưa được nhiều ở Việt Nam biết đến, với những người thường xuyên làm việc với văn bản trên web, sử dụng bộ text editor (WYSIWYG) để hỗ trợ định dạng văn bản vẫn được xem là cách dễ dàng và nhanh nhất. Với cộng đồng người dùng trên Github, StackOverflow, Markdown là ngôn ngữ chính thống để viết lách</p>\n<h1 id=\"tại-sao-bạn-nên-tìm-hiểu-và-sử-dụng-markdown\"><a href=\"#t%E1%BA%A1i-sao-b%E1%BA%A1n-n%C3%AAn-t%C3%ACm-hi%E1%BB%83u-v%C3%A0-s%E1%BB%AD-d%E1%BB%A5ng-markdown\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Tại sao bạn nên tìm hiểu và sử dụng markdown</h1>\n<p>Mục tiêu lớn nhất mà markdown ra đời là làm đơn giản và dễ đọc nhất có thể, để một người không quen với các thẻ <code class=\"language-text\">html</code> vẫn có thể hiểu được và viết được một văn bản chỉnh chu trên web.</p>\n<p>Ví dụ đây là html</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>Tại sao <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>em</span><span class=\"token punctuation\">></span></span>bạn nên sử dụng markdown<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>em</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.anluu.com<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Markdown<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span> cực kỳ dễ hiểu, nó sẽ làm <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>em</span><span class=\"token punctuation\">></span></span>việc soạn thảo một văn bản trên web<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>em</span><span class=\"token punctuation\">></span></span> không quá phức tạp như bạn nghĩ. <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>strong</span><span class=\"token punctuation\">></span></span>Cam đoan.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>strong</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>Còn đây là markdown</p>\n<pre class=\"language-markdown\"><code class=\"language-markdown\"><span class=\"token title important\"><span class=\"token punctuation\">#</span> Tại sao *bạn nên sử dụng markdown*</span>\n<span class=\"token url\">[<span class=\"token content\">Markdown</span>](<span class=\"token url\">http://www.anluu.com</span>)</span> cực kỳ dễ hiểu, nó sẽ làm <span class=\"token italic\"><span class=\"token punctuation\">*</span><span class=\"token content\">việc soạn thảo một văn bản trên web </span><span class=\"token punctuation\">*</span></span>\n không quá phức tạp như bạn nghĩ. <span class=\"token bold\"><span class=\"token punctuation\">**</span><span class=\"token content\">Cam đoan.</span><span class=\"token punctuation\">**</span></span></code></pre>\n<h1 id=\"cách-viết-có-định-dạng\"><a href=\"#c%C3%A1ch-vi%E1%BA%BFt-c%C3%B3-%C4%91%E1%BB%8Bnh-d%E1%BA%A1ng\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Cách viết có định dạng</h1>\n<p>Định dạng cho Heading</p>\n<pre class=\"language-markdown\"><code class=\"language-markdown\"><span class=\"token title important\"><span class=\"token punctuation\">#</span> Tiêu đề cấp 1</span>\n<span class=\"token title important\"><span class=\"token punctuation\">##</span> Tiêu đề cấp 2</span>\n<span class=\"token title important\"><span class=\"token punctuation\">###</span> Tiêu đề cấp 3</span>\n<span class=\"token title important\"><span class=\"token punctuation\">####</span> Tiêu đề cấp 4</span>\n<span class=\"token title important\"><span class=\"token punctuation\">#####</span> Tiêu đề cấp 5</span>\n<span class=\"token title important\"><span class=\"token punctuation\">######</span> Tiêu đề cấp 6</span></code></pre>\n<p>Blockquote</p>\n<pre class=\"language-markdown\"><code class=\"language-markdown\"><span class=\"token blockquote punctuation\">></span> Nội dung trích dẫn</code></pre>\n<p>Image</p>\n<pre class=\"language-markdown\"><code class=\"language-markdown\"><span class=\"token url\"><span class=\"token operator\">!</span>[<span class=\"token content\">Mô tả cho hình</span>](<span class=\"token url\">http://www.anluu.com/hinh.jpg</span>)</span></code></pre>\n<p>Link</p>\n<pre class=\"language-markdown\"><code class=\"language-markdown\"><span class=\"token url\">[<span class=\"token content\">Liên kết</span>](<span class=\"token url\">http://www.anluu.com</span>)</span></code></pre>\n<p>Danh sách</p>\n<pre class=\"language-markdown\"><code class=\"language-markdown\"><span class=\"token list punctuation\">*</span> Node\n    <span class=\"token list punctuation\">*</span> Child node\n    <span class=\"token list punctuation\">*</span> Child node 2\n<span class=\"token list punctuation\">*</span> Node 2 \n<span class=\"token list punctuation\">*</span> Node 3</code></pre>\n<p>Hoặc</p>\n<pre class=\"language-markdown\"><code class=\"language-markdown\"><span class=\"token list punctuation\">*</span> Node\n    <span class=\"token list punctuation\">*</span> Child node\n    <span class=\"token list punctuation\">*</span> Child node 2\n<span class=\"token list punctuation\">*</span> Node 2 \n<span class=\"token list punctuation\">*</span> Node 3</code></pre>\n<h1 id=\"sử-dụng-markdown-với-gmail\"><a href=\"#s%E1%BB%AD-d%E1%BB%A5ng-markdown-v%E1%BB%9Bi-gmail\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Sử dụng Markdown với gmail</h1>\n<p>Để viết email sử dụng markdown bằng Google Chrome, Firefox, Thunderbird, bạn cần tải thêm extension tại địa chỉ</p>\n<ul>\n<li><a href=\"https://chrome.google.com/webstore/detail/elifhakcjgalahccnjkneoccemfahfoa\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Bản dùng cho Chrome</a></li>\n<li><a href=\"https://addons.mozilla.org/en-US/firefox/addon/markdown-here/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Bản dùng cho Firefox, Thunderbird, Postbox</a></li>\n</ul>\n<p>Sau khi cài đặt thành công, biểu tượng Markdown sẽ hiển thị trên thanh toolbar</p>\n<p>Các ứng dụng, web đã test và sử dụng tốt</p>\n<ul>\n<li>Gmail</li>\n<li>Thunderbird</li>\n<li>Hotmail</li>\n<li>Wordpress</li>\n<li>Tumblr</li>\n<li>Evernote (Web)</li>\n</ul>\n","cover_image":""}},{"node":{"id":"0e6fab515f99293daa112ff5a5f5cd6f","title":"Sử dụng border-radius để vẽ custom shape","path":"/su-dung-border-radius-de-ve-custom-shape/","date":"2018-10-22","timeToRead":1,"desc":"Trick hay trong CSS sử dụng border-radius để vẽ hình","content":"<p>Anh <a href=\"https://9elements.com/io/css-border-radius/\" target=\"_blank\" rel=\"noopener noreferrer\">Nils Binder</a> nghĩ ra một trick khá hay để vẽ hình bằng <code class=\"language-text\">border-radius</code></p>\n<p>Bạn có thể dùng ngay luôn <a href=\"https://9elements.github.io/fancy-border-radius/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">công cụ anh này làm</a>, kéo chỉnh theo ý muốn, rồi copy giá trị.</p>\n<p><strong>Giải thích cách làm này</strong></p>\n<p><img src=\"https://9elements.com/blog/content/images/border-radius-2.png\" alt=\"Sử dụng border-radius để vẽ custom shape\"></p>\n<p>Nếu chúng ta set <code class=\"language-text\">border-radius: 50%</code>, giá trị % này là dựa trên chiều rộng và cao của element. Nếu element hình vuông, chúng ta có một hình tròn, là hình chữ nhật? chúng ta không nhận được hình tròn nữa.</p>\n<p>Nếu set 4 giá trị khác nhau cho 4 góc</p>\n<p><img src=\"https://9elements.com/blog/content/images//border-radius-3.png\" alt=\"Sử dụng border-radius để vẽ custom shape\"></p>\n<p>Mấy cách làm trên không có gì đặc biệt, điều đặc biệt là khi dùng giá trị với dấu <code class=\"language-text\">/</code>, theo kiểu</p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\"><span class=\"token class\">.element</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> a b c d <span class=\"token operator\">/</span> e f g h<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Theo W3C định nghĩa 4 giá trước <code class=\"language-text\">/</code> sẽ là radius cho hướng nằm ngang, 4 giá trị sau <code class=\"language-text\">/</code> là giá trị radius cho hướng thẳng đứng, nếu không có dấu <code class=\"language-text\">/</code> coi như 2 giá trị này bằng nhau.</p>\n<p>Như vậy, nếu set <code class=\"language-text\">border-radius: 4em 8em</code> sẽ khác với <code class=\"language-text\">border-radius: 4em / 8em</code></p>\n<p><img src=\"https://9elements.com/blog/content/images//border-radius-4.png\" alt=\"Sử dụng border-radius để vẽ custom shape\"></p>\n<p>Với cách làm này, ta có kết quả</p>\n<p><img src=\"https://9elements.com/blog/content/images//border-radius-5.png\" alt=\"Sử dụng border-radius để vẽ custom shape\"></p>\n<p><img src=\"https://9elements.com/blog/content/images//border-radius-6.png\" alt=\"Sử dụng border-radius để vẽ custom shape\"></p>\n<p>Dễ như ăn cơm sườn há!!</p>\n","cover_image":""}},{"node":{"id":"f8528e820fefc73636e76fd4e555b660","title":"Sử dụng CSS content như thế nào cho đúng","path":"/su-dung-css-content-nhu-the-nao-cho-dung/","date":"2018-10-13","timeToRead":1,"desc":"Thuộc tính content trong CSS thường được sử dụng cùng với 2 ghost element là after và before, những giá trị nào có thể đưa vào cho thuộc tính content này","content":"<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> \n  <span class=\"token attr-name\">data-done</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token entity\" title=\"&#x2705;\">&amp;#x2705;</span><span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>email<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    chriscoyier@gmail.com\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\"><span class=\"token class\">.email</span><span class=\"token pseudo-element\">::before</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* Chèn trước thẻ div giá trị của data-done + Email: */</span>\n  <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token function\">attr</span><span class=\"token punctuation\">(</span>data-done<span class=\"token punctuation\">)</span> <span class=\"token string\">\" Email: \"</span><span class=\"token punctuation\">;</span> \n<span class=\"token punctuation\">}</span></code></pre>\n<p><img src=\"https://res.cloudinary.com/css-tricks/image/upload/c_scale,w_562,f_auto,q_auto/v1537973143/psuedo_brk7jp.png\" alt=\"Sử dụng CSS content như thế nào cho đúng\"></p>\n<p>Không phải giá trị nào đưa vào content này cũng hợp lệ</p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token comment\">/* Được */</span>\n<span class=\"token selector\"><span class=\"token pseudo-element\">::after</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token comment\">/* Không được */</span>\n<span class=\"token selector\"><span class=\"token pseudo-element\">::after</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Không thể tính toán gì đâu, nó chỉ là string thôi</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">data-price</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>4<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-sale-modifier</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0.9<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Coffee<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token comment\">/* Méo chạy */</span>\n<span class=\"token selector\">div<span class=\"token pseudo-element\">::after</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\" $\"</span> \n    <span class=\"token function\">calc</span><span class=\"token punctuation\">(</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span>data-price<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token function\">attr</span><span class=\"token punctuation\">(</span>data-sale-modifier<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">/* Nope */</span>\n<span class=\"token selector\"><span class=\"token pseudo-element\">::after</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token function\">calc</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Muốn nối chuỗi ư?</p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token comment\">/* Không chạy đâu, không phải javascript hay php */</span>\n<span class=\"token selector\"><span class=\"token pseudo-element\">::after</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"1\"</span> . <span class=\"token string\">\"2\"</span> . <span class=\"token string\">\"3\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"1\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"2\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"3\"</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">/* Dùng bình thường thế này thôi */</span>\n  <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"1\"</span> <span class=\"token string\">\"2\"</span> <span class=\"token string\">\"3\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"1 2 3\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Đường dẫn hình thì được, mà không cho thay đổi kích thước hình ¯_(ツ)_/</p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">p<span class=\"token pseudo-element\">:before</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span>image.jpg<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p><a href=\"https://css-tricks.com/valid-css-content/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Link bài viết gốc</a></p>\n","cover_image":""}},{"node":{"id":"5e5aab6671d29eeda0033f9918c502ac","title":"Những điều có thể làm với pointer-events","path":"/nhung-dieu-co-the-lam-voi-pointer-events/","date":"2018-08-01","timeToRead":1,"desc":"Một vài ứng dụng khác của pointer-events","content":"<p><code class=\"language-text\">pointer-events</code> thường được sử dụng nhất để bỏ qua sự kiện click trên element.</p>\n<h1 id=\"thay-đổi-style-của-element-parent-khi-hover\"><a href=\"#thay-%C4%91%E1%BB%95i-style-c%E1%BB%A7a-element-parent-khi-hover\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Thay đổi style của element parent khi hover</h1>\n<p>Khi button được hover lên, chúng ta thay đổi style của thằng cha</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>parent<span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>btn<span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">></span></span>\n    Hover me\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\"><span class=\"token class\">.parent</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">pointer-events</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">transition</span><span class=\"token punctuation\">:</span> border-color <span class=\"token number\">0.15</span><span class=\"token unit\">s</span> ease-in-out<span class=\"token selector\">;\n  &amp;<span class=\"token pseudo-class\">:hover</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">border-color</span><span class=\"token punctuation\">:</span> <span class=\"token hexcode color\">#0069d9</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\"><span class=\"token class\">.btn</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">pointer-events</span><span class=\"token punctuation\">:</span> auto<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Nếu đoạn code trên ko set <code class=\"language-text\">pointer-events: none</code> thì khi ta hover lên <code class=\"language-text\">&lt;div class=&#39;parent&#39;/&gt;</code> nó sẽ thay đổi ngay, ở đây ta đang chặn lại để sự thay đổi chỉ xảy ra khi hover lên button</p>\n<h1 id=\"thay-đổi-style-của-element-khác\"><a href=\"#thay-%C4%91%E1%BB%95i-style-c%E1%BB%A7a-element-kh%C3%A1c\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Thay đổi style của element khác</h1>\n<p>Khi hover lên <code class=\"language-text\">.btn</code>, <code class=\"language-text\">.element</code> sẽ thay đổi màu text</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>parent<span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>btn<span class=\"token punctuation\">'</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>element<span class=\"token punctuation\">'</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\"><span class=\"token class\">.parent</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">pointer-events</span><span class=\"token punctuation\">:</span> none<span class=\"token selector\">;\n  &amp;<span class=\"token pseudo-class\">:hover</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token selector\"><span class=\"token class\">.element</span></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token hexcode color\">#28a745</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\"><span class=\"token class\">.btn</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">pointer-events</span><span class=\"token punctuation\">:</span> auto<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p><a href=\"https://codepen.io/MartijnCuppens/pen/MBjqbM\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Xem toàn bộ demo</a></p>\n","cover_image":""}},{"node":{"id":"ffeea5b9452c4a7e8d3f574163978d1d","title":"Tầm quan trọng của thuộc tính sizes, srcset trong thẻ img","path":"/tam-quan-trong-cua-thuoc-tinh-sizes-srcset-trong-the-img/","date":"2018-07-30","timeToRead":3,"desc":"Hướng dẫn sử dụng srcset và sizes để tối ưu việc load ảnh responsive","content":"<h2 id=\"srcset\"><a href=\"#srcset\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a><code class=\"language-text\">srcset</code></h2>\n<p>Công dụng của thuộc tính <code class=\"language-text\">srcset</code> trên thẻ <code class=\"language-text\">&lt;img/&gt;</code> là cho phép chúng ta cung cấp các file với kích thước khác file được cung cấp trên <code class=\"language-text\">src</code>, chúng ta có thể sử dụng <code class=\"language-text\">srcset</code> vô tư, nếu trình duyệt ko hổ trợ <code class=\"language-text\">srcset</code> (IE cũ), nó đơn giản chỉ load file trên thuộc tính <code class=\"language-text\">src</code>.</p>\n<p>Trên thuộc tính <code class=\"language-text\">srcset</code> chúng ta báo kích thước của hình này luôn, <code class=\"language-text\">medium.jpg 1000w</code> ( có nghĩa hình này width=1000px ) đa phần dùng width có thể giải quyết tất cả các trường hợp, trình duyệt không cần download vẫn biết được độ rộng của file, trên cơ sở đó, trình duyệt tính toán với viewport hiện tại và download hình thích hợp</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span>\n  <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>small.jpg<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">srcset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>medium.jpg 1000w, large.jpg 2000w<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>luckyluu blog | Tầm quan trọng của thuộc tính sizes, srcset trong thẻ img<span class=\"token punctuation\">\"</span></span>\n<span class=\"token punctuation\">></span></span></code></pre>\n<p>Thử xem trình duyệt đã tính toán thế nào. </p>\n<p>Thí dụ kích thước thiết bị là <em>320px</em>, 1x (là giá trị <em>density</em> của màn hình, xem ở đây <a href=\"https://pixensity.com/list/phone/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://pixensity.com/list/phone/</a>, hoặc check bằng javascript <code class=\"language-text\">window.devicePixelRatio</code>).</p>\n<p>Chúng ta có 3 hình</p>\n<ul>\n<li>small.jpg: 500px wide</li>\n<li>medium.jpg: 1000px wide</li>\n<li>large.jpg: 2000px wide</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">500 / 320 = 1.5625\n1000 / 320 = 3.125\n2000 / 320 = 6.25</code></pre>\n<p><em>Trình duyệt</em> - màn hình của mày là 1x, 1.5625 là tỉ lệ gần nhất với 1, tuy hơi cao nhưng tốt hơn mấy thằng kia. Tao load thằng <code class=\"language-text\">small.jpg</code></p>\n<p>Nếu là màn hình 2x (nó sẽ lấy gía trị của <code class=\"language-text\">window.devicePixelRatio</code>), trình duyệt sẽ chọn 3.125 vì nó gần với 2 nhất.</p>\n<p>Bên cạnh đơn vị <code class=\"language-text\">w</code>, tương ứng với kích thước của hình, chúng ta cũng có thể dùng đơn vị <code class=\"language-text\">x</code> tương ứng cho <strong>độ</strong> <em>density</em> của màn hình</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> \n  <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>image_2x.jpg<span class=\"token punctuation\">\"</span></span> \n  <span class=\"token attr-name\">srcset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>image_2x.jpg 2x, image_1x.jpg 1x<span class=\"token punctuation\">\"</span></span> \n  <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>luckyluu blog | Tầm quan trọng của thuộc tính sizes, srcset trong thẻ img<span class=\"token punctuation\">\"</span></span>\n<span class=\"token punctuation\">/></span></span></code></pre>\n<h2 id=\"sizes\"><a href=\"#sizes\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a><code class=\"language-text\">sizes</code></h2>\n<p>Bên cạnh <code class=\"language-text\">srcset</code>, một thuộc tính rất hay ho khác là <code class=\"language-text\">sizes</code>, nó cũng sẽ giúp trình duyệt có cơ sở để load hình nào</p>\n<blockquote>\n<p>Nếu không dùng thuộc tính <code class=\"language-text\">sizes</code>. Trình duyệt ngầm hiểu chúng ta muốn render ảnh ở độ rộng 100vw.</p>\n</blockquote>\n<p><img src=\"https://res.cloudinary.com/css-tricks/image/upload/c_scale,w_1000,f_auto,q_auto/v1531489586/640-version_txwye1.png\" alt=\"Tầm quan trọng của thuộc tính sizes trong thẻ img\"></p>\n<p>Không phải lúc nào hình sẽ hiển thị hết 100vw của màn hình, ví dụ bạn có mà hình rộng 1000px, hình không hiển thị hết chiều ngang của màn hình, nhỏ hơn một nữa đi, tức là bạn chỉ cần hình có kích thước <code class=\"language-text\">1000/2 = 500px</code> là đủ xài</p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">img</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">float</span><span class=\"token punctuation\">:</span> left<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">500</span><span class=\"token unit\">px</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Trước khi trình duyệt load được css, nó sẽ <strong>ko biết được</strong> là hình chỉ có hiển thị tối đa 500px, chúng ta báo với nó, \"Ê, hình này của tao chỉ hiển thị tối đa là 500px nhé\" bằng HTML</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span>\n  <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>small.jpg<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">srcset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>medium.jpg 1000w, large.jpg 2000w<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>luckyluu blog | Tầm quan trọng của thuộc tính sizes, srcset trong thẻ img<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">sizes</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>500px<span class=\"token punctuation\">\"</span></span>\n<span class=\"token punctuation\">></span></span></code></pre>\n<p>Nhưng trên điện thoại, chúng ta muốn khác, hình này sẽ full hết 100% viewport,</p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">600</span><span class=\"token unit\">px</span><span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token selector\">img</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">float</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token unit\">vw</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Để báo với trình duyệt có một sự thay đổi *nhỏ** trên nếu màn hình &#x3C; 600px, chúng ta khai báo thuộc tính <code class=\"language-text\">sizes</code> như sau</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> \n  <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>small.jpg<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">srcset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>medium.jpg 1000w, large.jpg 2000w<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>luckyluu blog | Tầm quan trọng của thuộc tính sizes, srcset trong thẻ img<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">sizes</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>(max-width: 600px) 100vw, 500px<span class=\"token punctuation\">\"</span></span>\n<span class=\"token punctuation\">/></span></span></code></pre>\n<p>Đoạn trên nếu dịch rad: ê trình duyệt, hình này sẽ render kích thước 100vw khi viewport &#x3C; 600px, còn lại cứ dùng kích thước 500px</p>\n<p><img src=\"https://res.cloudinary.com/css-tricks/image/upload/c_scale,w_1000,f_auto,q_auto/v1531489882/320-version_afwzxa.png\" alt=\"Tầm quan trọng của thuộc tính sizes trong thẻ img\"></p>\n<p>Kích thước trên mobile</p>\n<p><img src=\"https://res.cloudinary.com/css-tricks/image/upload/c_scale,w_1000,f_auto,q_auto/v1531490069/640-version-mobile_l15ira.png\" alt=\"Tầm quan trọng của thuộc tính sizes trong thẻ img\"></p>\n<p><a href=\"https://css-tricks.com/sometimes-sizes-is-quite-important/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">css-tricks.com/sometimes-sizes-is-quite-important</a></p>\n<p><a href=\"https://css-tricks.com/responsive-images-youre-just-changing-resolutions-use-srcset/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Responsive Images: If you’re just changing resolutions, use srcset.</a></p>\n","cover_image":""}},{"node":{"id":"4e4fa00c4bfe1830c7cad81388bf04ae","title":"Tạo animation với kỹ thuật FLIP","path":"/tao-animation-voi-ky-thuat-flip/","date":"2018-07-25","timeToRead":5,"desc":"Trong bài này chúng ta sẽ tìm hiểu kỹ thuật FLIP có thể sử dụng để animate position và kích thước của bất kỳ DOM element nào","content":"<h2 id=\"tại-sao-sử-dụng-kỹ-thuật-flip\"><a href=\"#t%E1%BA%A1i-sao-s%E1%BB%AD-d%E1%BB%A5ng-k%E1%BB%B9-thu%E1%BA%ADt-flip\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Tại sao sử dụng kỹ thuật FLIP</h2>\n<p>Đã bao lần bạn cần làm animate cho các property <code class=\"language-text\">height</code>, <code class=\"language-text\">width</code>, <code class=\"language-text\">top</code>, <code class=\"language-text\">left</code>? Bạn có để ý là những animate như vậy thường sẽ hơi khực khực. Lý do? những property này trigger <strong>layout change</strong>, trình duyệt sẽ xem xét các element khác có cần thay đổi gì không, việc này sẽ tiêu tốn <em>sức người, tiền bạc</em> của trình duyệt. Xem thêm bài viết <a href=\"https://aerotwist.com/blog/pixels-are-expensive/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Pixel are Expensive</a> tác giả Paul Lewis sẽ nói rõ hơn.</p>\n<p>Nói một cách khác, chúng ta muốn việc tính toán này hạn chế ở mức tối đa, nhanh nhất có thể. Mục tiêu là chúng ta chỉ animate trên <code class=\"language-text\">transform</code> và <code class=\"language-text\">opacity</code>. FLIP giải thích làm sao để chúng ta có thể đạt được layout change với chỉ property <code class=\"language-text\">transform</code></p>\n<h2 id=\"flip-là-gì\"><a href=\"#flip-l%C3%A0-g%C3%AC\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>FLIP là gì</h2>\n<p>FLIP là viết tắt của <strong>First, Last, Invert, Play</strong></p>\n<ul>\n<li><strong>First</strong> trước khi mọi thứ bắt đầu, lưu lại giá trị <em>position</em> và kích thước của element muốn <em>transition</em>. Có thể sử dụng <code class=\"language-text\">element.getBoundingClientRect()</code></li>\n<li><strong>Last</strong> thực thi đoạn code sẽ gây ra <em>transition</em> trong khoản thời gian gần như là tức thì, lưu lại giá trị <em>position</em> và kích thước của element lúc đó.</li>\n<li><strong>Invert</strong> do element đang ở vị trí cuối cùng, chúng ta muốn user nghĩ đó là ví trí đầu tiên, bằng cách sử dụng <code class=\"language-text\">transform</code> để thay đổi lại position và kích thước. Tính toán xíu, nhưng không thành vấn đề.</li>\n<li><strong>Play</strong> với element đã bị <em>invert</em>, chúng ta lại move nó lại vào vị trí cuối một lần nữa bằng <code class=\"language-text\">transform: none</code></li>\n</ul>\n<p>Implement bên dưới sử dụng Web Animation API</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> elm <span class=\"token operator\">=</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.some-element'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> first <span class=\"token operator\">=</span> elm<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getBoundingClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// chạy đoạn script thực hiện change layout</span>\n<span class=\"token function\">doSomething</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// last: lấy giá trị cuối</span>\n<span class=\"token keyword\">const</span> last <span class=\"token operator\">=</span> elm<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getBoundingClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// invert: xác định sự khác nhau giữa giá trị first và last để mà invert</span>\n<span class=\"token keyword\">const</span> deltaX <span class=\"token operator\">=</span> first<span class=\"token punctuation\">.</span><span class=\"token property-access\">left</span> <span class=\"token operator\">-</span> last<span class=\"token punctuation\">.</span><span class=\"token property-access\">left</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> deltaY <span class=\"token operator\">=</span> first<span class=\"token punctuation\">.</span><span class=\"token property-access\">top</span> <span class=\"token operator\">-</span> last<span class=\"token punctuation\">.</span><span class=\"token property-access\">top</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> deltaW <span class=\"token operator\">=</span> first<span class=\"token punctuation\">.</span><span class=\"token property-access\">width</span> <span class=\"token operator\">/</span> last<span class=\"token punctuation\">.</span><span class=\"token property-access\">width</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> deltaH <span class=\"token operator\">=</span> first<span class=\"token punctuation\">.</span><span class=\"token property-access\">height</span> <span class=\"token operator\">/</span> last<span class=\"token punctuation\">.</span><span class=\"token property-access\">height</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Play</span>\nelm<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">animate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span>\n  transformOrigin<span class=\"token operator\">:</span> <span class=\"token string\">'top left'</span><span class=\"token punctuation\">,</span>\n  transform<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n    translate(</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>deltaX<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">px, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>deltaY<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">px)\n    scale(</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>deltaW<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>deltaH<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">)\n  </span><span class=\"token template-punctuation string\">`</span></span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  transformOrigin<span class=\"token operator\">:</span> <span class=\"token string\">'top left'</span><span class=\"token punctuation\">,</span>\n  transform<span class=\"token operator\">:</span> <span class=\"token string\">'none'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  duration<span class=\"token operator\">:</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span>\n  easing<span class=\"token operator\">:</span> <span class=\"token string\">'ease-in-out'</span><span class=\"token punctuation\">,</span>\n  fill<span class=\"token operator\">:</span> <span class=\"token string\">'both'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Lưu ý Web Animation API chưa support bởi tất cả trình duyệt, dùng <a href=\"https://github.com/web-animations/web-animations-js\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">polyfill</a></p>\n<p data-height=\"265\" data-theme-id=\"0\" data-slug-hash=\"EbwrQQ\" data-default-tab=\"css,result\" data-user=\"davidkpiano\" data-pen-title=\"How the FLIP technique works\" class=\"codepen\">See the Pen <a href=\"https://codepen.io/davidkpiano/pen/EbwrQQ/\">How the FLIP technique works</a> by David Khourshid (<a href=\"https://codepen.io/davidkpiano\">@davidkpiano</a>) on <a href=\"https://codepen.io\">CodePen</a>.</p>\n<script async src=\"https://static.codepen.io/assets/embed/ei.js\"></script>\n<p>Có 2 điểm quan trọng cần lưu ý</p>\n<ul>\n<li>Khi element thay đổi kích thước, khi dùng <code class=\"language-text\">scale</code> sẽ không ảnh hưởng performance, tuy nhiên nhớ đặt <code class=\"language-text\">transformOrigin: &#39;top left&#39;</code></li>\n<li>Đang sử dụng Web Animation API, nhưng ý tưởng này có thể hiện thực bằng GSAP, Anime, Velocity, Just-Animate, Mo.j hoặc bất kỳ thư viện animation khác</li>\n</ul>\n<h1 id=\"shared-element-transition\"><a href=\"#shared-element-transition\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Shared element transition</h1>\n<p>Một trường hợp trong transition là element giữa các view hoặc giữa các trạng thái của trang, không phải lúc nào element ở vị trí cuối cũng giống như element lúc bắt đầu.</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> firstElm <span class=\"token operator\">=</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.first-element'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// First</span>\n<span class=\"token keyword\">const</span> first <span class=\"token operator\">=</span> firstElm<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getBoundingClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nfirstElm<span class=\"token punctuation\">.</span><span class=\"token property-access\">style</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">setProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">'visibility'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'hidden'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// chạy đoạn script thực hiện change layout</span>\n<span class=\"token function\">doSomething</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Last</span>\n<span class=\"token keyword\">const</span> lastElm <span class=\"token operator\">=</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.last-element'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> last <span class=\"token operator\">=</span> lastElm<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getBoundingClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// giống như các bước ở trên</span>\n<span class=\"token comment\">// ở đây chúng ta đang animate lastElm, không phải firstElm</span></code></pre>\n<h1 id=\"parent-child-transition\"><a href=\"#parent-child-transition\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Parent-child transition</h1>\n<p>Với ví dụ trên, chúng ta đo element với <code class=\"language-text\">window</code>, trong đa số các trường hợp thì ok, tuy nhiên xét thử tình huống</p>\n<ul>\n<li>Element thay đổi vị trí và cần transition</li>\n<li>Element chứa đóng element con, các element con này cũng cần transition vị trí mới theo vị trí của parent</li>\n</ul>\n<p>Để giải quyết, chúng ta cần đảm bảo việc tính toán theo giá trị relative với parent</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> parentElm <span class=\"token operator\">=</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.parent'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> childElm <span class=\"token operator\">=</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.parent > .child'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// First: parent, child</span>\n<span class=\"token keyword\">const</span> parentFirst <span class=\"token operator\">=</span> parentElm<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getBoundingClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> childFirst <span class=\"token operator\">=</span> childElm<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getBoundingClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">doSomething</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Last: parent and child</span>\n<span class=\"token keyword\">const</span> parentLast <span class=\"token operator\">=</span> parentElm<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getBoundingClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> childLast <span class=\"token operator\">=</span> childElm<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getBoundingClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Invert: parent</span>\n<span class=\"token keyword\">const</span> parentDeltaX <span class=\"token operator\">=</span> parentFirst<span class=\"token punctuation\">.</span><span class=\"token property-access\">left</span> <span class=\"token operator\">-</span> parentLast<span class=\"token punctuation\">.</span><span class=\"token property-access\">left</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> parentDeltaY <span class=\"token operator\">=</span> parentFirst<span class=\"token punctuation\">.</span><span class=\"token property-access\">top</span> <span class=\"token operator\">-</span> parentLast<span class=\"token punctuation\">.</span><span class=\"token property-access\">top</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Invert: child relative to parent</span>\n<span class=\"token keyword\">const</span> childDeltaX <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>childFirst<span class=\"token punctuation\">.</span><span class=\"token property-access\">left</span> <span class=\"token operator\">-</span> parentFirst<span class=\"token punctuation\">.</span><span class=\"token property-access\">left</span><span class=\"token punctuation\">)</span>\n  <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>childLast<span class=\"token punctuation\">.</span><span class=\"token property-access\">left</span> <span class=\"token operator\">-</span> parentLast<span class=\"token punctuation\">.</span><span class=\"token property-access\">left</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> childDeltaY <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>childFirst<span class=\"token punctuation\">.</span><span class=\"token property-access\">top</span> <span class=\"token operator\">-</span> parentFirst<span class=\"token punctuation\">.</span><span class=\"token property-access\">top</span><span class=\"token punctuation\">)</span>\n  <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>childLast<span class=\"token punctuation\">.</span><span class=\"token property-access\">top</span> <span class=\"token operator\">-</span> parentLast<span class=\"token punctuation\">.</span><span class=\"token property-access\">top</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Play: dùng WAAPI</span>\nparentElm<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">animate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span> transform<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">translate(</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>parentDeltaX<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">px, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>parentDeltaY<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">px)</span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> transform<span class=\"token operator\">:</span> <span class=\"token string\">'none'</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> duration<span class=\"token operator\">:</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span> easing<span class=\"token operator\">:</span> <span class=\"token string\">'ease-in-out'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nchildElm<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">animate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span> transform<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">translate(</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>childDeltaX<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">px, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>childDeltaY<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">px)</span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> transform<span class=\"token operator\">:</span> <span class=\"token string\">'none'</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> duration<span class=\"token operator\">:</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span> easing<span class=\"token operator\">:</span> <span class=\"token string\">'ease-in-out'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Một vài điểm cần lưu ý</p>\n<ul>\n<li>Giá trị thời gian cho parent và child (duration, easing) không nhất thiết phải khớp, tự do sáng tạo đi!</li>\n<li>Thay đổi kích thước ở parent hoặc child (width, height) không sử dụng ở đây để tránh phức tạp quá ví dụ này</li>\n<li>Có thể kết hợp giữa shared element và parent child cho kết quả dữ dội hơn</li>\n</ul>\n<h1 id=\"sử-dụng-flippingjs\"><a href=\"#s%E1%BB%AD-d%E1%BB%A5ng-flippingjs\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Sử dụng Flipping.js</h1>\n<p>Những kỹ thuật trình bày ở trên rất dễ hiểu, tuy nhiên sẽ hơi rối nếu chúng ta phải từ mò và theo dõi từng element. Tác giả bài viết này đã tạo ra một thư viện là <a href=\"https://github.com/davidkpiano/flipping\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Flipping.js</a> để chúng ta xài cho sướng. Thêm vào <code class=\"language-text\">data-flip-key=&quot;...&quot;</code> vào element làm animate, chúng ta dễ dàng theo dõi được những element có thể thay đổi</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>section</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>gallery<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>photo-1<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-flip-key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>photo-1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/photo-1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>photo-2<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-flip-key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>photo-2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/photo-2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>photo-3<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-flip-key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>photo-3<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/photo-3<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>section</span><span class=\"token punctuation\">></span></span></code></pre>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>section</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>details<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>photo<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-flip-key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>photo-1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/photo-1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>description<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    Lorem ipsum dolor sit amet...\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>section</span><span class=\"token punctuation\">></span></span></code></pre>\n<p><a href=\"https://css-tricks.com/animating-layouts-with-the-flip-technique/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Link bài gốc</a></p>\n","cover_image":""}},{"node":{"id":"03393afe0d7b5976e9c258595df81919","title":"Tạo một animation cho component trong React","path":"/tao-mot-animation-cho-component-trong-react/","date":"2018-07-20","timeToRead":4,"desc":"Sử dụng React, styled-components, react-flip-toolkit để tạo animation giống như mên trên trang chủ của Stripe","content":"<!-- TOC -->\n<ul>\n<li><a href=\"#ph%C3%A2n-t%C3%ADch\">Phân tích</a></li>\n<li><a href=\"#d%E1%BB%B1ng-component-th%C3%B4-ch%C6%B0a-c%C3%B3-animate\">Dựng component thô chưa có animate</a></li>\n<li><a href=\"#animate-v%E1%BB%9Bi-flip-technique\">Animate với Flip technique</a></li>\n<li><a href=\"#ch%C4%83m-ch%C3%BAc\">Chăm chúc</a></li>\n<li><a href=\"#background-animation\">Background animation</a></li>\n</ul>\n<!-- /TOC -->\n<h1 id=\"phân-tích\"><a href=\"#ph%C3%A2n-t%C3%ADch\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Phân tích</h1>\n<p data-height=\"265\" data-theme-id=\"0\" data-slug-hash=\"PaYXEZ\" data-default-tab=\"js,result\" data-user=\"aholachek\" data-embed-version=\"2\" data-pen-title=\"React Stripe Menu\" class=\"codepen\">See the Pen <a href=\"https://codepen.io/aholachek/pen/PaYXEZ/\">React Stripe Menu</a> by Alex (<a href=\"https://codepen.io/aholachek\">@aholachek</a>) on <a href=\"https://codepen.io\">CodePen</a>.</p>\n<script async src=\"https://static.codepen.io/assets/embed/ei.js\"></script>\n<p>Trước tiên phân tích cái animation này ra thành nhiều phần để dể hình dung. Có thể xem dạng slow motion trên Codepen để xem nhé.</p>\n<ul>\n<li>container dropdown màu trắng sẽ thay đổi kích thước và vị trí</li>\n<li>background màu xám ở phía dưới của dropdown transition độ cao</li>\n<li>Khi di chuyển chuột khỏi dropdown, fade out nội dung trước đó đi và chuyển vị trí nó sang element mới, sau đó đưa nội dung mới lên.</li>\n</ul>\n<p>Một vài lưu ý khi làm animation với React, cứ để browser quản lý layout. Thay vì sử dụng các dropdown khác nhau, chúng ta dùng 1 dropdown và thay đổi vị trí của nó, dùng <a href=\"https://css-tricks.com/animating-layouts-with-the-flip-technique/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Flip technique</a> để giả lập như có 3 dropdown khác nhau.</p>\n<h1 id=\"dựng-component-thô-chưa-có-animate\"><a href=\"#d%E1%BB%B1ng-component-th%C3%B4-ch%C6%B0a-c%C3%B3-animate\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Dựng component thô chưa có animate</h1>\n<p data-height=\"265\" data-theme-id=\"0\" data-slug-hash=\"OELrzN\" data-default-tab=\"js,result\" data-user=\"aholachek\" data-embed-version=\"2\" data-pen-title=\"React Stripe Menu Before Animation\" class=\"codepen\">See the Pen <a href=\"https://codepen.io/aholachek/pen/OELrzN/\">React Stripe Menu Before Animation</a> by Alex (<a href=\"https://codepen.io/aholachek\">@aholachek</a>) on <a href=\"https://codepen.io\">CodePen</a>.</p>\n<script async src=\"https://static.codepen.io/assets/embed/ei.js\"></script>\n<p>Để bắt đầu ta dựng một component <code class=\"language-text\">navbar</code> sử dụng <code class=\"language-text\">styled-component</code></p>\n<p>Ở đây thì chưa thêm phần gray background ở dưới dropdown, cái này nó sẽ nằm <code class=\"language-text\">absolute</code></p>\n<h1 id=\"animate-với-flip-technique\"><a href=\"#animate-v%E1%BB%9Bi-flip-technique\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Animate với Flip technique</h1>\n<p>Chúng ta sẽ sử dụng <a href=\"https://github.com/aholachek/react-flip-toolkit\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">react-flip-toolkit</a> để thay đổi kích thước và vị trí dropdown.</p>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Flipper</span></span> <span class=\"token attr-name\">flipKey</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>currentIndex<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Navbar</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token punctuation\">{</span>navbar<span class=\"token punctuation\">.</span><span class=\"token property-access\"><span class=\"token maybe-class-name\">Config</span></span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">n<span class=\"token punctuation\">,</span> index</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// render navbar items</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Navbar</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Flipper</span></span><span class=\"token punctuation\">></span></span></code></pre>\n<p>Ở <code class=\"language-text\">DropdownContainer</code> component, đưa các element sẽ animate vào bên trong <code class=\"language-text\">Flipped</code> component, nhớ giá trị <code class=\"language-text\">flipId</code> phải khác nhau</p>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">DropdownRoot</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Flipped</span></span> <span class=\"token attr-name\">flipId</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>dropdown-caret<span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Caret</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Flipped</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Flipped</span></span> <span class=\"token attr-name\">flipId</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>dropdown<span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">DropdownBackground</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">DropdownBackground</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Flipped</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">DropdownRoot</span></span><span class=\"token punctuation\">></span></span></code></pre>\n<p>Làm 2 cái animate trên <code class=\"language-text\">&lt;Caret/&gt;</code> và <code class=\"language-text\">&lt;DropdownBackground/&gt;</code> riêng biệt, để thuộc tính <code class=\"language-text\">overflow: hidden</code> set trên <code class=\"language-text\">&lt;DropdownBackground /&gt;</code> không ảnh hưởng tới <code class=\"language-text\">&lt;Caret/&gt;</code></p>\n<p>Giờ có 1 vấn đề nhỏ là nội dung bên trong dropdown lúc xuất hiện bị stretch một cách kỳ cục, lý do là thuộc tính <code class=\"language-text\">transforms: scale</code> nó áp luôn trên children. Xử lý cái này bằng cách đưa nội dung này vào trong <code class=\"language-text\">&lt;Flipped/&gt;</code> kèm giá trị cho props <code class=\"language-text\">inverseFlipId</code>, lúc này children sẽ không bị effect từ thằng cha nữa, đồng thời xác định luôn là ko muốn áp thằng <code class=\"language-text\">scale</code></p>\n<p data-height=\"265\" data-theme-id=\"0\" data-slug-hash=\"MXgZxG\" data-default-tab=\"js,result\" data-user=\"aholachek\" data-embed-version=\"2\" data-pen-title=\"React Stripe Menu -- Error #1: no scale adjustment\" class=\"codepen\">See the Pen <a href=\"https://codepen.io/aholachek/pen/MXgZxG/\">React Stripe Menu -- Error #1: no scale adjustment</a> by Alex (<a href=\"https://codepen.io/aholachek\">@aholachek</a>) on <a href=\"https://codepen.io\">CodePen</a>.</p>\n<script async src=\"https://static.codepen.io/assets/embed/ei.js\"></script>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">DropdownRoot</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Flipped</span></span> <span class=\"token attr-name\">flipId</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>dropdown-caret<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Caret</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Flipped</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Flipped</span></span> <span class=\"token attr-name\">flipId</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>dropdown<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">DropdownBackground</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Flipped</span></span> <span class=\"token attr-name\">inverseFlipId</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>dropdown<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">scale</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Flipped</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">DropdownBackground</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Flipped</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">DropdownRoot</span></span><span class=\"token punctuation\">></span></span></code></pre>\n<h1 id=\"chăm-chúc\"><a href=\"#ch%C4%83m-ch%C3%BAc\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Chăm chúc</h1>\n<p>Cũng gần được rồi, chúng ta cần để ý thêm vào những chi tiết nhỏ nhất để animate nhìn cool hơn</p>\n<p>Styled-components hỗ trợ rất tốt việc <a href=\"https://www.styled-components.com/docs/basics#animations\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">thay đổi keyframe animation</a>. Chúng ta sẽ sử dụng tính năng này để làm animation lúc enter và cross-fade nội dung dropdown khi thay đổi ví trí chuột.</p>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getFadeContainerKeyFrame</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> animatingOut<span class=\"token punctuation\">,</span> direction <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>direction<span class=\"token punctuation\">)</span> <span class=\"token keyword control-flow\">return</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword control-flow\">return</span> keyframes<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token css language-css\">\n    <span class=\"token selector\">from</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">translateX</span><span class=\"token punctuation\">(</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>\n        animatingOut <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> direction <span class=\"token operator\">===</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">?</span> <span class=\"token number\">20</span> <span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">20</span>\n      <span class=\"token interpolation-punctuation punctuation\">}</span></span>px<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token selector\">to</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">translateX</span><span class=\"token punctuation\">(</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>\n        <span class=\"token operator\">!</span>animatingOut <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> direction <span class=\"token operator\">===</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">?</span> <span class=\"token operator\">-</span><span class=\"token number\">20</span> <span class=\"token operator\">:</span> <span class=\"token number\">20</span>\n      <span class=\"token interpolation-punctuation punctuation\">}</span></span>px<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token property\">opacity</span><span class=\"token punctuation\">:</span> <span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>animatingOut <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token maybe-class-name\">FadeContainer</span> <span class=\"token operator\">=</span> styled<span class=\"token punctuation\">.</span><span class=\"token property-access\">div</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token css language-css\">\n  <span class=\"token property\">animation-name</span><span class=\"token punctuation\">:</span> <span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>getFadeContainerKeyFrame<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">animation-duration</span><span class=\"token punctuation\">:</span> <span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token parameter\">props</span> <span class=\"token arrow operator\">=></span> props<span class=\"token punctuation\">.</span><span class=\"token property-access\">duration</span> <span class=\"token operator\">*</span> <span class=\"token number\">0.5</span><span class=\"token interpolation-punctuation punctuation\">}</span></span>ms<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">animation-fill-mode</span><span class=\"token punctuation\">:</span> forwards<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> <span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token parameter\">props</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span><span class=\"token property-access\">animatingOut</span> <span class=\"token operator\">?</span> <span class=\"token string\">\"absolute\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"relative\"</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">opacity</span><span class=\"token punctuation\">:</span> <span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token parameter\">props</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span><span class=\"token property-access\">direction</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>props<span class=\"token punctuation\">.</span><span class=\"token property-access\">animatingOut</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">animation-timing-function</span><span class=\"token punctuation\">:</span> linear<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">left</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n</span><span class=\"token template-punctuation string\">`</span></span></code></pre>\n<p data-height=\"265\" data-theme-id=\"0\" data-slug-hash=\"NzPpwG\" data-default-tab=\"js,result\" data-user=\"aholachek\" data-embed-version=\"2\" data-pen-title=\"React Stripe Menu -- Simple FLIP\" class=\"codepen\">See the Pen <a href=\"https://codepen.io/aholachek/pen/NzPpwG/\">React Stripe Menu -- Simple FLIP</a> by Alex (<a href=\"https://codepen.io/aholachek\">@aholachek</a>) on <a href=\"https://codepen.io\">CodePen</a>.</p>\n<script async src=\"https://static.codepen.io/assets/embed/ei.js\"></script>\n<p>Khi user đưa chuột lên menu mới, chúng ta ko chỉ đưa vào dropdown hiện tại mà con dropdown trước đó như children cho <code class=\"language-text\">DropdownContainer</code>, cùng với những thông tin về hướng di chuột của user. Sau đó <code class=\"language-text\">DropdonwContainer</code> sẽ wrap hết tất cả children của nó trong một component mới, <code class=\"language-text\">FadeContents</code>, thằng này sẽ sử dụng keyframe animation code ở trên để thêm animation tương ứng</p>\n<h1 id=\"background-animation\"><a href=\"#background-animation\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Background animation</h1>\n<p>Cuối cùng chúng ta thêm gray background</p>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">updateAltBackground</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>\n  altBackground<span class=\"token punctuation\">,</span>\n  prevDropdown<span class=\"token punctuation\">,</span>\n  currentDropdown\n<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> prevHeight <span class=\"token operator\">=</span> <span class=\"token function\">getFirstDropdownSectionHeight</span><span class=\"token punctuation\">(</span>prevDropdown<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> currentHeight <span class=\"token operator\">=</span> <span class=\"token function\">getFirstDropdownSectionHeight</span><span class=\"token punctuation\">(</span>currentDropdown<span class=\"token punctuation\">)</span>\n  \n  <span class=\"token comment\">// we'll use this function when we want a change </span>\n  <span class=\"token comment\">// to happen immediately, without CSS transitions</span>\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">immediateSetTranslateY</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">el<span class=\"token punctuation\">,</span> translateY</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    el<span class=\"token punctuation\">.</span><span class=\"token property-access\">style</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">transform</span> <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">translateY(</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>translateY<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">px)</span><span class=\"token template-punctuation string\">`</span></span>\n    el<span class=\"token punctuation\">.</span><span class=\"token property-access\">style</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">transition</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"transform 0s\"</span>\n    <span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">(</span>el<span class=\"token punctuation\">.</span><span class=\"token property-access\">style</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">transitionDuration</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>prevHeight<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// transition the grey (\"alt\") background from its previous height</span>\n    <span class=\"token comment\">// to its current height</span>\n    <span class=\"token function\">immediateSetTranslateY</span><span class=\"token punctuation\">(</span>altBackground<span class=\"token punctuation\">,</span> prevHeight<span class=\"token punctuation\">)</span>\n    <span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n      altBackground<span class=\"token punctuation\">.</span><span class=\"token property-access\">style</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">transform</span> <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">translateY(</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>currentHeight<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">px)</span><span class=\"token template-punctuation string\">`</span></span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword control-flow\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// immediately set the background to the appropriate height</span>\n    <span class=\"token comment\">// since we don't have a stored value</span>\n    <span class=\"token function\">immediateSetTranslateY</span><span class=\"token punctuation\">(</span>altBackground<span class=\"token punctuation\">,</span> currentHeight<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p data-height=\"265\" data-theme-id=\"0\" data-slug-hash=\"qKRWBe\" data-default-tab=\"js,result\" data-user=\"aholachek\" data-embed-version=\"2\" data-pen-title=\"React Stripe Menu -- Animated Background\" class=\"codepen\">See the Pen <a href=\"https://codepen.io/aholachek/pen/qKRWBe/\">React Stripe Menu -- Animated Background</a> by Alex (<a href=\"https://codepen.io/aholachek\">@aholachek</a>) on <a href=\"https://codepen.io\">CodePen</a>.</p>\n<script async src=\"https://static.codepen.io/assets/embed/ei.js\"></script>\n<p>Source: <a href=\"https://github.com/aholachek/react-stripe-menu\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/aholachek/react-stripe-menu</a></p>\n<p><a href=\"https://css-tricks.com/building-a-complex-ui-animation-in-react-simply/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Link bài gốc của tác giả</a></p>\n","cover_image":""}},{"node":{"id":"6297a4b130cbfb44751f6a38e22a2c07","title":"Tổng quát về canh lề với Flexbox display","path":"/tong-quat-ve-canh-le-voi-flexbox-display/","date":"2018-07-04","timeToRead":1,"desc":"Bây giờ chưa nắm vững về flexbox và cách canh lề trong flexbox thì thật là thiếu xót trong thời đại 2018, chúng ta đã qua thời xài float, clearfix","content":"<!-- TOC -->\n<ul>\n<li><a href=\"#c%E1%BA%A7n-n%E1%BA%AFm\">Cần nắm</a></li>\n<li><a href=\"#flex-direction\">flex-direction</a></li>\n<li><a href=\"#justify-content\">justify-content</a></li>\n<li><a href=\"#align-items-v%C3%A0-align-self\">align-items và align-self</a></li>\n</ul>\n<!-- /TOC -->\n<h2 id=\"cần-nắm\"><a href=\"#c%E1%BA%A7n-n%E1%BA%AFm\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Cần nắm</h2>\n<p>Khi sử dụng <code class=\"language-text\">display: flex</code> các element con bên trong chúng ta sẽ canh theo 2 phương, gọi là phương ngang và phương đứng</p>\n<p><img src=\"https://cms-assets.tutsplus.com/uploads/users/30/posts/30183/image/axes.png\"></p>\n<h2 id=\"flex-direction\"><a href=\"#flex-direction\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>flex-direction</h2>\n<p><code class=\"language-text\">flex-direction</code> sẽ có 4 giá trị để ta set</p>\n<ol>\n<li><code class=\"language-text\">flex-direction: row</code>: element con xếp theo từng hàng, chỉ xuống hàng khi set <code class=\"language-text\">flex-wrap: wrap</code>, hoặc viết tắt 2 thuộc tính này lại thành <code class=\"language-text\">flex-flow: row wrap</code></li>\n<li><code class=\"language-text\">flex-direction: row-reserve</code>: element con xếp thèo hàng đi từ phải qua trái</li>\n<li><code class=\"language-text\">flex-direction: column</code>: element con xếp theo cột từ trên xuống dưới</li>\n<li><code class=\"language-text\">flex-direction: column-reserve</code>: element con xếp theo cột từ dưới lên trên</li>\n</ol>\n<p><img src=\"http://codropspz.tympanus.netdna-cdn.com/codrops/wp-content/uploads/2015/02/flex-direction-illustration.jpg\"></p>\n<h2 id=\"justify-content\"><a href=\"#justify-content\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>justify-content</h2>\n<p>Với <code class=\"language-text\">justify-content</code> sẽ ảnh hưởng tới <strong>phương ngang</strong> của các element con, nếu <code class=\"language-text\">.container</code> chúng ta xếp các element theo dạng row (mặc định khi set <code class=\"language-text\">display: flex</code>), chúng ta can thiệp chiều xếp element con trong row này bằng <code class=\"language-text\">justify-content</code></p>\n<ol>\n<li><code class=\"language-text\">flex-start</code> : elements từ trái qua phải trong 1 row</li>\n<li><code class=\"language-text\">flex-end</code>: elements từ phải qua trái trong 1 row</li>\n<li><code class=\"language-text\">center</code>: dàn các element từ giữa ra 2 bên</li>\n<li><code class=\"language-text\">space-between</code>: dàn các element đều hết 1 row, chỉ chừa khoảng trống giữa 2 element, không chừa khoảng trống 2 element cuối</li>\n<li><code class=\"language-text\">space-around</code>: tương tự như <code class=\"language-text\">space-around</code> nhưng chừa luôn khoảng trống 2 element cuối</li>\n</ol>\n<p><img src=\"https://uploads.toptal.io/blog/image/122559/toptal-blog-image-1490181185089.2_newsletter_copy_11-ac07811eeed0c992b21c660cd6119ca8.jpg\"></p>\n<h2 id=\"align-items-và-align-self\"><a href=\"#align-items-v%C3%A0-align-self\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>align-items và align-self</h2>\n<p>Thuộc tính <code class=\"language-text\">align-items</code> sẽ ảnh hưởng đến <strong>phương đứng</strong> của element con, nếu <code class=\"language-text\">align-items</code> dùng để set ở <code class=\"language-text\">.container</code>, thì <code class=\"language-text\">align-self</code> sẽ set ở element con để đè lại giá trị trên từng thằng con</p>\n<p>Cả 2 thằng này đều có thể dùng các giá trị sau</p>\n<ol>\n<li><code class=\"language-text\">auto</code> giá trị <code class=\"language-text\">align-self</code> kế thừa từ <code class=\"language-text\">align-items</code>, mặc định của <code class=\"language-text\">align-self</code></li>\n<li><code class=\"language-text\">flex-start</code>: canh từ trên xuống</li>\n<li><code class=\"language-text\">flex-end</code>: canh từ dưới lên</li>\n<li><code class=\"language-text\">center</code>: canh từ giữa ra trên dưới</li>\n<li><code class=\"language-text\">baseline</code>: canh theo baseline của các element nằm ngang nhau</li>\n<li><code class=\"language-text\">stretch</code>: kéo độ cao của element để phủ hết chiều đứng của <code class=\"language-text\">.container</code></li>\n</ol>\n<p><img src=\"https://image.slidesharecdn.com/css3-layoutinctrlpdf-130218082731-phpapp01/95/slide-53-1024.jpg\"></p>\n","cover_image":""}},{"node":{"id":"2789a28cea8d9db34303eb0ac813a357","title":"Hướng dẫn sử dụng thuộc tính counter-reset và counter-increment","path":"/huong-dan-su-dung-thuoc-tinh-counter-reset-va-counter-increment/","date":"2018-05-21","timeToRead":1,"desc":"Nếu muốn đánh số tự động trong css, ta thường sử dụng đến kiểu display list-style, bài này giới thiệu một thuộc tính khác ít ai biết tới","content":"<p>Tương tự như <code class=\"language-text\">&lt;ol&gt;</code>, để có thể đánh số thứ tự một cách tự động cho bất kể element nào, ta có thể dùng cặp thuộc tính <code class=\"language-text\">counter-reset</code> và <code class=\"language-text\">counter-increment</code></p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">article</span> <span class=\"token punctuation\">{</span>\n    // section là một định danh bất kỳ<span class=\"token punctuation\">,</span> giá trị khởi tạo = <span class=\"token number\">0</span>\n    <span class=\"token property\">counter-reset</span><span class=\"token punctuation\">:</span> section<span class=\"token punctuation\">;</span> \n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">section</span> <span class=\"token punctuation\">{</span>\n    // đặt cho đối tượng con<span class=\"token punctuation\">,</span> trên mỗi giá trị section nằm trong article<span class=\"token punctuation\">,</span> counter sẽ tăng lên <span class=\"token number\">1</span>\n    <span class=\"token property\">counter-increment</span><span class=\"token punctuation\">:</span> section<span class=\"token punctuation\">;</span> \n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">section h2<span class=\"token pseudo-element\">:before</span></span> <span class=\"token punctuation\">{</span>\n    // giá trị counter được truyền vào cho thuộc tính content\n    <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token function\">counter</span><span class=\"token punctuation\">(</span>section<span class=\"token punctuation\">)</span> <span class=\"token string\">'. '</span><span class=\"token punctuation\">;</span> \n<span class=\"token punctuation\">}</span></code></pre>\n<p>Nếu không thích kiểu đánh số mặc định là 1, 2, 3 ...., có thể chỉ định bằng cách</p>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">section<span class=\"token pseudo-element\">:before</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token function\">counter</span><span class=\"token punctuation\">(</span>section<span class=\"token punctuation\">,</span> upper-roman<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Hoạt động tốt trên IE8+</p>\n<p>Một số áp dụng tìm trên codepen</p>\n<p data-height=\"265\" data-theme-id=\"0\" data-slug-hash=\"GdXyWo\" data-default-tab=\"css,result\" data-user=\"chriscoyier\" data-embed-version=\"2\" data-pen-title=\"Custom List Style 3\" class=\"codepen\">See the Pen <a href=\"https://codepen.io/chriscoyier/pen/GdXyWo/\">Custom List Style 3</a> by Chris Coyier  (<a href=\"https://codepen.io/chriscoyier\">@chriscoyier</a>) on <a href=\"https://codepen.io\">CodePen</a>.</p>\n<script async src=\"https://static.codepen.io/assets/embed/ei.js\"></script>\n<p data-height=\"265\" data-theme-id=\"0\" data-slug-hash=\"xjapNK\" data-default-tab=\"css,result\" data-user=\"chriscoyier\" data-embed-version=\"2\" data-pen-title=\"Wilto Counters\" class=\"codepen\">See the Pen <a href=\"https://codepen.io/chriscoyier/pen/xjapNK/\">Wilto Counters</a> by Chris Coyier  (<a href=\"https://codepen.io/chriscoyier\">@chriscoyier</a>) on <a href=\"https://codepen.io\">CodePen</a>.</p>\n<script async src=\"https://static.codepen.io/assets/embed/ei.js\"></script>\n<p data-height=\"265\" data-theme-id=\"0\" data-slug-hash=\"qYoLaq\" data-default-tab=\"css,result\" data-user=\"snookca\" data-embed-version=\"2\" data-pen-title=\"Timeline CSS with Counters\" class=\"codepen\">See the Pen <a href=\"https://codepen.io/snookca/pen/qYoLaq/\">Timeline CSS with Counters</a> by Jonathan Snook (<a href=\"https://codepen.io/snookca\">@snookca</a>) on <a href=\"https://codepen.io\">CodePen</a>.</p>\n<script async src=\"https://static.codepen.io/assets/embed/ei.js\"></script>\n","cover_image":""}},{"node":{"id":"73cb99568a27b8f01bebf52fa7173402","title":"Trick Sử dụng Sticky trong CSS","path":"/trick-su-dung-sticky-trong-css/","date":"2018-03-27","timeToRead":1,"desc":"Một cái trick hay để giải quyết vấn đề thường mắt phải","content":"<!-- TOC -->\n<ul>\n<li><a href=\"#b%C3%A0i-to%C3%A1n-c%E1%BA%A7n-gi%E1%BA%A3i-quy%E1%BA%BFt\">Bài toán cần giải quyết</a></li>\n<li><a href=\"#gi%E1%BA%A3i-ph%C3%A1p\">Giải pháp</a></li>\n</ul>\n<!-- /TOC -->\n<h2 id=\"bài-toán-cần-giải-quyết\"><a href=\"#b%C3%A0i-to%C3%A1n-c%E1%BA%A7n-gi%E1%BA%A3i-quy%E1%BA%BFt\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Bài toán cần giải quyết</h2>\n<p>Cái Popup Modal chúng ta có cái nút <code class=\"language-text\">close</code>, cái modal chắc chắn là ta phải set <code class=\"language-text\">position: fixed</code> để cố định nó với window, cái nội dung bên trong cái modal có thể scroll được</p>\n<p><img src=\"https://res.cloudinary.com/css-tricks/image/upload/c_scale,w_1000,f_auto,q_auto/v1521121189/modal_unnmdd.png\"></p>\n<p>Nút close này chúng ta sẽ set <code class=\"language-text\">position: absolute</code> cho nó lên góc phải đúng không</p>\n<p><img src=\"https://res.cloudinary.com/css-tricks/image/upload/c_scale,w_1000,f_auto,q_auto/v1521121253/hidden-close-button_p4cj3m.png\"></p>\n<p>Nhưng mà khi scroll thì ta sẽ bị mất nút <code class=\"language-text\">close</code>, ta không thể set <code class=\"language-text\">position: fixed</code> cho cái nút close được, vì fixe position nghĩa là ta bắt nó định vị trí theo window.</p>\n<p>Nếu cái modal mà ta có set <code class=\"language-text\">transform</code> bất kỳ giá trị nào, thì nút <code class=\"language-text\">close</code> sẽ trở về với body</p>\n<p><img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/fixed.gif\"></p>\n<h2 id=\"giải-pháp\"><a href=\"#gi%E1%BA%A3i-ph%C3%A1p\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Giải pháp</h2>\n<p><code class=\"language-text\">position: sticky</code> cho nút close là xong, đơn giản quá.</p>\n<p><img src=\"https://cdn.css-tricks.com/wp-content/uploads/2018/03/sticky-scroll.gif\"></p>\n","cover_image":""}},{"node":{"id":"f02dded9ad9f7d551fceb0d7b68f7bcd","title":"Thời đại của Pixel Perfect Design đã hết từ lâu","path":"/thoi-dai-cua-pixel-perfect-design-da-het-tu-lau/","date":"2017-03-07","timeToRead":5,"desc":"Khi bắt dầu dàn trang cho web, hãy sử dụng những hệ thống grid phổ biến hiện nay như Bootstrap Grid. Nếu bạn là designer mà chưa biết đến CSS framework này thì thiệt thiếu xót trầm trọng...","content":"<!-- TOC -->\n<ul>\n<li><a href=\"#grid\">Grid</a></li>\n<li><a href=\"#responsive-design\">Responsive design</a></li>\n<li><a href=\"#%C4%91%E1%BB%ABng-s%C3%A1ng-t%E1%BA%A1o-ra-c%C3%A1i-c%C3%B3-s%E1%BA%B5n\">Đừng sáng tạo ra cái có sẵn</a></li>\n<li><a href=\"#hi%E1%BB%87u-%E1%BB%A9ng\">Hiệu ứng</a></li>\n<li><a href=\"#ui-kits\">UI kits</a></li>\n<li><a href=\"#xu%E1%BA%A5t-file\">Xuất file</a></li>\n<li><a href=\"#element-state\">Element state</a></li>\n<li><a href=\"#line-height\">Line-Height</a></li>\n<li><a href=\"#font\">Font</a></li>\n<li><a href=\"#k%E1%BA%BFt\">Kết</a></li>\n</ul>\n<!-- /TOC -->\n<h1 id=\"grid\"><a href=\"#grid\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Grid</h1>\n<p>Khi bắt đầu dàn trang cho web, sử dụng những hệ thống grid phổ biến hiện nay như <a href=\"http://getbootstrap.com/css/#grid\" target=\"_blank\" rel=\"noopener noreferrer\">Bootstrap Grid</a>. Nếu bạn là designer mà chưa biết đến CSS framework này thì thiệt thiếu xót trầm trọng, nó giải quyết phần lớn các yêu cầu cơ bản về layout, thống nhất sử dụng ngay từ đầu sẽ giúp ít rất nhiều cho mấy anh developer. Quan trọng nhất nên lưu ý là hệ thống grid ngày nay sử dụng độ rộng tương đối (theo giá trị phần trăm của container) và khoảng cách padding cố định. Bạn có thể đọc <a href=\"https://medium.com/sketch-app-sources/fluid-grid-systems-in-sketch-3-9-2579133c6d08\" target=\"_blank\" rel=\"noopener noreferrer\">bài viết sau</a> để hiểu cách xây dựng hệ thống grid trên Sketch</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*WLHweZ4cQQSK8hWOY96cbQ@2x.png\" alt=\"Thời đại của Pixel Perfect Design đã hết từ lâu - Phần 2\"></p>\n<p>Khi sử dụng hệ thống grid như bootstrap bạn sẽ không bao giờ cần phải nói cho anh developer kích thước của từng cột là mấy, vì thực sự lúc này kích thước nó chỉ là một giá trị tương đối</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*Q_qCy_5PPuR5bPciB5Vbeg@2x.png\" alt=\"Thời đại của Pixel Perfect Design đã hết từ lâu - Phần 2\"></p>\n<h1 id=\"responsive-design\"><a href=\"#responsive-design\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Responsive design</h1>\n<p>Bạn designer chỉ cần chỉ cho anh developer từng element nó sẽ như thế nào trên các kích thước màn hình khác nhau, luôn luôn nghĩ các element có một kích thước tương đối chứ không phải một giá trị cố định nào đó như 320 - 1024 -1920, vì giao diện responsive phải có khả năng thích nghi với nhiều dạng kích thước màn hình khác nhau nữa.</p>\n<p>Không chỉ vậy, một số hình có kích thước phụ thuộc vào container của nó, ví dụ trên desktop bạn cho một cái hình kích thước 200x200, nhưng trên điện thoại kích thước của màn hình sẽ là 375x667 đi, thì các hình này chắc chắn bể liền, thường thấy trên mấy cái thumbnail bài viết.</p>\n<p>Một lỗi thường thấy khác là quên rằng độ cao của một số element sẽ thay đổi theo <code class=\"language-text\">container</code></p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*0odC4Yn4aHanIatRPU7P5w.gif\" alt=\"Thời đại của Pixel Perfect Design đã hết từ lâu - Phần 2\"></p>\n<p>Sử dụng những <code class=\"language-text\">breakpoint</code> căn bản: 320-375-768-1024-1280-1366-1920. Và tất nhiên tất cả các anh designer đều quên là giao diện đôi khi được xem trên màn hình lật ngang ra.</p>\n<p>Ví dụ bên dưới 2 cột hiển thị rất đẹp trên desktop nhưng do sự thay đổi độ cao trên mobile mà nó sẽ trở nên xấu xí</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*BWi61OpjqFEgHliraTHuLw@2x.png\" alt=\"Thời đại của Pixel Perfect Design đã hết từ lâu - Phần 2\"></p>\n<h1 id=\"đừng-sáng-tạo-ra-cái-có-sẵn\"><a href=\"#%C4%91%E1%BB%ABng-s%C3%A1ng-t%E1%BA%A1o-ra-c%C3%A1i-c%C3%B3-s%E1%BA%B5n\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Đừng sáng tạo ra cái có sẵn</h1>\n<p>Nếu không có thời gian, hoặc không chắc có thể customize những component nhỏ xíu như cái dropdown theo kiểu \"thích vẽ sau vẻ\", hỏi anh developer xem anh có suggest cái thư viện nào có sẵn, thay vì làm lại cái người ta đã làm tốt lắm rồi. Một ví dụ kinh điển là cái datepicker. Rát nhiều designer nghĩ chỉ cần vẽ cái lịch với con số trên đó, mà quên rằng</p>\n<ul>\n<li>Hover effect trên từng ngày</li>\n<li>Trạng thái ngày hiện tại</li>\n<li>Làm sao đánh dấu ngày được chọn</li>\n<li>Làm sao thay đổi tháng, năm</li>\n<li>Ngày trước và sau của tháng hiện tại</li>\n</ul>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*Cgndb4fH9aXPnrLIuyuE4Q@2x.png\" alt=\"Thời đại của Pixel Perfect Design đã hết từ lâu - Phần 2\"></p>\n<p>Chúng ta đang sống trong cái thời đại mà mọi người đều cố xây dựng mọi thứ của riêng mình (style Nhật). Đôi khi, có một sản phẩm chạy được cho khách hàng thì tốt hơn là lãng phí thời gian và tiền bạc cho một anh designer ngồi đó sáng tạo ra những thứ người ta đã có sẵn. Designer phải biết rằng anh có thể sử dụng những thư viện và component có sẵn  để hoàn tất project. Nó sẽ giảm đi effect không chỉ của designer mà còn cả developer ngồi đó tìm ra những giải pháp không thực sự cần thiết</p>\n<h1 id=\"hiệu-ứng\"><a href=\"#hi%E1%BB%87u-%E1%BB%A9ng\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Hiệu ứng</h1>\n<p>Một số tool cho designer như InVision, Axure để biểu diễn flow, Principle, Framer, Adobe After Effect để mô tả hiệu chạy thế nào. Nó sẽ giảm đi những hiểu nhầm giữa designer và developer, khách hàng.</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*yEMXAwVff__nrM_OCwLknw.gif\" alt=\"Thời đại của Pixel Perfect Design đã hết từ lâu - Phần 2\"></p>\n<h1 id=\"ui-kits\"><a href=\"#ui-kits\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>UI kits</h1>\n<p>UI kit là tất cả những element bạn đang sử dụng trong project, nếu là dân React có thể gọi là component. Sau này khi muốn maintenance sẽ dễ dàng hơn khi dự án ngày càng phình ra.</p>\n<p>Trong cái UI kit cần xác định những thành phần: bảng màu sử dụng, typography, các component như button, input, slider, hover, active state, cũng như người lập trình luôn tâm niệm nếu lập lại một đoạn code một lần thứ 2 trong đời thì cho nó ngay vào thư viện để tái sử dụng. Thường khi các bạn designer không có làm kiểu này thì trước sau gì cũng xảy ra trường hợp cùng một button mà chỗ này khác chỗ kia khác một chút, mà các bạn tester và khách hàng khác cái giao diện là đè đầu thằng developer ra chửi, trong khi cái đó nhiều khi bạn designer không cố ý mà vô tình quên mất mình đã format cái button đó ở đâu đó rồi.</p>\n<p>Bạn có thể sử dụng <a target=\"_blank\" href=\"https://www.invisionapp.com/craft\" rel=\"noopener noreferrer\"> Craft</a> để làm thư viện UI</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*72sMv26eNctbPvOLKZt-Mw@2x.png\" alt=\"Thời đại của Pixel Perfect Design đã hết từ lâu - Phần 3\"></p>\n<h1 id=\"xuất-file\"><a href=\"#xu%E1%BA%A5t-file\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Xuất file</h1>\n<p>Giúp ảnh developer, hãy sử dụng những công cụ sau</p>\n<ul>\n<li><a href=\"https://www.invisionapp.com/feature/inspect\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Invision Inspect</a></li>\n<li><a href=\"https://zeplin.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Zeplin</a></li>\n<li><a href=\"https://zeplin.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Sympli</a></li>\n<li><a href=\"https://github.com/utom/sketch-measure\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Sketch Measure</a> </li>\n</ul>\n<h1 id=\"element-state\"><a href=\"#element-state\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Element state</h1>\n<p>Các bạn design hay chỉ làm mỗi cái trạng thái default mà quên rằng một element sẽ có rất nhiều state khác như, như active, hover, focus, visited</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*oK0YQWhM2Td5A6rqHWlYTA@2x.png\" alt=\"Thời đại của Pixel Perfect Design đã hết từ lâu - Phần 3\"></p>\n<h1 id=\"line-height\"><a href=\"#line-height\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Line-Height</h1>\n<p>Có thể khẳng định là 100% anh designer sẽ không để ý đến giá trị này, mà cứ đè ra đo độ cao chính xác từng pixel của element, trong khi không hề biết cái line-height sẽ ảnh hưởng đến độ cao này, đâm ra anh quên cộng vào, và khi anh developer set cái padding trong code là 13, 14 thì anh la làng là nó phải 20, trong khi nếu cộng vào cái line-height nữa nó sẽ ra là 20.</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*HnnuoS89S6xCdFwWMG9Q2A@2x.png\" alt=\"Thời đại của Pixel Perfect Design đã hết từ lâu - Phần 3\"></p>\n<p>Một ưu điềm khác khi sử dụng Sketch là lúc làm sẽ thấy ngay sự ảnh hưởng line-height, trong khi photoshop thì sẽ không thấy được</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*Vqrt-1Vy2Ng1SqeNXG2P0g@2x.png\" alt=\"Thời đại của Pixel Perfect Design đã hết từ lâu - Phần 3\"></p>\n<p>Giá trị line-height nên không nên thay đổi nhiều quá trên từng element mà thống nhất xài chung một kiểu</p>\n<h1 id=\"font\"><a href=\"#font\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Font</h1>\n<p>Trước hết, xác định là: \"LUÔN LUÔN sử dụng <a href=\"https://fonts.google.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Google Fonts</a>\" nếu muốn xài một font không có sẵn trong máy, bạn developer sẽ không phải đi mò mẫm convert cái font chữ của bạn design chôm ở đâu đó, một công việc vốn quá nhiều rủi ro do vấn đề bản quyền, vấn đề lỗi convert có thể xảy ra, lỗi hiển thị trên các trình duyệt khác nhau.</p>\n<p>Cũng không bao giờ được xài nhiều hơn 2 font ngoài hệ thống, quá nhiều font phải load, làm ảnh hưởng tốc độ load site. Không sử dụng quá nhiều font style italic, bold, light, thin, regular, một đóng hầm bà lằng, luôn nhớ trong đầu less is more</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*KeLj5M7QYKIKkgIneNbKnQ@2x.png\" alt=\"Thời đại của Pixel Perfect Design đã hết từ lâu - Phần 3\"> </p>\n<h1 id=\"kết\"><a href=\"#k%E1%BA%BFt\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Kết</h1>\n<p>Thằng designer thì vốn không ưa thằng developer, chê thằng developer không thấy được sự sáng tạo của nó, còn thằng developer thì luôn chửi thằng designer, nó cứ chế biến mấy cái tào lào khó implement chết mịa luôn. Tất cả những vấn đề trên có thể giải quyết bằng một cách thôi: TRAO ĐỔI. Trao đổi càng sớm, trao đổi khi có vấn đề sẽ tránh cho ra kết quả mà nhìn vào không dám nhận là con của mình. Với tất cả những dự án dù lớn hay nhỏ thì luôn luôn bạn phải cân đối giữa kết quả mong muốn, thời gian và chi phí phải bỏ ra</p>\n","cover_image":""}},{"node":{"id":"4b6c41853f864b8a20293acbaafbcdfa","title":"FrontEnd Developer 2016 thì nên học cái gì?","path":"/front-end-developer-2016-thi-nen-hoc-cai-gi/","date":"2016-04-12","timeToRead":7,"desc":"Hey mình có dự án mới về web, không code web lâu quá rồi, không biết bây giờ viết web thì nên làm bằng gì? Mình chỉ là frontend developer, nhưng bạn đã tìm đúng người rồi đó, mình làm web cũng đã lâu, mình có thể chỉ bạn biết cần học gì để tạo web apps","content":"<p><em>Hey mình có dự án mới về web, không code web lâu quá rồi, không biết bây giờ viết web thì nên làm bằng gì?</em></p>\n<p>Mình chỉ là frontend developer, nhưng bạn đã tìm đúng người rồi đó, mình làm web cũng đã lâu, mình có thể chỉ bạn biết cần học gì để tạo web apps</p>\n<!--more-->\n<p><em>Ngon, giờ mình cần một trang hiển thị những hoạt động gần đây của user, mình chỉ cần dữ liệu từ REST sau đó hiển thị lên table, trên đó mình có thể cho phép user lọc lại theo điều kiện họ muốn, chắc là xài jQuery để hiển thị dữ liệu hả?</em></p>\n<p>Trời, thời nào rồi ông, giờ còn ai viết jQuery nữa. Học React đi, năm 2016 rồi còn làm cái đó bằng jQuery.</p>\n<p><em>React, có nghe qua, mà nó là cái gì</em></p>\n<p>Thư viện siêu ngon của mấy thằng làm trong Facebook phát triển, người ta xài cái này để handle mấy cái view cho dễ.</p>\n<p><em>Mình dùng React để hiển thị dữ liệu từ server?</em></p>\n<p>Đúng rồi, trước tiên cần thêm React và React DOM vô</p>\n<p><em>Sau phải tới 2 thư viện?</em></p>\n<p>Cái đầu là thư viện chính, còn cái DOM là để thao tác với cái DOM, mà bây giờ cái DOM được mô tả trong cái JSX</p>\n<p><em>JSX là cái quái gì ?</em></p>\n<p>JSX là syntax mở rộng của javascript, giống hệt như XML, tốt hơn HTML bình thường</p>\n<p><em>HTML bình thường thì có vấn đề gì</em></p>\n<p>Giờ chả ai đi viêt HTML thuần nữa ông ơi</p>\n<p><em>Vậy 2 thư viện đó là đủ ?</em></p>\n<p>Còn, cần thêm Babel</p>\n<p><em>Thêm một thư viện nữa ?</em></p>\n<p>Babel cho phép xác định phiên bản javascript muốn dúng, nếu không có Babel vẫn dùng React được, nhưng sẽ là ES5, tụi con nít bây giờ code trên ES2016+ không</p>\n<p><em>ES5? ES2016+? mất phương hướng rồi, đó giờ chưa nghe tới</em></p>\n<p>ES5 viết tắt cho ECMAScript 5, là phiên bản thứ 5 từ khi javascript được chuẩn hóa năm 1999, mới nhất là 7.</p>\n<p><em>Không hiểu đang nói gì hết, bắt đầu rối quá. Tui chỉ cần tải một mớ dữ liệu từ server, include jquery từ CDN, gọi một cái AJAX, sau không làm vậy cho đơn giản?</em></p>\n<p>2016 rồi chú, ai xài jQuery nữa, kết thúc thời đại của cái kiểu code hầm bà lằng một đống bùi nhùi.</p>\n<p><em>Vậy giải pháp là load 3 thư viện rồi hiển thị dữ liệu lên HTML</em></p>\n<p>Cần thêm cái Module manager</p>\n<p><em>Module manager nó là cái gì</em></p>\n<p>Cái này tùy thuộc vào môi trường, trên web thì thường là phải hỗ trợ AMD hoặc CommonJS modules</p>\n<p><em>rồi vậy AMD và Common JS là cái chi chi ?</em></p>\n<p>Định nghĩa nè. Có nhiều cách để mấy cái thư viện javascript và classe tương tác với nhau, biết kiểu export và requires hông? mình có thể viết nhiều file javascript rồi sử dụng Browserify để gom nó lại thành một cục</p>\n<p><em>Browserify ?</em></p>\n<p>Công cụ cho phép gom các CommonJS đã được định nghĩa, những file dependencies, thằng này được tạo ra để có thể gọi các thư viện được publish trên npm</p>\n<p><em>npm?</em></p>\n<p>Nó là cái kho javascript công cộng, được những anh lập trình thông minh đẹp trai tin dùng để đứa đứa con javascript của mình lên đây.</p>\n<p><em>Giống kiểu CDN hả?</em></p>\n<p>Không hẳn, nó như cái trung tâm dữ liệu nơi tác giả đưa source lên, nếu cần xài thì mình tải xuống chứ không gọi trực tiếp như CDN.</p>\n<p><em>À, giống Bower</em></p>\n<p>Đúng rồi, 2016, chắc ít ai xài Bower lắm cha.</p>\n<p><em>Tự thấy lạc hậu quá, vậy là cần tải mấy cái thư viện từ npm rồi sau nữa</em></p>\n<p>Trong trường hợp của chú, để sử dụng React, down cái React module về rồi import vô trong code.</p>\n<p><em>Giống Angular!</em></p>\n<p>Angular là chuyện của 2015. Mà cũng đúng, Angular sẽ sánh vai cùng với VueJS và RxJS trong tương lai còn dài</p>\n<p><em>Phải làm nhiều quá ta</em></p>\n<p>Đó là lý do cần có task manager như Grunt hoặc Gulp hoặc Broccoli để tự động chạy Browserify, biết sử dụng Mimosa hông?</p>\n<p><em>Nghe lạ tai rồi, đang nói khỉ gió gì vậy</em></p>\n<p>Task managers. Thật ra cũng không còn ngon như thời mới ra nữa, sau đó người ta chuyển qua dùng Makefiles, và bây giờ là Webpack</p>\n<p><em>Ủa tưởng Makefiles chỉ được phổ biến với cộng đồng C hoặc C++ chứ</em></p>\n<p>Đúng, nhưng người ta vẫn hay bảo, chúng ta thích làm cho mọi thứ phức tạp hết lên rồi sau đó lại quay về với những điều căn bản nhất.</p>\n<p><em>Còn Webpack là gì</em></p>\n<p>Một trình quản lý module khác cho trình duyệt, một phiên bản tốt hơn Browserify</p>\n<p><em>Tốt hơn chổ nào</em></p>\n<p>Nó cho phép sử dụng những module manager khác nhau không chỉ riêng CommonJS, đề phòng không hỗ trợ ES6</p>\n<p><em>Quá confuse với mới CommoJS/ES6 luôn</em></p>\n<p>Ai cũng vậy, javascript đó giờ nó vậy</p>\n<p><em>Còn gì nữa không</em></p>\n<p>Học Typescript, nó cũng là javascript nhưng tốt hơn, và nếu đang dùng ES6 thì viết Typescript cho nó đã, giảm lỗi run-time, xài thêm cái flow để kiểm tra nữa.</p>\n<p><em>.... Flow là gì á</em></p>\n<p>Của mấy cậu nhà Facebook chế, kiểm tra lỗi khi rõ. Họ code bằng OCaml, code theo kiểu function đã lắm</p>\n<p><em>OCaml, code hướng Function ?</em></p>\n<p>Con cưng của 2016 man, chỉ cần biết code theo kiểu functional thì tốt hơn OOP, đó là những gì mà lập trình viên 2016 họ làm.</p>\n<p><em>Hồi đó học OOP ở truong trường, tưởng cái đó good lắm chứ</em></p>\n<p>Như Java trước khi bị mua lại bởi Oracle. Ý là OOP đã từng tốt và vẫn được sử dụng tới giờ, nhưng bây giờ người ta nhận ra rằng chỉnh sửa một cái state cũng giống như đá đích đứa con nít, mọi người sử dụng đối tượng immutable và code theo functional. Mà bây giờ có thư viện Ramda rồi, viết javascript theo hướng function có gì khó.</p>\n<p><em>Nữa hả Ramda là cái chi chi</em></p>\n<p>Thư viện của David Chamber viết. Nếu muốn học kiểu viết functional thì nên biết đến tên của Erik Meijer</p>\n<p><em>Dừng ở đây được rồi, cái gì cũng tốt, nhưng mà quá phức tạp và chả cần thiết, lấy dữ liệu hiển thị lên mà nhằn vậy hả, có thằng khùng nào học hết cái nùi đó chỉ để hiển thị cái table lên không, rồi quay lại với React đi, giờ làm sao</em></p>\n<p>Thật ra React không có giữ việc fetch dữ liệu, nó chỉ hiển thị thôi</p>\n<p><em>Đậu xanh. vậy chở sao get dữ liệu</em></p>\n<p>Dùng Fetch để fetch dữ liệu từ server</p>\n<p><em>Đặt tên hay quá</em></p>\n<p>Fetch là native implement cho một XMLHttpRequests tới server</p>\n<p><em>AJAX chứ gì</em></p>\n<p>AJAX chỉ là XMLHttpRequest. Fetch cho phép thực thi AJAX trên promises để tránh thảm họa với callback</p>\n<p><em>Thảm họa callback</em></p>\n<p>Đúng rồi, mỗi lần thực thi một asynchronous request tới server, mình phải đợi server response, nghĩa là mình phải thêm một function trong một function, nó được gọi là callback pyramid from hell.</p>\n<p><em>Vậy giải quyết là</em></p>\n<p>Bằng cách đưa cái callback qua promise, có thể viết code dễ hiểu hơn, dễ test hơn, thực thi một lúc nhiều request cùng lúc</p>\n<p><em>Fetch làm chuyện đó ?</em></p>\n<p>Đúng trong trường hợp user sử dụng trình duyệt hỗ trợ, bằng không phải sử dụng thêm Fetch polyfill hoặc Request, Bluebird, Axios</p>\n<p><em>Trời đất ơi vậy cần bao nhiêu thư viện, bao nhiêu thư viện cho cái việc đơn giản này</em></p>\n<p>Cần javascript. Có tới hàng ngàn cái thư viện được viết bằng javascript làm được một việc. Mình chọn cái tốt nhất, thư viện thì nhiều nhưng xài có chọn lọc.</p>\n<p><em>Vậy Bluebird, Request, Axios làm chuyện gì</em></p>\n<p>Thư viện này cho phép thực thi XMLHttpRequest rồi trả về promises</p>\n<p><em>jQuery AJAX cũng làm được vậy</em></p>\n<p>KHÔNG AI dùng \"J\" trong năm 2016 đâu, chỉ sử dụng Fetch, polyfill,....</p>\n<p><em>Thôi chắc dừng ở đây đi</em></p>\n<p>Thật đó nếu giờ là tui phải sử dụng templating engine, tui sẽ chỉ sử dụng Typescript + SystemJS + Babel.</p>\n<p><em>Hiển thị dữ liệu thôi, cần phải phức tạp hóa vậy không trời, hay cho tui biết cần xài cái templating engine nào đi rồi tui tự học tiếp</em></p>\n<p>Vậy ông quen với cái nào</p>\n<p><em>Quên rồi, lâu quá không còn đụng tới</em></p>\n<p>jTemplate, jQote, PURE?</p>\n<p><em>Hổng quen, cho cái khác đi</em></p>\n<p>Transparency? JSRender? MarkupJS? KnockoutJS, PlatesJS? jQuery-tmpl? Handlebars? cũng còn vài người xài cái này.</p>\n<p><em>Có cái nào dễ biết hơn chút không</em></p>\n<p>Nhức đầu rồi, underscore? công nghệ từ 2014 ông có biết không?</p>\n<p><em>Chưa bao giờ đụng tới</em></p>\n<p>Jade? DustJS? DotJS? EJS ? Coffeescript ?</p>\n<p><em>Thôi tui xin quay lại với code backend, quá nhiều thay đổi cần phải học tui không thể handle hết, cộng động javascript mấy ông đúng là điên hết rồi nếu nghĩ là có ai đó có thể biết hết chừng đó thứ</em></p>\n<p>Hiểu rồi, ông nên vô học Python đi</p>\n<p><em>Tại sao?</em></p>\n<p>Chưa từng nghe tới Python 3 luôn sao?</p>\n<p>Dịch từ: <a href=\"https://hackernoon.com/how-it-feels-to-learn-javascript-in-2016-d3a717dd577f#.gg2qmpxxd\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://hackernoon.com/how-it-feels-to-learn-javascript-in-2016-d3a717dd577f#.gg2qmpxxd</a></p>\n<p>Tác giả: Jose Aguinaga\nWeb Engineer. UX &#x26; Interactions Designer. Full-Stack Javascript Developer</p>\n","cover_image":""}}]}}},"context":{}}