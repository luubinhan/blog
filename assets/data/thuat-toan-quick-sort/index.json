{"hash":"be9cd8cba7af086bce31a0a023c14cacaa870421","data":{"post":{"title":"Thuật toán QuickSort","path":"/thuat-toan-quick-sort/","date":"2019-11-02","timeToRead":2,"tags":[{"id":"hoc-thuat","title":"hoc-thuat","path":"/tag/hoc-thuat/"},{"id":"javascript","title":"javascript","path":"/tag/javascript/"}],"desc":"Một thuật toán rất phổ biến mà chúng ta phải nắm thật chắc và hình dung được cách hiện thực nó ngay khi được nhắc tới.","content":"<h2 id=\"một-chút-lịch-sử\"><a href=\"#m%E1%BB%99t-ch%C3%BAt-l%E1%BB%8Bch-s%E1%BB%AD\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Một chút lịch sử</h2>\n<p>Thuật toán <em>chia để trị</em> phổ biến nhất mà tất cả anh em lập trình đều được học qua thời mài đích trường đại học. Được tạo ra bởi Tony Hoare năm 1959</p>\n<p><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--k1SblSX1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.coderscat.com/wp-content/uploads/2019/10/2019_10_09_quick_sort.org_20191009_203646.png\" alt=\"Thuật toán Quicksort\"></p>\n<p>Trên là hình ông Tony Hoare trình làng thuật toán QuickSort năm 1960 tại Moscow.</p>\n<p>Để mô tả thuật toán này, nó bao gồm các bước chính như sau:</p>\n<ol>\n<li>Nếu chỉ còn một phần tử hoặc không còn phần tử nào để sort, nghĩa là <strong>KẾT THÚC</strong></li>\n<li>Mỗi lần gọi sort chúng ta chọn một phần tử làm <strong>CHỐT ĐỂ SO SÁNH</strong></li>\n<li>So sánh tất cả các phần tử còn lại với <strong>CHỐT ĐỂ SO SÁNH</strong>, nhỏ hơn đưa vào một <strong>nhóm nhỏ hơn</strong>, lớn hơn đưa qua <strong>nhóm lớn hơn</strong></li>\n<li>(Đệ quy) thực hiện đúng những bước đã làm với các phần tử thuộc 2 nhóm mới có</li>\n</ol>\n<p>Độ phức tạp của nó là O(NlogN), trường hợp xấu nhất là O(N2). Đại khái nó là một trong những phương pháp sort mảng hiệu quả nhất.</p>\n<p>Để hiểu độ phức tạp của thuật toán, các bạn <a href=\"http://vuilaptrinh.com/2019-10-28-gioi-thieu-ve-do-phuc-tap-cua-thuat-toan\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">đọc bài này</a></p>\n<h2 id=\"hiện-thực-bằng-javascript\"><a href=\"#hi%E1%BB%87n-th%E1%BB%B1c-b%E1%BA%B1ng-javascript\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Hiện thực bằng Javascript</h2>\n<p>Trong javascript đã có sẵn hàm <code class=\"language-text\">sort</code> vậy tại sao chúng ta lại quan tâm tới thuật toán QuickSort?</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> items <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>items<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// [2, 3, 5, 6, 7, 9]</span></code></pre>\n<p>Hàm <code class=\"language-text\">sort()</code> của javascript sẽ tùy thuộc vào engine trình duyệt, <strong>insertion sort</strong> cho Chrome và <strong>merge sort</strong> cho Firefox và Safari</p>\n<p>Nó <strong>không phù hợp khi phải sort số lượng dữ liệu lớn</strong>, hay là một mảng object, dạng <code class=\"language-text\">[{order: 1}, {order: 4}, {order: 2}]</code></p>\n<p>Hiện thực cho mảng bình thường, phần mảng là object các bạn chỉ cần thay điều kiện so sánh</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">quickSort</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">unsortedArray <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> smaller <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">let</span> larger <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>unsortedArray<span class=\"token punctuation\">.</span><span class=\"token property-access\">length</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> unsortedArray<span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> unsortedArray<span class=\"token punctuation\">.</span><span class=\"token property-access\">length</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> \n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>unsortedArray<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> unsortedArray<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n            smaller<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">push</span><span class=\"token punctuation\">(</span>unsortedArray<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>unsortedArray<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> unsortedArray<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> \n            larger<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">push</span><span class=\"token punctuation\">(</span>unsortedArray<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">quickSort</span><span class=\"token punctuation\">(</span>smaller<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">concat</span><span class=\"token punctuation\">(</span>unsortedArray<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token function\">quickSort</span><span class=\"token punctuation\">(</span>larger<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n","cover_image":""}},"context":{}}