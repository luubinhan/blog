{"hash":"361ad3b65d86d8c5f4c864e53c3c55284437656f","data":{"post":{"title":"typeof của React element để làm gì?","path":"/typeof-cua-react-element-de-lam-gi/","slug":"2021-07-26-giai-thich-typeof-cua-react-element-la-gi","date":"2021-07-26","timeToRead":4,"tags":[{"id":"javascript","title":"javascript","path":"/tag/javascript/"},{"id":"hoc-thuat","title":"hoc-thuat","path":"/tag/hoc-thuat/"},{"id":"react","title":"react","path":"/tag/react/"}],"desc":"Bài viết dành cho những bạn tò mò thích khám phá những gì diễn ra trong thế giới ngầm","content":"<p>Chúng ta viết một react component và bạn nghĩ mình viết JSX</p>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>marquee</span> <span class=\"token attr-name\">bgcolor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#000<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Chào buổi sáng</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>marquee</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>Nhưng thật ra chúng ta đang gọi hàm này</p>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">createElement</span><span class=\"token punctuation\">(</span>\n    <span class=\"token comment\">/* type */</span> <span class=\"token string\">'marquee'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">/* props */</span> <span class=\"token punctuation\">{</span> bgcolor<span class=\"token operator\">:</span> <span class=\"token string\">'#000'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">/* children */</span> <span class=\"token string\">'Chào buổi sáng'</span>\n<span class=\"token punctuation\">)</span></code></pre>\n<p>Và function trên sẽ trả về cho chúng ta một <code>object</code>, <em>người đời</em> gọi <code>object</code> này là React element. Nó báo với React tiếp theo cần phải làm gì</p>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token punctuation\">{</span>\n    type<span class=\"token operator\">:</span> <span class=\"token string\">'marquee'</span><span class=\"token punctuation\">,</span>\n    props<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        bgcolor<span class=\"token operator\">:</span> <span class=\"token string\">'#000'</span><span class=\"token punctuation\">,</span>\n        children<span class=\"token operator\">:</span> <span class=\"token string\">'Chào buổi sáng'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    key<span class=\"token operator\">:</span> <span class=\"token keyword null nil\">null</span><span class=\"token punctuation\">,</span>\n    ref<span class=\"token operator\">:</span> <span class=\"token keyword null nil\">null</span><span class=\"token punctuation\">,</span>\n    $$<span class=\"token keyword\">typeof</span><span class=\"token operator\">:</span> <span class=\"token known-class-name class-name\">Symbol</span><span class=\"token punctuation\">.</span><span class=\"token keyword control-flow\">for</span><span class=\"token punctuation\">(</span><span class=\"token string\">'react.element'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// ai đây ta?</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p><code>$$typeof</code> là cái gì vậy? và tại sao nó có value là <code>Symbol</code>?</p>\n<p>Nếu chỉ cần sử dụng React thì việc biết hay không biết đến <em>nó</em> cũng không ảnh hưởng gì thế giới, chỉ dành cho các bạn thích tò mò.</p>\n<h6 id=\"\"></h6>\n<p>Việc chèn thêm một HTML bằng code js như thế này đã từng rất phổ biến</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> messageEl <span class=\"token operator\">=</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'message'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmessageEl<span class=\"token punctuation\">.</span><span class=\"token property-access\">innerHTML</span> <span class=\"token operator\">=</span> <span class=\"token string\">'&lt;p>'</span> <span class=\"token operator\">+</span> message<span class=\"token punctuation\">.</span><span class=\"token property-access\">text</span> <span class=\"token operator\">+</span> <span class=\"token string\">'&lt;/p>'</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Mọi thứ thật tuyệt vời cho đến khi <em>ai đó</em> cố tình nhét giá trị <code>&#x3C;img src onerror=\"stealYourPassword()\"></code> cho <code>message.text</code>. Một kiểu <em>hack nhẹ</em> cũng rất phổ biến</p>\n<p>Để tránh kiểu tấn công này, chúng ta dùng <code>document.createTextNode()</code> hoặc <code>textContent</code>, hoặc <strong>trục xuất</strong> hết các ký tự <code>&#x3C;</code> và <code>></code> để nó không thể nào chạy được.</p>\n<p>Tất nhiên không phải ai cũng biết và nhớ hết các thủ tục xử lý này khi nhận giá trị input từ user. Đó là lý do tại sao, các thư viện như React, việc <strong>trục xuất</strong> này được thực hiện mặc định</p>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n</span><span class=\"token punctuation\">{</span>message<span class=\"token punctuation\">.</span><span class=\"token property-access\">text</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>Trong trường hợp <strong>chúng ta biết mình đang làm gì</strong>, muốn render thẻ HTML</p>\n<pre class=\"language-js\"><code class=\"language-js\">dangerouslySetInnerHTML<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> __html<span class=\"token operator\">:</span> message<span class=\"token punctuation\">.</span><span class=\"token property-access\">text</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></code></pre>\n<p>Vậy dùng React thì an toàn tuyệt đối? <strong>Không</strong></p>\n<p>Phải nói có <a href=\"https://github.com/facebook/react/issues/3473#issuecomment-90594748\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">nhiều lắm</a> cách tấn công dùng HTML và DOM. Việc chặn hết là quá khó và quá tốn thời gian.</p>\n<p>Ví dụ nếu render <code>&#x3C;a href={user.website}></code>, và trang web dẫn đến có thể chỉ là <code>javascript: stealYourPassword()</code>, hay spreading kiểu này <code>&#x3C;div {...userData}></code> cũng nguy hiểm phết.</p>\n<p>Vì với cách viết này</p>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// escape tự động</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token punctuation\">{</span>message<span class=\"token punctuation\">.</span><span class=\"token property-access\">text</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>...đã đủ an toàn lắm rồi đúng không? Không phải lúc nào cũng đúng. Đó là lý do tại sao có <code>$$typeof</code></p>\n<h6 id=\"-1\"><a href=\"#-1\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a></h6>\n<p>Một React element là một <code>object</code> như thế này</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  type<span class=\"token operator\">:</span> <span class=\"token string\">'marquee'</span><span class=\"token punctuation\">,</span>\n  props<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    bgcolor<span class=\"token operator\">:</span> <span class=\"token string\">'#ffa7c4'</span><span class=\"token punctuation\">,</span>\n    children<span class=\"token operator\">:</span> <span class=\"token string\">'hi'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  key<span class=\"token operator\">:</span> <span class=\"token keyword null nil\">null</span><span class=\"token punctuation\">,</span>\n  ref<span class=\"token operator\">:</span> <span class=\"token keyword null nil\">null</span><span class=\"token punctuation\">,</span>\n  $$<span class=\"token keyword\">typeof</span><span class=\"token operator\">:</span> <span class=\"token known-class-name class-name\">Symbol</span><span class=\"token punctuation\">.</span><span class=\"token keyword control-flow\">for</span><span class=\"token punctuation\">(</span><span class=\"token string\">'react.element'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Tất nhiên chúng ta sẽ tạo ra object này bằng việc gọi <code>React.createElement()</code>. Nếu chúng ta sẽ lưu trữ <code>object</code> như một JSON ở phía server</p>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// server cho phép user lưu ở dạng JSON</span>\n<span class=\"token keyword\">let</span> expectedTextButGotJSON <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  type<span class=\"token operator\">:</span> <span class=\"token string\">'div'</span><span class=\"token punctuation\">,</span>\n  props<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    dangerouslySetInnerHTML<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      __html<span class=\"token operator\">:</span> <span class=\"token string\">'/* put your exploit here */'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> message <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> text<span class=\"token operator\">:</span> expectedTextButGotJSON <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Với React 0.13 đây là tử nguyệt</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token punctuation\">{</span>message<span class=\"token punctuation\">.</span><span class=\"token property-access\">text</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>React 0.13 đây là điểm bị lợi dụng để tấn công XSS. (Đáng lẽ ra ở phía Server không nên để cho user lưu dạng JSON như thế)</p>\n<p>Phiên bản 0.14 React hỗ trợ xử lý con bug này bằng cách thêm đánh dấu <strong>đây chính hiệu là react element bằng Symbol</strong></p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  type<span class=\"token operator\">:</span> <span class=\"token string\">'marquee'</span><span class=\"token punctuation\">,</span>\n  props<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    bgcolor<span class=\"token operator\">:</span> <span class=\"token string\">'#ffa7c4'</span><span class=\"token punctuation\">,</span>\n    children<span class=\"token operator\">:</span> <span class=\"token string\">'hi'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  key<span class=\"token operator\">:</span> <span class=\"token keyword null nil\">null</span><span class=\"token punctuation\">,</span>\n  ref<span class=\"token operator\">:</span> <span class=\"token keyword null nil\">null</span><span class=\"token punctuation\">,</span>\n  $$<span class=\"token keyword\">typeof</span><span class=\"token operator\">:</span> <span class=\"token known-class-name class-name\">Symbol</span><span class=\"token punctuation\">.</span><span class=\"token keyword control-flow\">for</span><span class=\"token punctuation\">(</span><span class=\"token string\">'react.element'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Bởi gì user hổng thể nào đặt một <code>Symbol</code> vào trong file JSON. <strong>Thậm chí mấy ông làm backend ẩu tả cho phép return JSON thay vì text</strong> cũng không vấn đề (Đoạn này chắc lão Dan đang cáo mấy chú Backend)</p>\n<p>Điều tuyệt vời nữa là <code>Symbol.for()</code> thì scope ở mức global giữa các môi trường như iframe, worker. Nghĩa là việc <strong>ném</strong> các component qua lại giữa các môi trường cũng không bị ảnh hưởng.</p>\n<h6 id=\"-2\"><a href=\"#-2\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a></h6>\n<p>Vậy nếu trình duyệt không hỗ trợ Symbol thì sao?</p>\n<p>Đó là chuyện của user, ai bảo xài trình duyệt cũ thì không được bảo hộ đầy đủ chứ biết sao. React sẽ vẫn thêm vào property <code>$$typeof</code>, nhưng với giá trị <code>0xeac7</code>, tại sao là <code>0xeac7</code>? Tại tụi tui (React team) thấy nhìn nó giống chữ \"React\"</p>\n<p><a href=\"https://overreacted.io/why-do-react-elements-have-typeof-property/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Bài của Dan</a></p>\n","cover_image":"","related":[{"id":"421cd1b7e8f634b686167801383d5d13","path":"/gioi-thieu-focus-tren-web/","title":"Giới thiệu focus trên web","desc":"Chúng ta nói về focus và làm cách nào chúng ta sử dụng nó trong ứng dụng web, bạn nào quan tâm accessibility thì phải biết cái này, đặt biệt mấy chế designer hay kêu bỏ focus ring"},{"id":"8f789cc3ef4f44d6a5dae61c71e8bc64","path":"/kim-chi-nam-ma-vue-3-da-ap-dung-khi-thiet-ke/","title":"Kim chỉ nam mà Vue 3 đã áp dụng khi thiết kế","desc":"Kim chỉ nam (principle) được áp dụng khi cần đưa ra một quyết định kỹ thuật trước vô vàng các lựa chọn. Nếu bạn đã biết được mọi thứ vận hành như thế nào, thì đã đến lúc bạn tiến một bước xa hơn, trả lời cho câu hỏi tại sao"},{"id":"314cb51cab8a7babe6389bf23de0b91b","path":"/huong-dan-kiem-tra-performace-voi-chrome-dev-tools/","title":"Hướng dẫn kiểm tra performace với Chrome DevTools","desc":"Học cách sử dụng tab Network Chrome DevTools để biết tại sao một trang load chậm, hướng dẫn từng bước một."}]}},"context":{}}