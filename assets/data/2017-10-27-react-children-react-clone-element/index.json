{"hash":"07b5001d3b2d2df5ce1b9bbd1a099b0760e8b129","data":{"post":{"title":"React Children và React cloneElement","path":"/2017-10-27-react-children-react-clone-element/","date":"2017-10-27","timeToRead":2,"tags":[{"id":"javascript","title":"javascript","path":"/tag/javascript/"},{"id":"react","title":"react","path":"/tag/react/"}],"desc":"Tìm hiểu cách sử dụng react Children và react cloneElement","content":"<!-- TOC -->\n<ul>\n<li><a href=\"#reactchildrenforeach\"><code class=\"language-text\">React.Children.forEach</code></a></li>\n<li><a href=\"#reactchildrencount\"><code class=\"language-text\">React.Children.count</code></a></li>\n<li><a href=\"#reactchildrentoarraychildren\"><code class=\"language-text\">React.Children.toArray(children)</code></a></li>\n<li><a href=\"#reactchildrenonly\"><code class=\"language-text\">React.Children.only</code></a></li>\n</ul>\n<!-- /TOC -->\n<p>Hãy nghĩ ngay tới cặp đôi <code class=\"language-text\">React.Children.map</code> và <code class=\"language-text\">React.cloneElement</code> khi cần truyền <code class=\"language-text\">props</code> từ component cha xuống các component con mà <strong>KHÔNG cần gọi render component bên trong component cha</strong></p>\n<p>Hơi mâu thuẫn vì không <code class=\"language-text\">render</code> component con vậy sao nó hiển thị, ví dụ đi</p>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\"><span class=\"token maybe-class-name\">ComponentChaChu</span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n     </span><span class=\"token punctuation\">{</span>\n        <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token property-access\"><span class=\"token maybe-class-name\">Children</span></span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">map</span><span class=\"token punctuation\">(</span>children<span class=\"token punctuation\">,</span> <span class=\"token parameter\">child</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">(</span>\n            <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">cloneElement</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n                style<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                    backgroundColor<span class=\"token operator\">:</span> <span class=\"token string\">'green'</span><span class=\"token punctuation\">,</span>\n                    color<span class=\"token operator\">:</span> <span class=\"token string\">'white'</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n     <span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\"><span class=\"token maybe-class-name\">Luckyluu</span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>title<span class=\"token punctuation\">,</span> posts<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ComponentChaChu</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">NavBar</span></span> <span class=\"token attr-name\">title</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>title<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">ComponentChaChu</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token punctuation\">{</span>\n            posts<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">post</span> <span class=\"token arrow operator\">=></span><span class=\"token punctuation\">(</span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Post</span></span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>post<span class=\"token punctuation\">.</span><span class=\"token property-access\">id</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n                    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ComponentChaChu</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n                        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">PostHeader</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">...</span><span class=\"token attr-value\">post</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\"> \n                    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">ComponentChaChu</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n                    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">PostBody</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">...</span><span class=\"token attr-value\">post</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n                </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Post</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">)</span></code></pre>\n<p>2 component con ở đây là <code class=\"language-text\">PostHeader</code> và <code class=\"language-text\">NavBar</code> có thể sử dụng ở bất kỳ đâu, còn <code class=\"language-text\">ComponentChaChu</code> có thể có bất kỳ đứa con nào, không cần biết sau này con nó là ai thì nó sẽ truyền hết tài sản là <code class=\"language-text\">backgroundColor</code> và <code class=\"language-text\">color</code> cho đứa con yêu dấu đó</p>\n<p>Sẵn tiện thì nói luôn một số <em>function</em> khác của <code class=\"language-text\">React.Children</code> luôn</p>\n<h2 id=\"reactchildrenforeach\"><a href=\"#reactchildrenforeach\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a><code class=\"language-text\">React.Children.forEach</code></h2>\n<p>Giống như <code class=\"language-text\">React.Children.map</code> nhưng không trả về gì hết</p>\n<h2 id=\"reactchildrencount\"><a href=\"#reactchildrencount\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a><code class=\"language-text\">React.Children.count</code></h2>\n<p>Nhà có nhiêu đứa con ?</p>\n<h2 id=\"reactchildrentoarraychildren\"><a href=\"#reactchildrentoarraychildren\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a><code class=\"language-text\">React.Children.toArray(children)</code></h2>\n<p>Convert component con về <code class=\"language-text\">array</code></p>\n<h2 id=\"reactchildrenonly\"><a href=\"#reactchildrenonly\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a><code class=\"language-text\">React.Children.only</code></h2>\n<p>Để áp dụng chương trình kế hoạch hóa gia đình, mỗi component cha chỉ có <strong>1</strong> và phải có 1 con duy nhất, quăng cái thông báo nếu không đáp ứng yêu cầu này.</p>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">BaBa</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">props</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">children</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Nếu bắt buộc con thằng <code class=\"language-text\">BaBa</code> phải là <code class=\"language-text\">function</code></p>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token maybe-class-name\">BaBa</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">propTypes</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    children<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">propTypes</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">func</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">isRequired</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Nó log ra thông báo lỗi khi truyền vào con không phải là <code class=\"language-text\">function</code>, dev lười biến có thể 'cho qua' thông báo này. Nhưng khi mình bắt buộc kiểu này</p>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">BaBa</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token property-access\"><span class=\"token maybe-class-name\">Children</span></span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">only</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">props</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">children</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Nếu không có con là app chết luôn, cho các anh dev không còn lười biếng, giống kiểu mấy người xưa ko có con là không có được vây. ;)</p>\n","cover_image":"","related":[{"id":"819a9c7b235ca822b9ba12c248406cf3","path":"/2018-04-27-huong-dan-google-maps-va-react/","title":"Google Maps và React","desc":"Hướng Sử dụng google maps api trong React"},{"id":"d9e884765bb027ba864e4261490d0bd0","path":"/2019-02-10-huong-dan-thay-doi-mau-sac-file-svg/","title":"Những cách thay đổi giá trị fill của SVG khi hover","desc":"Chúng ta có thể định dạng file SVG một cách dễ dàng bằng CSS, chúng ta sẽ tận dụng CSS để thay đổi định dạng khi hover chuột lên. Tất cả những cách có thể làm sẽ được liệt kê trong bài viết này."},{"id":"4a99bac4278d70e64efde99b10ec74df","path":"/2016-11-20-phan-6-es6-can-ban-khai-bao-let-const/","title":"Hồi 6: ES6 căn bản - Khai báo biến với let và const","desc":"Hồi 6 trong series ES6 căn bản, nói về khai báo biến với let và const"}]}},"context":{}}