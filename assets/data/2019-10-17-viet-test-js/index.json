{"hash":"11fd49ff7dfa599f2ece96e1f20e52693dbc054b","data":{"post":{"title":"Tổng quát về viết unit test cho FE","path":"/2019-10-17-viet-test-js/","slug":"/2019-10-17-viet-test-js","date":"2019-10-17","timeToRead":5,"tags":[{"id":"javascript","title":"javascript","path":"/tag/javascript/"}],"desc":"Cái nhìn tổng quát để bạn có thể bắt đầu làm quen với test, những khái niệm, vấn đề gặp thường xuyên khi viết test","content":"<!-- TOC -->\n<ul>\n<li><a href=\"#spy-m%E1%BB%99t-function\">Spy một function</a></li>\n<li><a href=\"#test-c%C3%A1c-%C4%91o%E1%BA%A1n-code-b%E1%BA%A5t-%C4%91%E1%BB%93ng-b%E1%BB%99\">Test các đoạn code bất đồng bộ</a></li>\n</ul>\n<!-- /TOC -->\n<p>Tại sao chúng ta phải viết test, trong khi code của chúng chạy đang ngon? Câu trả lời rất đơn giản, nó khiến chúng ta suy nghĩ cách chúng ta đang code, code như theo kiểu này hay kiểu kia thì hợp lý hơn, code sẽ <em>sạch</em> hơn, dễ bảo trì hơn</p>\n<p>Với một pure function siêu đơn giản</p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">add</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">x<span class=\"token punctuation\">,</span> y</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">+</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><em>Lỡ đâu</em>, giá trị truyền vào của x và y là <code class=\"language-inline-text\">string</code>, chứ không phải <code class=\"language-inline-text\">number</code>, <em>lỡ đâu</em> chỉ có 1 tham số được truyền vào, <em>lỡ đâu</em> có 1 function khác phụ thuộc vào kết quả trả về của hàm này.</p>\n<p>Nếu bạn đặt được những câu hỏi <em>lỡ đâu</em> như thế thì code của bạn đã trở nên tốt hơn. Và để đặt được các câu hỏi <em>lỡ đâu</em> như thế, chỉ khi bạn bắt đầu nghĩ đến chuyện test function của mình.</p>\n<p>Một số kiểu test, bạn tưởng tượng vào thanh tra một nhà máy</p>\n<ul>\n<li><strong>Unit test</strong>: kiểm tra từng nhân viên có làm đúng nhiệm vụ, trách nhiệm được giao trong giờ làm việc không, có giao nhầm hợp đồng tình ái cho khách hàng đang cần hợp đồng dự án?</li>\n<li><strong>Integration test</strong>: kiểm tra một tổ sản xuất làm việc với nhau có hợp ru hợp rạ không, ông này có đi nói xấu ông kia, làm ảnh hưởng chất lượng của cả team</li>\n<li><strong>Acceptance test</strong>: các tổ sản xuất khi phối hợp vận hành có vấn đề gì không, trong môi trường thực tế, team marketing có đàn áp bóc lột đội sản xuất làm việc OT sấp mặt lờ, khiến team sản xuất chơi lại team marketing bằng cách làm việc đối phó không.</li>\n</ul>\n<p>Ở mức dev chúng ta chỉ cần quan tâm đến unit test là được, để chúng ta đảm bảo được rằng, một function (một nhân viên) thực hiện đúng nhiệm vụ chúng ta giao cho nó.</p>\n<p>Có nhiều thư viện để test, điểm chung các thư viện điều cho chúng ta những function, truyền vào <em>cái gì cũng được</em>, nó sẽ <strong>so sánh</strong> với một đối tượng khác</p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"should...\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">expect</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"something truthy\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toExist</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"should...\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>myObj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toEqual</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>a<span class=\"token operator\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> b<span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"should...\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>block<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toThrow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>error<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>message<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Những cái chúng ta <strong>expect</strong> từ output của một hàm, một object, một giá trị như vậy gọi là <strong>test case</strong></p>\n<p>Một khái niệm khác nữa trong test là <strong>test suite</strong>, giới phần mềm khoái đặt thêm lắm ngôn ngữ thật, có thể hiểu nó là một thư mục để gom các <strong>test case</strong> mà chúng ta thấy nó nếu không họ hàng gần thì cũng bà con xa.</p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// đây là một test suite</span>\n<span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Wallet\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">var</span> wallet<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">var</span> five<span class=\"token punctuation\">,</span> ten<span class=\"token punctuation\">,</span> twenty<span class=\"token punctuation\">,</span> hundred<span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">// trước khi chạy 1 test case, nó gọi hàm này trước</span>\n\t<span class=\"token function\">beforeEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t   wallet <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t   five <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> ten <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> twenty <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> hundred <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token comment\">// test case 1</span>\n\t<span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"should be able to add bills\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\twallet<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>five<span class=\"token punctuation\">,</span> ten<span class=\"token punctuation\">,</span> twenty<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>wallet<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toEqual</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token comment\">// test case 2</span>\n\t<span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"should be able to remove one bill\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t    wallet<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>five<span class=\"token punctuation\">,</span> ten<span class=\"token punctuation\">,</span> twenty<span class=\"token punctuation\">)</span>\n\t    wallet<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span>wallet<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\t    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>wallet<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toEqual</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token comment\">// test case 3</span>\n\t<span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"should be able to calculate total\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t    wallet<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>five<span class=\"token punctuation\">,</span> ten<span class=\"token punctuation\">,</span> twenty<span class=\"token punctuation\">,</span> hundred<span class=\"token punctuation\">,</span> twenty<span class=\"token punctuation\">,</span> five<span class=\"token punctuation\">)</span>\n\t    total <span class=\"token operator\">=</span> wallet<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span>b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">)</span>\n\t    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>total<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toEqual</span><span class=\"token punctuation\">(</span><span class=\"token number\">160</span><span class=\"token punctuation\">)</span>\n   <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"spy-một-function\"><a href=\"#spy-m%E1%BB%99t-function\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Spy một function</h2>\n<p>Chúng ta có thể đặt chế độ theo dõi một anh nhân viên nào đó, để xem một ngày anh đi toilet bao nhiêu lần, đi xung quanh tán gái công ty bao nhiêu đứa</p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// function để test</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">return</span> a <span class=\"token operator\">+</span> b <span class=\"token operator\">+</span> c\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// test suite</span>\n<span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Add\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> addSpy<span class=\"token punctuation\">,</span> result\n    <span class=\"token function\">beforeEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t    <span class=\"token comment\">// cử gián điệp theo dõi nhất cử lưỡng động của nhân viên tên **add**</span>\n\t    addSpy <span class=\"token operator\">=</span> <span class=\"token function\">spyOn</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">,</span> <span class=\"token string\">\"add\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>and<span class=\"token punctuation\">.</span><span class=\"token function\">callThrough</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t    result <span class=\"token operator\">=</span> <span class=\"token function\">addSpy</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token comment\">// tình hình nhân viên \"add\" đã có manh động</span>\n\t<span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"the function has been called\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t   <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>addSpy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toHaveBeenCalled</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token comment\">// kiểm tra kết quả</span>\n\t<span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"can evaluate function execution\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toEqual</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token comment\">// anh này có đi qua giới hạn không, hành động 2 lần là túm lại</span>\n\t<span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"will only be executed once\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>addSpy<span class=\"token punctuation\">.</span>calls<span class=\"token punctuation\">.</span><span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"test-các-đoạn-code-bất-đồng-bộ\"><a href=\"#test-c%C3%A1c-%C4%91o%E1%BA%A1n-code-b%E1%BA%A5t-%C4%91%E1%BB%93ng-b%E1%BB%99\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Test các đoạn code bất đồng bộ</h2>\n<p>Muốn test các đoạn code chạy bất đồng bộ, những nhân viên thường xuyên phải làm việc ngoài đường như đội sale, kế toán, đôi khi họ ra ngoài một thời gian không xác định, khi nào họ mới về lại công ty? Các thư viện test sẽ dùng đến một thiết bị <em>chip</em> định vị <code class=\"language-inline-text\">done()</code>, nó sẽ báo cho chúng ta anh ấy đã về tới công ty sao khoản thời gian cafe ngoài đường.</p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Nhân viên này có việc cần đường đi khách</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">getUserInfo</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">username</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">return</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://api.github.com/users/\"</span> <span class=\"token operator\">+</span> username<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"getUserInfo\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"return the correct name\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">done</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">getUserInfo</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"luckyluu\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n\t      <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"anluu\"</span><span class=\"token punctuation\">)</span>\n\t      <span class=\"token comment\">// đặt chip ở đây</span>\n\t      <span class=\"token function\">done</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n   <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Hy vọng các bạn học được nhiều điều hay ho từ bài viết này.</p>\n<p>Happy testing!</p>\n","cover_image":"","related":[{"id":"fea12ab11892947c407484df390517cb","path":"/2019-10-05-viet-unit-test-cho-vue-component-cho-nguoi-moi-bat-dau/","title":"Viết Unit Test cho Vue component cho người mới bắt đầu","desc":"Cái nhìn về unit test cho component, test cái gì, cái gì không test khi viết unit test"},{"id":"6297a4b130cbfb44751f6a38e22a2c07","path":"/2018-07-04-huong-dan-tong-hop-canh-le-voi-flexbox-alignment/","title":"Tổng quát về canh lề với Flexbox display","desc":"Bây giờ chưa nắm vững về flexbox và cách canh lề trong flexbox thì thật là thiếu xót trong thời đại 2018, chúng ta đã qua thời xài float, clearfix"},{"id":"86b4bdaecfd311e0ba6c74a0259cacf8","path":"/2020-05-05-huong-dan-viet-unit-test-cho-react/","title":"Hướng dẫn viết unit test trong React","desc":"Một bài viết tổng hợp, sẽ cố gắng đề cập càng nhiều càng tốt các vấn đề có thể gặp khi đụng đến unit test với React."},{"id":"ac91020c4cb3f555dd43eb61a87000b8","path":"/2020-10-25-neu-ban-viet-css-co-tam/","title":"Một vài điểm nên nhớ khi viết CSS","desc":"Nếu bạn là người viết CSS có tâm, bạn cần đọc bài này để tránh những lỗi edge case khi viết CSS"}]}},"context":{}}