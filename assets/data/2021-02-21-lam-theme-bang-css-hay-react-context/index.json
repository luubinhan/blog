{"hash":"781cb6d1d05b3001a1fbd40f8663d969bc85d117","data":{"post":{"title":"Làm tính năng Theme trong React?","path":"/2021-02-21-lam-theme-bang-css-hay-react-context/","slug":"2021-02-21-lam-theme-bang-css-hay-react-context","date":"2021-02-21","timeToRead":3,"tags":[{"id":"javascript","title":"javascript","path":"/tag/javascript/"},{"id":"react","title":"react","path":"/tag/react/"},{"id":"css","title":"css","path":"/tag/css/"},{"id":"medium","title":"medium","path":"/tag/medium/"}],"desc":"Sẽ có nhiều tiếp cận để làm theme cho trang web, mổ xẻ 2 cách phổ biến hiện nay trong React, chọn cách nào cho nó đơn giản nhưng mang lại hiệu quả cao","content":"<p>Để hỗ trợ tính năng <em>Theme</em>, cho phép người dùng lựa chọn kiểu giao diện mà họ thích, trong React, bạn sẽ có thể tiếp cận 1 trong 2 cách dùng CSS-in-JS hoặc dùng CSS variable (tất nhiên không có hỗ trợ với IE)</p>\n<p>Nếu dùng CSS-in-JS bạn sẽ có thể làm được nhiều <em>thứ</em> hơn, bạn có một bộ công cụ đủ các <strong>đạo cụ</strong> để mua mai trong JS. Bài viết này sẽ chỉ ra tại sao bạn nên dùng CSS variable cho nhu cầu làm theme</p>\n<p>Nếu dùng CSS-in-JS, trong React bạn sẽ tổ chức một <code class=\"language-inline-text\">ThemeProvider</code> bằng React Context, dùng hook <code class=\"language-inline-text\">useTheme</code>  để lấy giá trị trong <code class=\"language-inline-text\">ThemeProvider</code>, sẽ như thế này</p>\n<div class=\"gridsome-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n<span class=\"token keyword\">import</span> styled <span class=\"token keyword\">from</span> <span class=\"token string\">'@emotion/styled'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>ThemeProvider<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'emotion-theming'</span>\n\n<span class=\"token keyword\">const</span> themes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">light</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">colors</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">primary</span><span class=\"token operator\">:</span> <span class=\"token string\">'deeppink'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">background</span><span class=\"token operator\">:</span> <span class=\"token string\">'white'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">dark</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">colors</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">primary</span><span class=\"token operator\">:</span> <span class=\"token string\">'lightpink'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">background</span><span class=\"token operator\">:</span> <span class=\"token string\">'black'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> PrimaryText <span class=\"token operator\">=</span> styled<span class=\"token punctuation\">.</span><span class=\"token function\">div</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>theme<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">padding</span><span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> theme<span class=\"token punctuation\">.</span>colors<span class=\"token punctuation\">.</span>primary<span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">backgroundColor</span><span class=\"token operator\">:</span> theme<span class=\"token punctuation\">.</span>colors<span class=\"token punctuation\">.</span>background<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">ThemeToggler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>theme<span class=\"token punctuation\">,</span> onClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> nextTheme <span class=\"token operator\">=</span> theme <span class=\"token operator\">===</span> <span class=\"token string\">'light'</span> <span class=\"token operator\">?</span> <span class=\"token string\">'dark'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'light'</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">onClick</span><span class=\"token punctuation\">(</span>nextTheme<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      Change to </span><span class=\"token punctuation\">{</span>nextTheme<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> mode\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>theme<span class=\"token punctuation\">,</span> setTheme<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">'light'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ThemeProvider</span></span> <span class=\"token attr-name\">theme</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>themes<span class=\"token punctuation\">[</span>theme<span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">PrimaryText</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">This text is the primary color</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">PrimaryText</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ThemeToggler</span></span>\n        <span class=\"token attr-name\">theme</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>theme<span class=\"token punctuation\">}</span></span>\n        <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">nextTheme</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setTheme</span><span class=\"token punctuation\">(</span>nextTheme<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span>\n      <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">ThemeProvider</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App</code></pre></div>\n<p>Nếu dùng CSS variable, chúng ta khai bao một bộ các biến cần dùng, rồi chèn thêm <code class=\"language-inline-text\">data-theme</code> cho thẻ <code class=\"language-inline-text\">body</code></p>\n<p>CSS</p>\n<div class=\"gridsome-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">body[data-theme='light']</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">--colors-primary</span><span class=\"token punctuation\">:</span> deeppink<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">--colors-background</span><span class=\"token punctuation\">:</span> white<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">body[data-theme='dark']</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">--colors-primary</span><span class=\"token punctuation\">:</span> lightpink<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">--colors-background</span><span class=\"token punctuation\">:</span> black<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Phần implement của React component lúc này sửa lại</p>\n<div class=\"gridsome-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'./css-vars.css'</span>\n<span class=\"token keyword\">import</span> styled <span class=\"token keyword\">from</span> <span class=\"token string\">'@emotion/styled'</span>\n\n<span class=\"token keyword\">const</span> PrimaryText <span class=\"token operator\">=</span> styled<span class=\"token punctuation\">.</span><span class=\"token function\">div</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">padding</span><span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token string\">'var(--colors-primary)'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">backgroundColor</span><span class=\"token operator\">:</span> <span class=\"token string\">'var(--colors-background)'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">ThemeToggler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>theme<span class=\"token punctuation\">,</span> setTheme<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">'light'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> nextTheme <span class=\"token operator\">=</span> theme <span class=\"token operator\">===</span> <span class=\"token string\">'light'</span> <span class=\"token operator\">?</span> <span class=\"token string\">'dark'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'light'</span>\n  React<span class=\"token punctuation\">.</span><span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">.</span>theme <span class=\"token operator\">=</span> theme\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>theme<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setTheme</span><span class=\"token punctuation\">(</span>nextTheme<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      Change to </span><span class=\"token punctuation\">{</span>nextTheme<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> mode\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">PrimaryText</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">This text is the primary color</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">PrimaryText</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ThemeToggler</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App</code></pre></div>\n<p>Thẳng thắn mà nói, cả 2 cách làm này đều cho kết quả như nhau về mặt trãi nghiệm sử dụng, dùng CSS-in-JS sẽ có chút cảm giác hơi quá đà kỹ thuật, từ chuyên ngành là over-engineering.</p>\n<iframe src=\"https://codesandbox.io/embed/css-variables-vs-themeprovider-df90h?fontsize=14&hidenavigation=1&theme=dark\"\n     style=\"width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;\"\n     title=\"CSS Variables vs ThemeProvider\"\n     allow=\"accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking\"\n     sandbox=\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\"\n   ></iframe>\n<p>Về hiệu năng thì sao?</p>\n<p>ThemeProvider</p>\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/b903d3908c2f09f6139573d3da3ce48d0e831885/2cc29/static/e25d5f73f3fffe0fed8586eea95892df/e7448/theme-provider.png\" alt=\"Profiling session showing everything rendered\"></p>\n<p>CSS variable</p>\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/e737a004afce33b75c4c0b07e42c58a3ff1aaeec/21d3b/static/47d22cd6f96a31f50329ff658f18af39/e7448/css-vars.png\" alt=\"Profiling session showing only one component rendered\"></p>\n<p>Cũng không nhất thiết phải nhìn vào con số mili giây phải tốn cho việc render, vì simple này khá là bé. Bạn cứ hình dùng nếu một cây React Component với hàng trăm component con lồng ghép nhau, khi thay đổi giá trị trong ThemeProvider, tất cả những component đều bị render lại thì sẽ như thế nào? Việc dùng CSS variable sẽ mang lại hiệu quả hơn nhiều vì trình duyệt không phải làm quá nhiều thứ như cách 1.</p>\n<p>Có một lý do mà mình cho là hơi ngụy biện khi khăng khăng đòi dùng JS-in-CSS theo mình đoán là các bạn thật sự chưa đủ tự tin cũng như \"trình\" để viết CSS hiện đại, bạn chuyên tâm nâng tầm JS của mình mà quên mất việc nâng tầm CSS, vón đã phát triển rất xa từ cái thời bạn dùng <code class=\"language-inline-text\">float</code></p>\n<p><a href=\"https://epicreact.dev/css-variables/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Use CSS Variables instead of React Context</a></p>\n","cover_image":"","related":[{"id":"d7c5a1be37f6b7aa2083d3afe80563b9","path":"/2018-08-06-huong-dan-bat-dau-voi-firebase/","title":"Những tính năng cở bản của Firebase","desc":"Năm 2016 google giới thiệu Firebase. Khi bắt đầu phát triển ứng dụng điện thoại, bạn sẽ cần đến server và một developer để làm việc với server"},{"id":"038bc8dd6494a9d7ff4a2ffd06cb8a36","path":"/2018-04-24-huong-dan-huong-dan-lam-animation-voi-react/","title":"Một số cách làm Animation trong React","desc":"Tổng hợp một số phương pháp làm animation với React"},{"id":"b8095fcc4fddb26736d28255b2cd38ed","path":"/2018-05-22-huong-dan-lam-viec-voi-form-trong-react/","title":"Làm việc với Form trong React","desc":"Xử lý form trong React, căn bản nhất"},{"id":"65c9d6e21303c8c99eff5408a9afcf9c","path":"/2018-10-14-react-job-interview-goc-nhin-nguoi-tuyen-dung/","title":"Góc nhìn của người tuyển dụng một lập trình viên React","desc":"Trong một tương lai không xa, khi mình được đặt vào vị trí phỏng vấn các bạn Front-End, mình sẽ hỏi gì đây?"}]}},"context":{}}