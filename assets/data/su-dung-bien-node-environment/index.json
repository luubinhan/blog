{"hash":"80b05d4cf7c7757ed6d67805cf5444ee65da77d8","data":{"post":{"title":"Sử dụng biến Node Environment","path":"/su-dung-bien-node-environment/","slug":"/2018-03-09-huong-dan-su-dung-bien-enviroment-nhu-the-nao","date":"2018-03-09","timeToRead":2,"tags":[{"id":"javascript","title":"javascript","path":"/tag/javascript/"},{"id":"webpack","title":"webpack","path":"/tag/webpack/"}],"desc":"Biến environment là một phần cơ bản cần biết khi làm việc với Node","content":"<p>Khi nhắc đến thuật ngữ \"Environment Variable\" là nghĩ ngay tới việc thiết đặt biến này cho thư mục Java Home trong windows</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*NWeRct1eJ16rAmEaabKV7A.png\"></p>\n<p>Thật ra không liên quan gì đâu nhá</p>\n<p>Trong Node, biến Environment là một biến global, thường được sử dụng để chỉ định <code>process</code> nào muốn chạy. Ví dụ, khi chạy một ứng dụng web, ta sẽ có các biến <strong>Environment</strong> sau:</p>\n<ul>\n<li>Port</li>\n<li>Database connection string</li>\n</ul>\n<p>Nếu đã từng làm việc với .Net, chắc sẽ biết tới file <code>web.config</code>. Biến Environment làm việc i như các thiết đặt trong <code>web.config</code></p>\n<p>Ảnh vui nha</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*v9l07sac43rmP-FAXxmwkw.png\"></p>\n<h1 id=\"set-giá-trị-bằng-terminal\"><a href=\"#set-gi%C3%A1-tr%E1%BB%8B-b%E1%BA%B1ng-terminal\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Set giá trị bằng terminal</h1>\n<p>Thí dụ ta set giá trị của <code>PORT</code> </p>\n<pre class=\"language-text\"><code class=\"language-text\">PORT=6060 NODE_ENV=production webpack</code></pre>\n<p>Giờ lúc code, ta gọi cái biến này ra bằng cách</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> port <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span><span class=\"token property-access\">env</span><span class=\"token punctuation\">.</span><span class=\"token constant\">PORT</span></code></pre>\n<p>Không phải lúc nào set giá trị của biến <code>env</code> bằng terminal, ví dụ connection string thì không ai đưa vào bằng terminal</p>\n<pre class=\"language-text\"><code class=\"language-text\">PORT=65534 DB_CONN=&quot;mongodb://react-cosmos-db:swQOhAsVjfHx3Q9VXh29T9U8xQNVGQ78lEQaL6yMNq3rOSA1WhUXHTOcmDf38Q8rg14NHtQLcUuMA==@react-cosmos-db.documents.azure.com:19373/?ssl=true&amp;replicaSet=globaldb&quot; SECRET_KEY=b6264fca-8adf-457f-a94f-5a4b0d1ca2b9</code></pre>\n<h1 id=\"set-giá-trị-bằng-file-env\"><a href=\"#set-gi%C3%A1-tr%E1%BB%8B-b%E1%BA%B1ng-file-env\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Set giá trị bằng file <code>.env</code></h1>\n<p>Tạo ra một cái file <code>.env</code> trong cùng thư mục project, khai báo mớ biến environment ở đây</p>\n<pre class=\"language-text\"><code class=\"language-text\">PORT=65534\n\nDB_CONN=&quot;mongodb://react-cosmos-db:swQOhAsVjfHx3Q9VXh29T9U8xQNVGQ78lEQaL6yMNq3rOSA1WhUXHTOcmDf38Q8rg14NHtQLcUuMA==@react-cosmos-db.documents.azure.com:10255/?ssl=true&amp;replicaSet=globaldb&quot;\n\nSECRET_KEY=&quot;b6264fca-8adf-457f-a94f-5a4b0d1ca2b9&quot;</code></pre>\n<p>Để đọc được giá trị này, có rất nhiều cách, mà cách nào thì cũng phải cái thêm package!, dùng package dễ nhất là <code>dotenv</code></p>\n<pre class=\"language-text\"><code class=\"language-text\">npm install dotenv --save</code></pre>\n<p>Việc sử dụng hết sức đơn giản như sau</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'dotenv'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">config</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> <span class=\"token maybe-class-name\">MongoClient</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'môngdb'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token property-access\"><span class=\"token maybe-class-name\">MongoClient</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token maybe-class-name\">MongoClient</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">connect</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span><span class=\"token property-access\">env</span><span class=\"token punctuation\">.</span><span class=\"token constant\">DB_CONN</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> db</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword control-flow\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"We are connected\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<blockquote>\n<p>Lưu ý đừng check in file <code>.env</code> này lên github, nếu checkin lên Github sẽ báo ngay tới email là việc làm này hết sức nguy hại tới sự 'riêng tư'!</p>\n</blockquote>\n<h1 id=\"extension-của-vscode\"><a href=\"#extension-c%E1%BB%A7a-vscode\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Extension của VSCode</h1>\n<p>Nếu đang dùng VSCode, một số extension này sẽ hữu ích</p>\n<p>DotENV extension: mang màu sắc đến với cuộc sống</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*K5PBHyeMSrND58ycVyw3YA.png\"></p>\n","cover_image":"","related":[{"id":"6e12ee448b407c69e13739fd004305be","path":"/huong-dan-dung-bien-trong-css-de-lam-dark-light-mode/","title":"Hướng dẫn dùng biến trong CSS để làm dark/light mode","desc":"Nếu bạn cũng như mình, mặc kệ những đứa xài IE11, mình chỉ hỗ  trợ cho đối tượng người sử dụng là những người trẻ thông minh, xài Edge, xài Chrome, xài Firefox, đọc ngay bài viết này mình chỉ cách làm."},{"id":"34e1a6e4e7dac657edca4c9832d737dc","path":"/su-dung-tabindex/","title":"Sử dụng tabindex","desc":"Mặc định thứ tự tab theo vị trí của DOM rất hữu dụng, tuy nhiên có trường hợp chúng ta sẽ muốn thay đổi thứ tự tab này. Cùng nghiên cứu tabindex để set thứ tự tab"},{"id":"67b6f325941d1f641ba6144fc210f796","path":"/3-dieu-ban-co-the-khong-biet-ve-bien-trong-css/","title":"3 điều bạn có thể không biết về biến trong CSS","desc":"Bài này chúng ta sẽ đi qua ba thứ chúng ta có thể làm được với biến trong css, có thể bạn chưa biết"},{"id":"cb3f4bb6b7e51df501700726716dff04","path":"/tai-sao-su-dung-flow-va-su-dung-flow-nhu-the-nao-trong-react/","title":"Tại sao sử dụng Flow, và sử dụng Flow như thế nào trong React","desc":"Tại sao chúng ta cần type checking trong javascript, tại sao Flow lại là lựa chọn của nhiều developer hiện nay"}]}},"context":{}}