{"hash":"0281ffacf02e407aef71fb6a89d922a636585707","data":{"post":{"title":"Chỉ dẫn để thiết kế React Component","path":"/2018-09-25-huong-dan-thiet-ke-react-component-tot/","slug":"/2018-09-25-huong-dan-thiet-ke-react-component-tot","date":"2018-09-25","timeToRead":3,"tags":[{"id":"javascript","title":"javascript","path":"/tag/javascript/"},{"id":"react","title":"react","path":"/tag/react/"}],"desc":"Tốt hơn, tốt nữa, tốt mãi, luôn là điều mình muốn, ngoài chuyện viết cho nó chạy đúng, viết thế nào tốt nhất nên là mục tiêu khi làm việc","content":"<!-- TOC -->\n<ul>\n<li><a href=\"#single-responsibility-principle\">Single Responsibility Principle</a></li>\n<li><a href=\"#export\">Export</a></li>\n<li><a href=\"#type-check\">Type check</a></li>\n<li><a href=\"#consistance\">Consistance</a></li>\n<li><a href=\"#naming\">Naming</a></li>\n</ul>\n<!-- /TOC -->\n<p><strong>Đây là tổng hợp những quan điểm thiết kế component sao cho tốt, chứ không phải là chuẩn mực gì hết, theo quan điểm cá nhân người viết - là mình đây, không hề là chuẩn mực công nghiệp gì cả.</strong></p>\n<p>Thử hình dung, chúng ta có một component với khoảng hơn chục <code class=\"language-inline-text\">prop</code>, dựa trên các <code class=\"language-inline-text\">prop</code> truyền vào, component sẽ cho ra kết quả khác nhau, một nhu cầu tất yếu, tuy nhiên nếu hạn chế được ít chừng nào thì tốt chừng ấy, gần như số lượng <code class=\"language-inline-text\">prop</code> của component quá nhiều thì chúng ta sẽ không nhớ nổi cần những gì cho component đó, lúc nào chúng ta cũng phải mở ra đọc docs, đôi khi mở source ra để check logic bên trong nó.</p>\n<h1 id=\"single-responsibility-principle\"><a href=\"#single-responsibility-principle\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Single Responsibility Principle</h1>\n<p>Nếu 1 component đang có quá nhiều <code class=\"language-inline-text\">prop</code>, nó đang ôm đồm quá nhiều công việc, hãy nhớ đến nguyên tắc <a href=\"https://en.wikipedia.org/wiki/Single_responsibility_principle\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Single Responsibility Principle</a> (SRP), tạm dịch là ai làm việc nấy, chia component đó ra thành các component nhỏ hơn, từng component giải quyết từng vấn đề.</p>\n<p><img src=\"https://techmaster.vn/fileman/Uploads/ImageBlog/hoc-lap-trinh-truc-tuyen-online-co-ban-den-nang-cao-20122015-1.jpg\"></p>\n<h1 id=\"export\"><a href=\"#export\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Export</h1>\n<p>Một kiểu viết mình rất thích, thay vì export component <code class=\"language-inline-text\">&lt;TableRow/></code>, <code class=\"language-inline-text\">&lt;TableCell/></code>, mình sẽ export  component dạng <code class=\"language-inline-text\">&lt;Table.Row/></code>, <code class=\"language-inline-text\">&lt;Table.Cell/></code></p>\n<div class=\"gridsome-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> Table <span class=\"token keyword\">from</span> <span class=\"token string\">'./Table'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> TableRow <span class=\"token keyword\">from</span> <span class=\"token string\">'./TableRow'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> TableCell <span class=\"token keyword\">from</span> <span class=\"token string\">'./TableCell'</span><span class=\"token punctuation\">;</span>\n\nTable<span class=\"token punctuation\">.</span>Cell <span class=\"token operator\">=</span> TableCell<span class=\"token punctuation\">;</span>\nTable<span class=\"token punctuation\">.</span>Row <span class=\"token operator\">=</span> TableRow<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span>\n  TableCell<span class=\"token punctuation\">,</span>\n  TableRow\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Table<span class=\"token punctuation\">;</span></code></pre></div>\n<p><em>Nếu bạn không hiểu vì sao mình có thể gọi <code class=\"language-inline-text\">&lt;Table.Row/></code>, <code class=\"language-inline-text\">&lt;Table.Cell/></code>, mình giải thích luôn, lợi dụng đặc điểm biến kiểu reference, tham khảo <a href=\"https://luubinhan.github.io/blog/2017-09-25-10-khai-niem-javascript-can-biet\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">lại bài này</a>, thằng TableCell và Table.Cell đều tham chiếu đến cùng vùng nhớ</em></p>\n<h1 id=\"type-check\"><a href=\"#type-check\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Type check</h1>\n<p>Luôn dùng type check cho component, thời điểm hiện tại mình khuyến khích <a href=\"https://luubinhan.github.io/blog/2018-09-10-huong-dan-lam-viec-voi-flow-react-type-checking\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">dùng Flow</a>, nó đảm bảo rằng component sẽ được truyền đúng giá trị <code class=\"language-inline-text\">prop</code> nó cần, đồng thời lúc gõ ra mình cũng sẽ thấy được danh sách các <code class=\"language-inline-text\">prop</code> của component đó trên editor</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*cT7C0Tk53cilIYNWNo8KfA.gif\" alt=\"Chỉ dẫn để thiết kế React Component\"></p>\n<h1 id=\"consistance\"><a href=\"#consistance\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Consistance</h1>\n<p>Luôn thống nhất trong hệ thống component đang build, không thể lúc vui bạn dùng <code class=\"language-inline-text\">prop</code> tên <code class=\"language-inline-text\">disable</code> chổ khác dùng <code class=\"language-inline-text\">enable</code>, nếu được thì chỉ chọn 1 trong 2 thôi.</p>\n<p>Ví dụ khác, nếu component cho phép truyền vào biến màu sắc, chổ này bạn dùng <code class=\"language-inline-text\">variant=\"primary|secondary|danger\"</code>, chổ kia bạn lại dùng <code class=\"language-inline-text\">color=\"blue|grey|red\"</code> thì hết sức khó chịu cho người khác.</p>\n<h1 id=\"naming\"><a href=\"#naming\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Naming</h1>\n<p>Về cách đặt tên <code class=\"language-inline-text\">prop</code>, luôn đặt tên cho dễ hình dung được công dụng của component đó làm nhiệm vụ gì, ảnh hưởng gì đến component</p>\n<p>Giờ lấy ví dụ một component rất phổ biến <code class=\"language-inline-text\">&lt;Alert /></code></p>\n<p><img src=\"https://cdn-images-1.medium.com/max/1600/0*xkEnUeapJT4ut5r1.png\" alt=\"Chỉ dẫn để thiết kế React Component\"></p>\n<p>Thường chúng ta sẽ tạo ra component có các <code class=\"language-inline-text\">prop</code> kiểu này</p>\n<div class=\"gridsome-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Alert</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Thông báo</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Alert</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Alert</span></span> <span class=\"token attr-name\">success</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Thành công</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Alert</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Alert</span></span> <span class=\"token attr-name\">warning</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Cảnh báo</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Alert</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Alert</span></span> <span class=\"token attr-name\">danger</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Hư mẹ rồi</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Alert</span></span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>Rất rõ ràng sạch sẽ, xúc tích. Tuy nhiên nếu chúng ta dùng theo kiểu sau</p>\n<div class=\"gridsome-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Alert</span></span> <span class=\"token attr-name\">success</span> <span class=\"token attr-name\">warning</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Thành công</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Alert</span></span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>Sẽ có những anh developer ngu ngu ngơ ngơ dùng như vậy thật đấy. Tất nhiên nếu chúng ta là người viết cái <code class=\"language-inline-text\">&lt;Alert/></code> chúng ta sẽ không đời nào truyền vào kiểu vậy. Nếu truyền vào kiểu như vậy thì nó <code class=\"language-inline-text\">render</code> ra cái gì, đó mà đoán được. Một giải pháp được khuyến khích</p>\n<div class=\"gridsome-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">AlertBetter</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Thông báo</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">AlertBetter</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">AlertBetter</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>success<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Thành công</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">AlertBetter</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">AlertBetter</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>warning<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Cảnh báo</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">AlertBetter</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">AlertBetter</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>danger<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Hư mẹ rồi</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">AlertBetter</span></span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>Nguồn tham khảo và tổng hợp</p>\n<ul>\n<li><a href=\"https://blog.kentcdodds.com/make-impossible-states-impossible-cf85b97795c1\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://blog.kentcdodds.com/make-impossible-states-impossible-cf85b97795c1</a></li>\n<li><a href=\"https://hackernoon.com/principles-of-component-api-prop-design-bb20cd58da54\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://hackernoon.com/principles-of-component-api-prop-design-bb20cd58da54</a></li>\n</ul>\n","cover_image":"","related":[{"id":"e604c1874dc653589d8750eac8a17993","path":"/2018-11-14-chi-dan-thiet-ke-form-cua-google/","title":"Kim chỉ nam khi thiết kế form từ Google","desc":"Bài này nằm trong loạt bài chuẩn kiến thức để đi thi web mobile specialist của google. Một vài điểm cần nhớ khi thiết kế và làm việc với form"},{"id":"6f6d8f9b0421ee323ebfb106eba1bec0","path":"/2018-08-21-huong-dan-su-dung-checkbox-va-toggle-switch/","title":"Checkbox hay Toggle switch - gợi ý cho thiết kế","desc":"7 trường hợp thường thấy trong thiết kế form"},{"id":"8f789cc3ef4f44d6a5dae61c71e8bc64","path":"/2020-01-29-nguyen-tac-thiet-ke-cua-vue-3/","title":"Kim chỉ nam mà Vue 3 đã áp dụng khi thiết kế","desc":"Kim chỉ nam (principle) được áp dụng khi cần đưa ra một quyết định kỹ thuật trước vô vàng các lựa chọn. Nếu bạn đã biết được mọi thứ vận hành như thế nào, thì đã đến lúc bạn tiến một bước xa hơn, trả lời cho câu hỏi tại sao"},{"id":"c3b0c1585f2bb1dbf4887da537c56854","path":"/2020-01-01-chi-dan-viet-redux-sao-cho-chuan/","title":"Chỉ dẫn viết Redux sao cho chuẩn","desc":"Đây không phải là quan điểm cá nhân, bài viết được dịch thuật từ tài liệu chính thức của Redux"}]}},"context":{}}