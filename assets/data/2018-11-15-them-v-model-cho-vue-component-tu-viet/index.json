{"hash":"f14dc783cbb94c047b7e77ba6849dad3274d3eaa","data":{"post":{"title":"Hổ trợ v-model trên một custom Vue component","path":"/2018-11-15-them-v-model-cho-vue-component-tu-viet/","slug":"/2018-11-15-them-v-model-cho-vue-component-tu-viet","date":"2018-11-15","timeToRead":1,"tags":[{"id":"vuejs","title":"vuejs","path":"/tag/vuejs/"}],"desc":"Hướng dẫn cách viết một component để có thể dùng v-model","content":"<p>Với Vue nó khác với React là data có thể binding two-way, không ràng buộc one-way data flow, đơn giản là khai báo <code class=\"language-inline-text\">v-model</code> cho dữ liệu nào muốn đồng bộ hóa, còn nếu binding một chiều thì dùng <code class=\"language-inline-text\">v-bind</code>.</p>\n<div class=\"gridsome-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>email<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n// hoặc có thể viết\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">:value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>email<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">@input</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>e => email = e.target.balue<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></code></pre></div>\n<div class=\"note\">Nghĩa là để <code>v-model</code> có thể chạy được, element hoặc component gắn nó phải nhận vào một prop (mặc định là <code>value</code>) và emit một event (mặc định là <code>input</code>)</div>\n<p>Tùy thuộc vào element, Vue sẽ dùng xử lý dữ liệu được emit, trên input type là radio , nó sẽ dùng prop checked và event là change.</p>\n<h2 id=\"thêm-v-model-cho-một-component-chúng-ta-tự-viết\"><a href=\"#th%C3%AAm-v-model-cho-m%E1%BB%99t-component-ch%C3%BAng-ta-t%E1%BB%B1-vi%E1%BA%BFt\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Thêm <code class=\"language-inline-text\">v-model</code> cho một component chúng ta tự viết</h2>\n<p>Chúng ta sẽ làm một component sử dụng <code class=\"language-inline-text\">&lt;input /></code></p>\n<div class=\"gridsome-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n\t&lt;input @input=”handleInput” />\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\nexport default {\n\tname: \"basic-input\",\n\tprops: {\n\t\tvalue\n  },\n  data() {\n    return {\n      Content: this.value\n    }\n  },\n  methods: {\n    handleInput(e) {\n      this.$emit(\"input\", this.content)\n    }\n  }\n}\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>Chỉ cần thêm props <code class=\"language-inline-text\">value</code> cho component là chúng ta có thể sử dụng <code class=\"language-inline-text\">v-model</code> trên <code class=\"language-inline-text\">basic-input</code></p>\n<div class=\"gridsome-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>basic-input</span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>email<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></code></pre></div>\n<h2 id=\"tùy-biến-v-model-prop-và-event\"><a href=\"#t%C3%B9y-bi%E1%BA%BFn-v-model-prop-v%C3%A0-event\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Tùy biến <code class=\"language-inline-text\">v-model</code> prop và event</h2>\n<p>Nếu nhu cầu cao hơn, chúng ta có thể không muốn dùng đến các event, prop mặc định để <code class=\"language-inline-text\">v-model</code> chạy được, để làm được việc ấy, thêm một property cho component tên <code class=\"language-inline-text\">model</code></p>\n<div class=\"gridsome-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  props<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    tabilu\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  model<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    prop<span class=\"token operator\">:</span> <span class=\"token string\">\"tabilu\"</span><span class=\"token punctuation\">,</span>\n    event<span class=\"token operator\">:</span> <span class=\"token string\">\"blur\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  methods<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">handleInput</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">$emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"blur\"</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Khi Vue nó gặp component như vầy</p>\n<div class=\"gridsome-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>basic-input</span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>email<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></code></pre></div>\n<p>Nó sẽ tự độ convert sang</p>\n<div class=\"gridsome-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>basic-input</span> <span class=\"token attr-name\">:tabilu</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>email<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">@blur</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>e => email = e.target.value<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></code></pre></div>\n<p><a href=\"https://scotch.io/tutorials/add-v-model-support-to-custom-vuejs-component\" target=\"_blank\" rel=\"noopener noreferrer\">Add <code class=\"language-inline-text\">v-model</code> Support to Custom Vue.js Component</a></p>\n","cover_image":"","related":[{"id":"539d1f59ba27536395acb80f6af2f914","path":"/2019-12-10-huong-dan-su-dung-v-model-tren-component-long-nhau/","title":"Sử dụng v-model trên component lồng nhau","desc":"Cách viết dùng v-model để tự đồng bộ giá trị khi lồng các component"},{"id":"6314a0ae5c8d97df66e38b0f4d856d99","path":"/2018-11-17-huong-dan-lam-animation-voi-vue-component/","title":"Viết animation cho Vue Component","desc":"Làm một số animation đơn giản bằng công cụ có sẵn của Vue"},{"id":"d5343507bdfb3d91dba410ab2f481ef8","path":"/2018-03-29-huong-dan-query-string-voi-react-router/","title":"Query String với React Router","desc":"Cách sử dụng query string với React Router siêu căn bản"}]}},"context":{}}