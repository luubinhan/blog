{"hash":"6a6d98253a952d0053c5fdbea2fd0cf7bb24ef26","data":{"post":{"title":"Sử dụng tabindex","path":"/su-dung-tabindex/","slug":"/2018-10-02-huong-dan-su-dung-tabindex-de-di-chuyen","date":"2018-10-02","timeToRead":3,"tags":[{"id":"ux-ui","title":"ux-ui","path":"/tag/ux-ui/"},{"id":"mobile-web-specialist","title":"mobile-web-specialist","path":"/tag/mobile-web-specialist/"}],"desc":"Mặc định thứ tự tab theo vị trí của DOM rất hữu dụng, tuy nhiên có trường hợp chúng ta sẽ muốn thay đổi thứ tự tab này. Cùng nghiên cứu tabindex để set thứ tự tab","content":"<p><code class=\"language-text\">tabindex</code> có thể sử dụng trong bất kỳ thẻ html nào</p>\n<p><strong><code class=\"language-text\">tabindex=&quot;0&quot;</code></strong>: element sẽ có thứ tự tab theo mặc định (theo vị trí DOM), nó có thể được focus bằng cách ấn phím <strong>Tab</strong>, hoặc gọi phương thức <code class=\"language-text\">focus()</code></p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">tabindex</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Press Tab to Focus Me!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>Các element có thể focus như thẻ <code class=\"language-text\">a</code>, <code class=\"language-text\">button</code>, <code class=\"language-text\">select</code>, <code class=\"language-text\">input</code>, <code class=\"language-text\">textarea</code> thì đã có sẵn <code class=\"language-text\">tabindex=0</code>, trừ khi chúng ta dùng một thẻ <code class=\"language-text\">div</code> như <code class=\"language-text\">button</code> thì phải đặt <code class=\"language-text\">tabindex=0</code>, để user có thể tab tới đó mà.</p>\n<p><strong><code class=\"language-text\">tabindex=&quot;-1&quot;</code></strong>: sẽ bỏ qua element này khi nhấn tab, vẫn có thể focus bằng cách gọi <code class=\"language-text\">focus()</code></p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>foo<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">tabindex</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>-1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Chớ bao giờ tab được anh đâu<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onclick</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>foo.focus();<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Focus vào thằng ở trên<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></code></pre>\n<p><strong><code class=\"language-text\">tabindex=&quot;5&quot;</code></strong>: nếu là giá trị lớn hơn 0, nó sẽ được ưu tiên cao hơn. Nếu có nhiều tabindex lớn hơn 0, nó sẽ đi theo thứ tự <strong>bắt đầu từ giá trị nhỏ nhất (nhưng vẫn lớn hơn 0 nhé) đến giá trị cao hơn.</strong></p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><span class=\"token punctuation\">></span></span>Anh trước<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><span class=\"token punctuation\">></span></span>Chú sau<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">tabindex</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>5<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Chị có bầu, phải được ưu tiên em ơi<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>Sử dụng đúng nhất cho các trường hợp cần được ưu tiên cao hơn như header, navigation. Khuyến khích tổ chức DOM theo logic như thứ tự tab mong muốn. Nếu bạn muốn dùng <code class=\"language-text\">tabindex</code></p>\n<h1 id=\"quản-lý-focus-trên-trang\"><a href=\"#qu%E1%BA%A3n-l%C3%BD-focus-tr%C3%AAn-trang\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Quản lý focus trên trang</h1>\n<blockquote>\n<p>Tip: kiểm tra element đang được focus: <code class=\"language-text\">document.activeElement</code></p>\n</blockquote>\n<p>Đây là trường hợp mà <code class=\"language-text\">tabindex</code> không chỉ hữu ích mà còn cần thiết. Bạn có  trang single page chứa các section khác nhau, nó không hiển thị đồng thời nhiều section trên cùng viewport được. Click vào thanh navigation để di chuyển giữa các section. Lúc đó, chúng ta sẽ có được section đang hiển thị trên viewport, đặt giá trị <code class=\"language-text\">tabindex=&quot;-1&quot;</code> để tách nó khỏi thứ tự tab mặc định và gọi <code class=\"language-text\">focus()</code>.</p>\n<h1 id=\"quản-lý-tab-trên-component\"><a href=\"#qu%E1%BA%A3n-l%C3%BD-tab-tr%C3%AAn-component\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Quản lý tab trên component</h1>\n<p>Lấy ví dụ thẻ <code class=\"language-text\">&lt;select /&gt;</code>, khi được focus, user có thể dùng các phím mũi tên để chọn các option. Nếu đang build một <code class=\"language-text\">&lt;select /&gt;</code> custom bằng <code class=\"language-text\">&lt;ul /&gt;</code> chẳng hạn, user phải có kiểu hoạt động tương tự như vậy</p>\n<p>Để tham khảo thêm chi tiết keyboard nào cho element nào, đọc bài <a href=\"https://www.w3.org/TR/wai-aria-practices/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Accessible Rich Internet Applications (ARIA) Authoring Practices</a></p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>radio-group</span><span class=\"token punctuation\">></span></span>\n  // Giả dụ user nhấn phím mũi tên đi xuống, chúng ta gọi focus vào đứa tiếp theo\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>radio-button</span> <span class=\"token attr-name\">tabindex</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>-1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Water<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>radio-button</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>radio-button</span> <span class=\"token attr-name\">tabindex</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Coffee<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>radio-button</span><span class=\"token punctuation\">></span></span> // call .focus() on this element\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>radio-button</span> <span class=\"token attr-name\">tabindex</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>-1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Tea<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>radio-button</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>radio-button</span> <span class=\"token attr-name\">tabindex</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>-1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Cola<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>radio-button</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>radio-button</span> <span class=\"token attr-name\">tabindex</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>-1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Ginger Ale<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>radio-button</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>radio-group</span><span class=\"token punctuation\">></span></span></code></pre>\n<h1 id=\"vấn-đề-với-modal-và-keyboard\"><a href=\"#v%E1%BA%A5n-%C4%91%E1%BB%81-v%E1%BB%9Bi-modal-v%C3%A0-keyboard\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Vấn đề với Modal và keyboard</h1>\n<p>Có tình huống focus sẽ lặp mãi mãi, như cái autocomplete nó sẽ bắt sự kiện focus và tab, không cho user ra khỏi element đó nếu dùng phím. Nó được đề cập cụ thể <a href=\"http://webaim.org/standards/wcag/checklist#sc2.1.2\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">trong đây</a>. </p>\n<p>Tình huống khác cũng hay gặp là cái modal, khi modal hiển thị, chúng ta không cho user truy cập đến các phần khác bên dưới, nhưng nếu dùng phím vẫn có thể di chuyển qua các phần tử bên dưới.</p>\n<p>Bằng cách cho keyboard tạm thời <em>khóa</em> trên modal để user không di chuyển ra khỏi modal này nếu dùng phím tab, nhớ trả lại bình thường sau khi modal đóng lại.</p>\n<ul>\n<li>Chi tiết về cách làm <a href=\"https://github.com/udacity/ud891/tree/gh-pages/lesson2-focus/07-modals-and-keyboard-traps/solution\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">tham khảo source code</a> và <a href=\"http://udacity.github.io/ud891/lesson2-focus/07-modals-and-keyboard-traps/solution/index.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">demo ở đây</a></li>\n<li><a href=\"https://developers.google.com/web/fundamentals/accessibility/focus/using-tabindex\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Dịch từ Google Web Fundamentals</a></li>\n<li><a href=\"https://www.udacity.com/course/web-accessibility--ud891\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Course hay của Udacity về Web Accessibility</a></li>\n</ul>\n","cover_image":"","related":[{"id":"cb3f4bb6b7e51df501700726716dff04","path":"/tai-sao-su-dung-flow-va-su-dung-flow-nhu-the-nao-trong-react/","title":"Tại sao sử dụng Flow, và sử dụng Flow như thế nào trong React","desc":"Tại sao chúng ta cần type checking trong javascript, tại sao Flow lại là lựa chọn của nhiều developer hiện nay"},{"id":"b1851cc1980bb093ae4f97c8d1a1d08d","path":"/su-dung-react-hook-effect/","title":"Sử dụng React Hook Effect","desc":"Bài này mình contribute cho http://vi.reactjs.org về cách sử dụng React Hook Effect"},{"id":"2bda1aea7bf5ac181ed1d3a656b277f5","path":"/huong-dan-su-dung-use-memo-trong-react/","title":"Hướng dẫn sử dụng useMemo trong React","desc":"Nếu bạn thấy app của mình bắt đầu chậm, đó là lúc bạn nên bắt đầu cân nhắc các phương pháp để tối ưu tốc độ và đọc bài viết này."},{"id":"4c10a4ea5b43449c00b3d2717f69c6a3","path":"/su-dung-ellipsis-text-voi-flexbox/","title":"Sử dụng ellipsis text với flexbox","desc":"Câu chuyển cắt chuỗi khi quá dài bằng CSS, trong tình huống sau, cái tên file của bạn quá dài, nhưng bạn không muốn cắt ở cuối chuỗi, mà cắt ở giữa để vẫn thấy được file extension"}]}},"context":{}}