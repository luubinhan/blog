{"hash":"7044f7fad267d6cd2ca838488bf21d29cb9e70de","data":{"post":{"title":"Viết component gọn gàng hơn với Computed Setter","path":"/viet-component-gon-gang-hon-voi-computed-setter/","slug":"/2018-12-20-su-dung-computed-setter-voi-vuex","date":"2018-12-20","timeToRead":1,"tags":[{"id":"vuejs","title":"vuejs","path":"/tag/vuejs/"}],"desc":"Một gợi ý để sử dụng computed setter với các dữ liệu bên ngoài component như Vuex","content":"<p>Một trong những khái niệm quan trọng của Vue là computed property.</p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n        firstName<span class=\"token operator\">:</span>  <span class=\"token string\">'John'</span><span class=\"token punctuation\">,</span>\n        lastName<span class=\"token operator\">:</span> <span class=\"token string\">'Doe'</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\ncomputed<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">fullName</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>firstName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>lastName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-inline-text\">fullName</code> được gọi là một computed getter. Chúng ta có thể khai báo một cách đầy đủ hơn</p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">computed<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    fullName<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>firstName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>lastName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token function\">set</span><span class=\"token punctuation\">(</span>fullName<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>firstName <span class=\"token operator\">=</span> fullName<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>lastName <span class=\"token operator\">=</span> fullName<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Từ giờ, khi chúng ta đặt lại giá trị <code class=\"language-inline-text\">fullName</code> ( <code class=\"language-inline-text\">this.fullName = 'Example'</code>), 2 giá trị <code class=\"language-inline-text\">firstName</code> và <code class=\"language-inline-text\">lastName</code> sẽ cập nhập theo.</p>\n<p>Giờ lấy ví dụ sử dụng thực tế hơn với Vuex. Chúng ta lấy một số dữ liệu từ store để sử dụng trong component. Nếu ko dùng computed setter, chúng ta sẽ viết như sau</p>\n<div class=\"gridsome-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        &lt;input\n            :value=\"text\"\n            type=\"text\"\n            @input=\"onInput\"\n        />\n        &lt;button @click=\"convertToUpperCase\">To UpperCase&lt;/button\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\nexport default {\n    props: ['text'],\n    methods: {\n        onInput (e) {\n            this.$store.dispatch('CHANGE_TEXT', e.target.value);\n        },\n        convertToUpperCase() {\n            this.$store.dispatch('CHANGE_TEXT', this.text.toUpperCase())\n        }\n    }\n}\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>Dùng Computed Setter sẽ gọn gàng hơn.</p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>input\n            v<span class=\"token operator\">-</span>model<span class=\"token operator\">=</span><span class=\"token string\">\"textValue\"</span>\n            type<span class=\"token operator\">=</span><span class=\"token string\">\"text\"</span>\n        <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>button @click<span class=\"token operator\">=</span><span class=\"token string\">\"convertToUpperCase\"</span><span class=\"token operator\">></span>To UpperCase<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n    props<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'text'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    computed<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        textValue<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">get</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token function\">set</span> <span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$store<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'CHANGE_TEXT'</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    methods<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">convertToUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textValue <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textValue<span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></code></pre></div>\n<ol>\n<li>Update dữ liệu bên ngoài component đơn giản hơn. Thay thế <code class=\"language-inline-text\">:value</code>, <code class=\"language-inline-text\">@input</code>, bằng <code class=\"language-inline-text\">v-model</code>. Thay đổi giá trị cũng đơn giản hơn, như trong hàm <code class=\"language-inline-text\">convertToUpperCase</code></li>\n<li>Chúng ta chỉ gọi <code class=\"language-inline-text\">dispatch</code> ở một chổ duy nhất khi cần thay đổi giá trị</li>\n</ol>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://medium.com/@Taha_Shashtari/simplify-your-components-with-computed-setters-2f687f193fb0\">Simplify Your Vue Components with Computed Setters</a></p>\n","cover_image":"","related":[{"id":"dc34c8a0c083ef6c15db1a0747852887","path":"/hoi-nhanh-dap-gon-ve-webpack/","title":"Hỏi nhanh đáp gọn về webpack","desc":"Chuyên mục hỏi nhanh - đáp gọn, nếu bạn chưa biết gì về webpack"},{"id":"af1b4fabe8e0499431dafa72082c9288","path":"/hoi-nhanh-dap-gon-ve-rest/","title":"Hỏi nhanh đáp gọn về REST","desc":"Chuyên mục hỏi nhanh - đáp gọn, nếu bạn chưa biết gì về REST"},{"id":"cf47898b4f8e17bbc7856e26a77f070a","path":"/mot-vai-pattern-de-viet-component-cua-react-can-dung-chung-state/","title":"Một vài pattern để viết component của React cần dùng chung state","desc":"Câu chuyện chia sẽ state và phương thức giữa các component chưa bao giờ là cũ trong React"},{"id":"8fcb6b1e1a20c4b805d798bcb88aa9dd","path":"/viet-cau-dieu-kien-tot-hon-trong-javascript/","title":"Viết câu điều kiện tốt hơn trong javascript","desc":"Xem xét một trong những câu lệnh được sử dụng nhiều nhất trong lập trình: câu điều kiện"}]}},"context":{}}