{"hash":"e1532d0aebaf3bcf47bbf8a08cbde03cecbbc9cf","data":{"post":{"title":"Gửi message từ server nhưng không dùng WebSocket","path":"/2022-12-04-gui-message-tu-server/","slug":"2022-12-04-gui-message-tu-server","date":"2022-12-04","timeToRead":3,"tags":[{"id":"javascript","title":"javascript","path":"/tag/javascript/"},{"id":"hoc-thuat","title":"hoc-thuat","path":"/tag/hoc-thuat/"}],"desc":"Tìm hiểu API của JS để gửi và nhận message từ server","content":"<p>Nếu cần gửi một message từ server đến client, thay vì phía client gửi request tới server, Javascript có một cơ chế đã được hỗ trợ từ rất lâu, là dùng <code class=\"language-inline-text\">EventSource</code>,  nó còn có trước khi có <code class=\"language-inline-text\">WebSocket</code>. Tất nhiên nó cũng những hạn chế nhất định so với WebSocket. Cụ thể</p>\n<table>\n<thead>\n<tr>\n<th>WebSocket</th>\n<th>EventSource</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Hai chiều</td>\n<td>Một chiều từ server</td>\n</tr>\n<tr>\n<td>Binary và text</td>\n<td>Chỉ text</td>\n</tr>\n<tr>\n<td>WebSocket Protocal</td>\n<td>HTTP</td>\n</tr>\n</tbody>\n</table>\n<p><code class=\"language-inline-text\">EventSource</code> là một lựa chọn phù hợp cho những trường hợp đơn giản, chưa cần dùng đến đao to búa lớn như <code class=\"language-inline-text\">WebSocket</code>. Ví dụ giá vàng, giá xăng cần cập nhập, những dữ liệu mà chỉ cần đi một chiều từ server -> client. <code class=\"language-inline-text\">EventSource</code> còn hỗ trợ <em>auto-reconnect</em> cũng rất tiện (WebSocket phải chạy bằng <em>cơm</em>)</p>\n<h2 id=\"nhận-message\"><a href=\"#nh%E1%BA%ADn-message\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Nhận message</h2>\n<p>Để nhận một message, chúng ta cần tạo một instance <code class=\"language-inline-text\">new EventSource(url)</code>, trình duyệt tự quản lý thiết lập kết nối đến <code class=\"language-inline-text\">url</code> và lắng nghe các event gửi đến.</p>\n<p>Server sẽ trả về status 200 và header <code class=\"language-inline-text\">Content-Type: text/event-stream</code>, message được gửi đến sẽ theo định dạng cố định</p>\n<div class=\"gridsome-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">data: Message <span class=\"token number\">1</span>\n\ndata: Message <span class=\"token number\">2</span>\n\ndata: Message <span class=\"token number\">3</span>\ndata: dòng <span class=\"token number\">2</span> của Message <span class=\"token number\">3</span></code></pre></div>\n<p>Nội dung sẽ nằm sau từ khóa <code class=\"language-inline-text\">data:</code>, các message sẽ được tách biệt bằng 2 dấu xuống dòng <code class=\"language-inline-text\">\\n\\n</code>, nếu chỉ có một dấu <code class=\"language-inline-text\">\\n</code> có nghĩa là message này gồm 2 dòng.</p>\n<p>Trong thực tế, không nên tách message ra 2 dòng và luôn gửi message theo một dòng duy nhất</p>\n<div class=\"gridsome-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\">data<span class=\"token operator\">:</span>  <span class=\"token punctuation\">{</span><span class=\"token property\">\"user\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"John\"</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"message\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"First line_\\n_ Second line\"</span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>Để đọc message này</p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> eventSource <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">EventSource</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/events/subscribe\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\neventSource<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onmessage</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"New message\"</span><span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// hoặc eventSource.addEventListener('message', ...)</span></code></pre></div>\n<h2 id=\"cross-origin-request\"><a href=\"#cross-origin-request\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Cross-origin request</h2>\n<p>Tương tự như <code class=\"language-inline-text\">fetch</code>, chúng ta có thể lắng nghe trên một message cross-origin</p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> source <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">EventSource</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://another-site.com/events\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Để gửi thêm thông tin <code class=\"language-inline-text\">credential</code></p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> source <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">EventSource</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://another-site.com/events\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">withCredentials</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"reconnect\"><a href=\"#reconnect\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Reconnect</h2>\n<p>Như đã nói, <code class=\"language-inline-text\">EventSource</code> tự động reconnect nếu bị đứt connection giữa chừng, server cũng có thể thông báo nên chờ bao lâu trước khi thử lại bằng <code class=\"language-inline-text\">retry:</code></p>\n<div class=\"gridsome-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">retry: <span class=\"token number\">15000</span>\ndata: Hello, I <span class=\"token builtin class-name\">set</span> the reconnection delay to <span class=\"token number\">15</span> seconds</code></pre></div>\n<p>Nếu server không muốn trình duyệt tự động reconnect, server có thể trả status 204, hoặc ở phía client chúng ta <em>cưỡng chế</em> luôn <code class=\"language-inline-text\">eventSource.close()</code></p>\n<h2 id=\"message-id\"><a href=\"#message-id\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Message Id</h2>\n<p>Để giải quyết vấn đề mất message giữa chừng do lỗi connect và không biết được message nào đã nhận và chưa, mỗi message có thể có thêm field <code class=\"language-inline-text\">id</code> để dễ xác định</p>\n<div class=\"gridsome-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">data: Message <span class=\"token number\">1</span>\nid: <span class=\"token number\">1</span>\n\ndata: Message <span class=\"token number\">2</span>\nid: <span class=\"token number\">2</span>\n\ndata: Message <span class=\"token number\">3</span>\ndata: of two lines\nid: <span class=\"token number\">3</span></code></pre></div>\n<h2 id=\"connection-status\"><a href=\"#connection-status\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Connection Status</h2>\n<p>Bên trong object <code class=\"language-inline-text\">EventSource</code> sẽ có property <code class=\"language-inline-text\">readyState</code>, nó chứa <em>status</em> của connection</p>\n<ul>\n<li>EventSource.CONNECTING = 0</li>\n<li>EventSource.OPEN = 1</li>\n<li>EventSource.CLOSED = 2</li>\n</ul>\n<h2 id=\"event-type\"><a href=\"#event-type\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Event type</h2>\n<p>Có 3 loại event có thể được gửi về từ <code class=\"language-inline-text\">EventSource</code></p>\n<ul>\n<li><code class=\"language-inline-text\">message</code>: khi có message gửi về</li>\n<li><code class=\"language-inline-text\">open</code>: khi connection đã open</li>\n<li><code class=\"language-inline-text\">error</code>: lỗi không thể connect đến server</li>\n</ul>\n<p>Server cũng có thể gửi thêm các kiểu event tự định nghĩa khác ngoài các event có sẵn</p>\n<div class=\"gridsome-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">event: <span class=\"token function\">join</span>\ndata: Bob\n\ndata: Hello\n\nevent: leave\ndata: Bob</code></pre></div>\n<p>Để lắng nghe những custom event như vậy</p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">eventSource<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'join'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">event</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Joined </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>event<span class=\"token punctuation\">.</span>data<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\neventSource<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'message'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">event</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Said: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>event<span class=\"token punctuation\">.</span>data<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\neventSource<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'leave'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">event</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Left </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>event<span class=\"token punctuation\">.</span>data<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><a href=\"https://javascript.info/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://javascript.info/</a></p>\n","cover_image":"","related":[{"id":"2aec3bdb98d3d116d4be25b134ee21c7","path":"/2022-06-20-ung-dung-abort-controller/","title":"Một vài ứng dụng của AbortController","desc":""},{"id":"9ca0b5c04de8da6a6c9cebcb1fe8255d","path":"/2019-12-24-4-ung-dung-cua-array-from/","title":"4 ứng dụng của Array.from","desc":"Vài ứng dụng nhỏ của hàm Array.from"},{"id":"ef1472ef5ffd2477f822bd69863b99e9","path":"/2019-10-20-huong-dan-ung-dung-tuyet-voi-cua-vue-renderless-component/","title":"Những ứng dụng tuyệt vời của Renderless component trong Vue","desc":"Cùng điểm qua các phương pháp để giải quyết bài toán 'DRY' trong Vue, các bạn sẽ biết thêm các kỹ thuật tương đối nâng cao để lên bật Vue lão làng."},{"id":"6d279ec5ee3e089ef43d2aa38bb7816e","path":"/2022-02-03-ung-dung-hay-cua-flatmap/","title":"Ứng dụng hay của flatMap","desc":"Thay thế hàm filter và map bằng flatMap"}]}},"context":{}}