{"hash":"17f2ebf8e3fad07decd82f546fca8c1f827fe682","data":{"post":{"title":"Ghi chú về 3 module bundler rollup, parcel, webpack","path":"/2020-12-08-rollup-parcel-webpack/","date":"2020-12-08","timeToRead":2,"tags":[{"id":"hoc-thuat","title":"hoc-thuat","path":"/tag/hoc-thuat/"},{"id":"web","title":"web","path":"/tag/web/"},{"id":"javascript","title":"javascript","path":"/tag/javascript/"}],"desc":"","content":"<blockquote>\n<p> <strong>bundler</strong> của JS là công cụ dùng để đưa tất cả file đã <code class=\"language-text\">import</code> vào thành 1 file duy nhất. Nó còn có thể *minify` kết quả cuối cùng nếu bạn muốn.</p>\n</blockquote>\n<p>JS bundler có 3 <em>ông lớn</em> ở thời điểm hiện tại</p>\n<ul>\n<li>Parcel</li>\n<li>Rollup</li>\n<li>Webpack</li>\n</ul>\n<h3 id=\"đánh-giá-trên-việc-config-có-dễ-hay-không\"><a href=\"#%C4%91%C3%A1nh-gi%C3%A1-tr%C3%AAn-vi%E1%BB%87c-config-c%C3%B3-d%E1%BB%85-hay-kh%C3%B4ng\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Đánh giá trên việc config có dễ hay không</h3>\n<p>Parcel số 1, gần như không phải làm gì</p>\n<p>Webpack và Rollup yêu cầu phải có file config riêng.</p>\n<p>Rollup có sẵn polyfill cho <code class=\"language-text\">import/export</code>, webpack chưa có</p>\n<p>Rollup hỗ trợ relative path, webpack phải dùng <code class=\"language-text\">path.resolve</code> hoặc <code class=\"language-text\">path.join</code></p>\n<p>Config webpack phức tạp nhất, được cái hỗ trợ nhiều third-party</p>\n<h3 id=\"loại-bỏ-code-không-sử-dụng\"><a href=\"#lo%E1%BA%A1i-b%E1%BB%8F-code-kh%C3%B4ng-s%E1%BB%AD-d%E1%BB%A5ng\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Loại bỏ code không sử dụng</h3>\n<p>Loại bỏ code không sử dụng, còn gọi dead code, Tree shaking rất cần thiết để nâng cao hiệu năng.</p>\n<p>Parcel vẫn là số 1. Hỗ trợ tree-shaking cả ES6 và CommonJS</p>\n<p>Rollup đứng thứ 2.</p>\n<p>Webpack thì phải thủ công config để có tree-shaking.</p>\n<p>Rollup và webpack tập trung tree-shaking với ES6.</p>\n<h3 id=\"code-splitting\"><a href=\"#code-splitting\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Code splitting</h3>\n<p>Webpack số 1, đúng kiểu làm ít hưởng nhiều. Có 3 lựa chọn</p>\n<ul>\n<li>Sử dụng config entry</li>\n<li>Sử dụng plugin CommonsChunkPlugin</li>\n<li>Dynamic import</li>\n</ul>\n<p>Rollup và Parcel hỗ trợ splitting ngay từ đầu, nhưng đang vướng nhiều issue bị report.</p>\n<p>Webpack vẫn là lựa chọn hàng đầu.</p>\n<h3 id=\"live-reload\"><a href=\"#live-reload\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Live reload</h3>\n<p>Parcel gặp một số vấn đề với HTTP logging, Hooks và middleware</p>\n<p>Rollup phải cài thêm <code class=\"language-text\">rollup-plugin-serve</code>, <code class=\"language-text\">rollup-plugin-livereload</code> chứ không có sẵn.</p>\n<p>Webpack cài thêm <code class=\"language-text\">webpack-dev-server</code>.</p>\n<p>Khả năng tùy chỉnh của webpack sẽ cao hơn Rollup và Parcel.</p>\n<h3 id=\"module-transform\"><a href=\"#module-transform\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Module transform</h3>\n<p>Các bundler chỉ hỗ trợ file JS, với các file khác chúng ta cần thêm plugin</p>\n<p><img src=\"https://miro.medium.com/max/300/1*fQYPJhmQuHA93GWcChKBTw.png\"></p>\n<p>Parcel hỗ trợ sẵn tất cả những kiểu file quen thuộc, không cần đụng đến config. Không những vậy, khi gặp các file config <code class=\"language-text\">.babelrc</code>, <code class=\"language-text\">.postcssrc</code>, <code class=\"language-text\">.posthtml</code> nó sẽ tự handle</p>\n<p>Webpack và Rollup cần thêm plugin và config mới có transform và transpiler.</p>\n<h2 id=\"kết\"><a href=\"#k%E1%BA%BFt\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Kết</h2>\n<ul>\n<li>Nhanh gọn lẹ, app đơn giản, chọn Parcel</li>\n<li>Làm thư viện, hạn chế third-party, dùng Rollup</li>\n<li>App phức tạp, nhiều third-party, dùng webpack.</li>\n</ul>\n<p>Ghi chú từ <a href=\"https://medium.com/better-programming/the-battle-of-bundlers-6333a4e3eda9\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Rollup vs. Parcel vs. webpack: Which Is the Best Bundler?</a></p>\n","cover_image":"","related":[{"id":"307e7c23d055c29830eecf1a597f82d9","path":"/2020-12-05-kinh-nghiem-lam-viec-voi-jwt/","title":"Ghi chú về JWT","desc":"JWT đã không còn mới lạ ở năm 2020, tóm tắt một những vấn đề chính cần quan tâm khi làm việc với JWT"},{"id":"6644501b4848c8e7978f0b7f037b94af","path":"/2020-12-09-ghi-chu-chp-package-json/","title":"Ghi chú file package.json của node module","desc":""},{"id":"0da94706a1e6b0e733fc6085a9118cc2","path":"/2018-10-25-mot-so-nguyen-tac-su-dung-hinh-responsive/","title":"Một số nguyên tắc với hình ảnh responsive","desc":"Nếu bạn đã quên hoặc chưa biết, hình tiêu tốn hơn 50% dung lượng tải trang. Responsive image tuy dễ nhưng không nên xem nhẹ"}]}},"context":{}}