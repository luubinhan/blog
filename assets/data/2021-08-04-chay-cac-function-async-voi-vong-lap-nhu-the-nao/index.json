{"hash":"ecc8ecd7f5d1caebd4de67fcaaf53086d59cd360","data":{"post":{"title":"Lưu ý khi chạy async function với vòng lặp","path":"/2021-08-04-chay-cac-function-async-voi-vong-lap-nhu-the-nao/","slug":"/2021-08-04-chay-cac-function-async-voi-vong-lap-nhu-the-nao","date":"2021-08-04","timeToRead":1,"tags":[{"id":"javascript","title":"javascript","path":"/tag/javascript/"},{"id":"hard","title":"hard","path":"/tag/hard/"},{"id":"hoc-thuat","title":"hoc-thuat","path":"/tag/hoc-thuat/"}],"desc":"","content":"<p>Để chạy một chuỗi các async function theo thứ tự (tuần tự như chạy tiếp sức) cố định, nếu không để ý chúng ta sẽ có những kết quả không như mong đợi.</p>\n<blockquote>\n<p>Luôn dùng <code class=\"language-inline-text\">for...of</code></p>\n</blockquote>\n<p>Không sử dụng <code class=\"language-inline-text\">.forEach</code> nếu bên trong callback chứa các hàm cần <code class=\"language-inline-text\">await</code>. <strong>Luôn luôn</strong> dùng <code class=\"language-inline-text\">for..of</code> nếu muốn nó đúng thứ tự</p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">asyncProcessing</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ms</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span> <span class=\"token operator\">=></span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'wait:'</span><span class=\"token punctuation\">,</span> ms<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>ms<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> ms<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">forOf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> timeouts <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">600</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">775</span><span class=\"token punctuation\">,</span> <span class=\"token number\">125</span><span class=\"token punctuation\">,</span> <span class=\"token number\">990</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> timeout <span class=\"token keyword\">of</span> timeouts<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        result<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">await</span> <span class=\"token function\">asyncProcessing</span><span class=\"token punctuation\">(</span>timeout<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gridsome-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">// Kết quả\nwait: <span class=\"token number\">10</span>\nwait: <span class=\"token number\">600</span>\nwait: <span class=\"token number\">200</span>\nwait: <span class=\"token number\">775</span>\nwait: <span class=\"token number\">125</span>\nwait: <span class=\"token number\">990</span></code></pre></div>\n<p>Nếu thay vòng lặp <code class=\"language-inline-text\">for...of</code> bằng</p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">timeouts<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token parameter\">timeout</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">asyncProcessing</span><span class=\"token punctuation\">(</span>timeout<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    result<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gridsome-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">// kết quả nhận được\nwait: <span class=\"token number\">10</span>\nwait: <span class=\"token number\">125</span>\nwait: <span class=\"token number\">200</span>\nwait: <span class=\"token number\">600</span>\nwait: <span class=\"token number\">775</span>\nwait: <span class=\"token number\">990</span></code></pre></div>\n<blockquote>\n<p>Hoặc dùng <code class=\"language-inline-text\">Array.reduce</code></p>\n</blockquote>\n<p>Một lựa chọn khác nếu không thích dùng <code class=\"language-inline-text\">for...of</code>, kết quả sẽ giống i chang</p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> timeouts<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sum<span class=\"token punctuation\">,</span> timeout</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token operator\">...</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">await</span> sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">await</span> <span class=\"token function\">asyncProcessing</span><span class=\"token punctuation\">(</span>timeout<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gridsome-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">// Kết quả\nwait: <span class=\"token number\">10</span>\nwait: <span class=\"token number\">600</span>\nwait: <span class=\"token number\">200</span>\nwait: <span class=\"token number\">775</span>\nwait: <span class=\"token number\">125</span>\nwait: <span class=\"token number\">990</span></code></pre></div>\n<p>Vậy nếu có nhu cầu chạy các hàm một cách bất đồng bộ, như phất cờ là cho toàn bộ chạy một lúc giống thi chạy diệt dã? Chúng ta có một lựa chọn rất hiển nhiên <code class=\"language-inline-text\">Promise.all</code></p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> promises <span class=\"token operator\">=</span> timeouts<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token parameter\">timeout</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">await</span> <span class=\"token function\">asyncProcessing</span><span class=\"token punctuation\">(</span>timeout<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">await</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span>promises<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Kết quả</p>\n<div class=\"gridsome-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">wait: <span class=\"token number\">10</span>\nwait: <span class=\"token number\">125</span>\nwait: <span class=\"token number\">200</span>\nwait: <span class=\"token number\">600</span>\nwait: <span class=\"token number\">775</span>\nwait: <span class=\"token number\">990</span></code></pre></div>\n<p>Vuilaptrinh.com</p>\n","cover_image":"","related":[{"id":"965d9068d9d5a644537b89db120d084e","path":"/2021-03-28-mot-vai-luu-y-voi-javascript/","title":"Một vài điều cần lưu ý khi bạn làm việc với JS","desc":"Khi bạn làm việc với JS đủ lâu và ăn hành đủ nhiều bạn sẽ cần biết đến những đặc điểm rất riêng của JS"},{"id":"a5b17caa8521ed69a7fe336fc0445645","path":"/2019-07-26-nguyen-ly-chung-cua-lap-trinh-huong-function/","title":"Nguyên lý nền tảng của lập trình function","desc":"Khái niệm ngàn người biết, bạn cũng phải biết"},{"id":"b40137b2a4f84ed275b35fdd2d28019d","path":"/2018-10-04-huong-dan-redux-voi-ung-dung-lon/","title":"Làm việc với Redux trong ứng dụng lớn","desc":"Cùng thảo luận xung quanh vấn đề ứng dụng thiên về dữ liệu lớn, rất lớn"}]}},"context":{}}