webpackJsonp([0x65159047734a],{1622:function(n,a){n.exports={data:{markdownRemark:{html:'<!-- TOC -->\n<ul>\n<li><a href="#g%C3%A1n-t%C3%AAn-cho-arrow-function">Gán tên cho arrow function</a></li>\n<li><a href="#inline-khi-n%C3%A0o-c%C3%B3-th%E1%BB%83">Inline khi nào có thể</a></li>\n<li><a href="#s%E1%BB%AD-d%E1%BB%A5ng-v%E1%BB%9Bi-ph%C3%A9p-so-s%C3%A1nh">Sử dụng với phép so sánh</a></li>\n<li><a href="#s%E1%BB%AD-d%E1%BB%A5ng-v%E1%BB%9Bi-object-literal">Sử dụng với object literal</a></li>\n<li><a href="#h%E1%BA%A1n-ch%E1%BA%BF-l%E1%BB%93ng-nhi%E1%BB%81u-arrow-function">Hạn chế lồng nhiều arrow function</a></li>\n</ul>\n<!-- /TOC -->\n<h2 id="gán-tên-cho-arrow-function"><a href="#g%C3%A1n-t%C3%AAn-cho-arrow-function" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Gán tên cho arrow function</h2>\n<p>arrow function trong javascript là một <code class="language-text">anonymous</code> (hàm không có tên), nếu gọi vào <code class="language-text">name</code> của nó chúng ta sẽ nhận được một chuỗi rỗng</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js"><span class="token punctuation">(</span><span class="token parameter">number</span> <span class="token operator">=></span> number <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span> <span class="token comment">// => \'\'</span></code></pre>\n      </div>\n<p>Trong lúc debug hoặc phân tích call stack, hàm dạng <code class="language-text">anonymous</code> rất khó chịu vì không biết đang chạy <em>cái gì</em></p>\n<p><img src="https://dmitripavlutin.com/static/da011c996cd4544e2e5131e5862c85b6/f8b1b/anonymous-arrow-functions-3.webp" alt="Đó mà biết được đang chạy cái gì nếu chỉ hiện thị anonymous"></p>\n<p>Bên cột call stack có 2 function <code class="language-text">anonymous</code>, không có bất kỳ thông tin nào được trích xuất ra cho chúng ta ở đây.</p>\n<p>Nhưng nếu chúng ta khai báo một biến nắm giữ arrow function, Javascript lúc này lại <em>ngầm</em> hiểu nó là tên cho function đó (các đặc tính khác của arrow function không đổi)</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js"><span class="token keyword">const</span> <span class="token function-variable function">increaseNumber</span> <span class="token operator">=</span> <span class="token parameter">number</span> <span class="token operator">=></span> number <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>\n\nincreaseNumber<span class="token punctuation">.</span>name<span class="token punctuation">;</span> <span class="token comment">// => \'increaseNumber\'</span></code></pre>\n      </div>\n<p>Lúc debug, nó đã hiện nguyên hình</p>\n<p><img src="https://dmitripavlutin.com/static/7cf0de61d6b0cd2fb01e9cfb145e8708/c04be/named-arrow-functions-2.png" alt="Anonymous arrow functions call stack" title="Anonymous arrow functions call stack"></p>\n<h2 id="inline-khi-nào-có-thể"><a href="#inline-khi-n%C3%A0o-c%C3%B3-th%E1%BB%83" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Inline khi nào có thể</h2>\n<p>Thay vì phải viết một cách dài dòng</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js"><span class="token keyword">const</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\narray<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">number</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> number <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n      </div>\n<p>Chúng ta có thể bỏ hẳn <code class="language-text">{}</code> và <code class="language-text">return</code>, ở dạng một expression</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js"><span class="token keyword">const</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\narray<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">number</span> <span class="token operator">=></span> number <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n      </div>\n<h2 id="sử-dụng-với-phép-so-sánh"><a href="#s%E1%BB%AD-d%E1%BB%A5ng-v%E1%BB%9Bi-ph%C3%A9p-so-s%C3%A1nh" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Sử dụng với phép so sánh</h2>\n<p>Các phép so sánh <code class="language-text">&lt;=</code>, <code class="language-text">&gt;=</code> nhiều khi dễ gây nhầm lẫn khi đứng chung với <code class="language-text">=&gt;</code></p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js"><span class="token keyword">const</span> <span class="token function-variable function">negativeToZero</span> <span class="token operator">=</span> <span class="token parameter">number</span> <span class="token operator">=></span> <span class="token punctuation">(</span>number <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token punctuation">:</span> number<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n      </div>\n<p>Để không <em>đánh đố</em> người đọc, bọc nó lại trong dấu ngoặc đơn <code class="language-text">()</code></p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js"><span class="token keyword">const</span> <span class="token function-variable function">negativeToZero</span> <span class="token operator">=</span> <span class="token parameter">number</span> <span class="token operator">=></span> <span class="token punctuation">(</span>number <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token punctuation">:</span> number<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">//hoặc một cách tường minh</span>\n<span class="token keyword">const</span> <span class="token function-variable function">negativeToZero</span> <span class="token operator">=</span> <span class="token parameter">number</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> number <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token punctuation">:</span> number<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n      </div>\n<h2 id="sử-dụng-với-object-literal"><a href="#s%E1%BB%AD-d%E1%BB%A5ng-v%E1%BB%9Bi-object-literal" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Sử dụng với object literal</h2>\n<p>Nếu viết object literal như bên dưới chắc chắn bạn bị báo lỗi</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js"><span class="token keyword">const</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token comment">// throws SyntaxError!</span>\narray<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">number</span> <span class="token operator">=></span> <span class="token punctuation">{</span> <span class="token string">\'number\'</span><span class="token punctuation">:</span> number <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n      </div>\n<p>Đừng quên thêm ngoặc đơn cho nó</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js"><span class="token keyword">const</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token comment">// Works!</span>\narray<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">number</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token string">\'number\'</span><span class="token punctuation">:</span> number <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// có nhiều property</span>\narray<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">number</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token string">\'number\'</span><span class="token punctuation">:</span> number\n  <span class="token string">\'propA\'</span><span class="token punctuation">:</span> <span class="token string">\'value A\'</span><span class="token punctuation">,</span>\n  <span class="token string">\'propB\'</span><span class="token punctuation">:</span> <span class="token string">\'value B\'</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n      </div>\n<h2 id="hạn-chế-lồng-nhiều-arrow-function"><a href="#h%E1%BA%A1n-ch%E1%BA%BF-l%E1%BB%93ng-nhi%E1%BB%81u-arrow-function" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Hạn chế lồng nhiều arrow function</h2>\n<p>Thí dụ có một button, sau khi click chúng ta request lên server, sau khi nhận được giá trị, log xuống trình duyệt</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js">myButton<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">\'click\'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">\'/items.json\'</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">response</span> <span class="token operator">=></span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">json</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      json<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n      </div>\n<p>Viết vậy, <em>thiên hạ</em> chê khó đọc. Cân nhắc cách viết sau</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js"><span class="token keyword">const</span> <span class="token function-variable function">readItemsJson</span> <span class="token operator">=</span> <span class="token parameter">json</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  json<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">handleButtonClick</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">\'/items.json\'</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">response</span> <span class="token operator">=></span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>readItemsJson<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nmyButton<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">\'click\'</span><span class="token punctuation">,</span> handleButtonClick<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n      </div>\n<p>Muốn <em>ngon</em> hơn là dùng <code class="language-text">async/await</code></p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js"><span class="token keyword">const</span> <span class="token function-variable function">handleButtonClick</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">"/items.json"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> json <span class="token operator">=</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  json<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nmyButton<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"click"</span><span class="token punctuation">,</span> handleButtonClick<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n      </div>\n<p><a href="https://dmitripavlutin.com/javascript-arrow-functions-best-practices/">5 Best Practices to Write Quality Arrow Functions</a></p>',timeToRead:3,excerpt:"Gán tên cho arrow function Inline khi nào có thể Sử dụng với phép so sánh Sử dụng với object literal Hạn chế lồng nhiều arrow function Gán…",frontmatter:{title:"5 kinh nghiệm khi viết arrow function",cover:"",date:"2020-02-09",category:null,tags:["thu-thuat","javascript"],desc:"Sử dụng arrow function đã quá phổ biến, ai cũng biết nó là gì, không cần một bài giới thiệu vài dòng nữa, bài viết này chia sẻ 5 kinh nghiệm để bạn làm việc với arrow function thêm mượt mà"},fields:{slug:"/2020-02-09-5-kinh-nghiem-khi-lam-viec-voi-arrow-function"}}},pathContext:{slug:"/2020-02-09-5-kinh-nghiem-khi-lam-viec-voi-arrow-function",prev:{frontmatter:{title:"7 lý do bạn không nên sử dụng TypeScript",desc:"TypeScript có phải là con ác chủ bài, ngôn ngữ của tương lai, viết TypeScript thì mọi thứ sẽ không thể nào còn lỗi, những lý do khiến bạn phải suy nghĩ lại những nhận định trên",type:"post",category:null,tags:["dam-dao","javascript","typescript"],date:"2020-02-15",cover:""},fields:{slug:"/2020-02-15-7-ly-do-chinh-dang-khuyen-ban-khong-nen-dung-typescript"}},next:{frontmatter:{title:"Chỉ dẫn thiết đặt ESLint trong nhiều tình huống sử dụng Javascript, Typescript, React",desc:"Chúng ta bắt đầu với Javascript trước, sau đó sẽ là TypeScript, và React. Mục tiêu là làm đúng, tránh trường hợp cài package không cần thiết hoặc copy/paste các config tới khi nó chạy được thì thôi.",type:"post",category:null,tags:["hoc-thuat","javascript","typescript","react"],date:"2020-02-03",cover:""},fields:{slug:"/2020-02-03-huong-dan-cai-dat-eslint-react-javascript-typescript-vscode"}}}}}});
//# sourceMappingURL=path---2020-02-09-5-kinh-nghiem-khi-lam-viec-voi-arrow-function-13107c336603456d04e8.js.map