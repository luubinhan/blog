webpackJsonp([17649057621401],{1507:function(n,s){n.exports={data:{markdownRemark:{html:'<!-- TOC -->\n<ul>\n<li><a href="#srcstoreindexjs">src/store/index.js</a></li>\n<li><a href="#srcstoremodulesforms">src/store/modules/forms</a></li>\n<li><a href="#srcstoremodulescustomerjs">src/store/modules/customer.js</a></li>\n<li><a href="#pagecustomervue">PageCustomer.vue</a></li>\n<li>\n<p><a href="#t%E1%BB%95ng-k%E1%BA%BFt">Tổng kết</a></p>\n<ul>\n<li><a href="#ch%E1%BB%A7-%C4%91%E1%BB%99ng-load-c%C3%A1c-module">Chủ động load các module</a></li>\n<li><a href="#t%E1%BB%91i-%C4%91a-vi%E1%BB%87c-t%C3%A1i-s%E1%BB%AD-d%E1%BB%A5ng">Tối đa việc tái sử dụng</a></li>\n</ul>\n</li>\n</ul>\n<!-- /TOC -->\n<p><a href="https://d33wubrfki0l68.cloudfront.net/696421d01191c8c515704cbbec42120ce807c38c/fc4e4/videos/2018-02-04/vuex-store-api-model-mapping.mp4" target="_blank" rel="noopener noreferrer">Video demo ứng dụng  </a></p>\n<p>Trong bài này chúng ta sẽ build 2 màn hình, màn hình Customer và màn hình shipping address</p>\n<p>Codebase sẽ được tổ chức như sau</p>\n<div class="gatsby-highlight">\n      <pre class="language-text"><code class="language-text">src\n├── App.vue\n├── ...\n├── store\n│   ├── action-types.js\n│   ├── index.js\n│   ├── modules\n│   │   ├── customer.js\n│   │   ├── forms\n│   │   │   ├── address.js\n│   │   │   ├── contact.js\n│   │   │   └── name.js\n│   │   └── shipping-address.js\n│   └── mutation-types.js\n└── ...</code></pre>\n      </div>\n<h2 id="srcstoreindexjs"><a href="#srcstoreindexjs" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>src/store/index.js</h2>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js"><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">\'vue\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Vuex <span class="token keyword">from</span> <span class="token string">\'vuex\'</span><span class="token punctuation">;</span>\n\nVue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Vuex<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">new</span> <span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token comment">// bật strict mode trên môi trường dev</span>\n  strict<span class="token punctuation">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">\'production\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n      </div>\n<p>File này sẽ ko có gì nhiều, mọi logic xử lý được tách thành từng modules</p>\n<div class="note">Cho phép reuse lại một số đoạn code, và chủ động các module khi cần.</div>\n<h2 id="srcstoremodulesforms"><a href="#srcstoremodulesforms" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>src/store/modules/forms</h2>\n<p>Trên màn hình Customer: chúng ta có 3 dữ liệu: name, contact, address.</p>\n<p>Trên màn hình Shipping Address: chúng ta có 2 dữ liệu: contact, address.\nChúng ta có thể tái sử dụng data của 2 màn hình này. Đó là lý do bên trong forms chúng ta có 3 file: <code class="language-text">contact.js</code>, <code class="language-text">address.js</code>, <code class="language-text">name.js</code></p>\n<p>File contact.js</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js"><span class="token comment">// src/store/modules/forms/contact.js</span>\n\n<span class="token keyword">import</span> <span class="token punctuation">{</span> getField<span class="token punctuation">,</span> updateField <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'vuex-map-fields\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token punctuation">{</span> <span class="token constant">ADD_ROW</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'../../mutation-types\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Contact <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'../../../models/Contact\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> mutations <span class="token operator">=</span> <span class="token punctuation">{</span>\n  updateField<span class="token punctuation">,</span>\n  <span class="token punctuation">[</span><span class="token constant">ADD_ROW</span><span class="token punctuation">]</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// cho phép thêm nhiều row mới.</span>\n    state<span class="token punctuation">.</span>rows<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Contact</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> getters <span class="token operator">=</span> <span class="token punctuation">{</span>\n  getField<span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token comment">// state phải return 1 function</span>\n<span class="token comment">// để có thể reuse module.</span>\n<span class="token comment">// Xem: https://vuex.vuejs.org/en/modules.html#module-reuse</span>\n<span class="token keyword">const</span> <span class="token function-variable function">state</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token comment">// tạo 1 row rỗng</span>\n  rows<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">Contact</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  <span class="token comment">// chúng ta sử dụng namespacing</span>\n  <span class="token comment">// trên tất cả modules.</span>\n  namespaced<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  mutations<span class="token punctuation">,</span>\n  getters<span class="token punctuation">,</span>\n  state<span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n      </div>\n<h2 id="srcstoremodulescustomerjs"><a href="#srcstoremodulescustomerjs" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>src/store/modules/customer.js</h2>\n<p>Module này khá là nhiều, nên chúng ta sẽ giải thích một cách từ từ.</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> createHelpers <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'vuex-map-fields\'</span><span class="token punctuation">;</span>\n\n<span class="token comment">// API được dùng để gửi</span>\n<span class="token comment">// dữ liệu user nhập vào lên server.</span>\n<span class="token keyword">import</span> api <span class="token keyword">from</span> <span class="token string">\'../../utils/api\'</span><span class="token punctuation">;</span>\n\n<span class="token comment">// Models của data để gửi lên API</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> createCustomer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'../../models/Customer\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> createRequest <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'../../models/Request\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token punctuation">{</span> <span class="token constant">SUBMIT</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'../action-types\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> <span class="token constant">ERROR</span><span class="token punctuation">,</span> <span class="token constant">SUCCESS</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'../mutation-types\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> address <span class="token keyword">from</span> <span class="token string">\'./forms/address\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> contact <span class="token keyword">from</span> <span class="token string">\'./forms/contact\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> name <span class="token keyword">from</span> <span class="token string">\'./forms/name\'</span><span class="token punctuation">;</span>\n\n<span class="token comment">// ...</span></code></pre>\n      </div>\n<p>Chúng ta sử dụng model để map dữ liệu từ store thành một structure chúng ta sẽ gửi lên API. Nếu muốn xem chi tiết phần này bạn xem trên <a href="https://github.com/maoberlehner/how-to-structure-a-complex-vuex-store/tree/master/src/models">Github</a></p>\n<p>Phần action của module customer</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js"><span class="token comment">// src/store/modules/customer.js</span>\n\n<span class="token comment">// ...</span>\n\n<span class="token keyword">const</span> actions <span class="token operator">=</span> <span class="token punctuation">{</span>\n  async <span class="token punctuation">[</span><span class="token constant">SUBMIT</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">{</span> commit<span class="token punctuation">,</span> state <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">try</span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> customerData <span class="token operator">=</span> <span class="token function">createCustomer</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token comment">// Chúng ta chỉ cho user nhập</span>\n        <span class="token comment">// một địa chỉ</span>\n        <span class="token comment">// (hoặc tên).</span>\n        address<span class="token punctuation">:</span> state<span class="token punctuation">.</span>address<span class="token punctuation">.</span>rows<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token comment">// Cho phép user nhập vào nhiều contact        </span>\n        contacts<span class="token punctuation">:</span> state<span class="token punctuation">.</span>contact<span class="token punctuation">.</span>rows<span class="token punctuation">,</span>\n        name<span class="token punctuation">:</span> state<span class="token punctuation">.</span>name<span class="token punctuation">.</span>rows<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">const</span> requestData <span class="token operator">=</span> <span class="token function">createRequest</span><span class="token punctuation">(</span>customerData<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n      <span class="token keyword">await</span> <span class="token function">api</span><span class="token punctuation">(</span>requestData<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n      <span class="token function">commit</span><span class="token punctuation">(</span><span class="token constant">SUCCESS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token function">commit</span><span class="token punctuation">(</span><span class="token constant">ERROR</span><span class="token punctuation">,</span> error<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token comment">// ...</span></code></pre>\n      </div>\n<p><code class="language-text">SUBMIT</code> action ở trên chịu trách nhiệm gửi data lên API, xử lý status trả về. <code class="language-text">createCustomer</code> là function sẽ giúp transform data mà API yêu cầu.</p>\n<p>Chúng ta cần 2 mutation cho màn customer form:</p>\n<ol>\n<li><code class="language-text">ERROR</code> để set state error khi request bị fail</li>\n<li><code class="language-text">SUCCESS</code> cho trường hợp thành công</li>\n</ol>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js"><span class="token comment">// src/store/modules/customer.js</span>\n\n<span class="token comment">// ...</span>\n\n<span class="token keyword">const</span> mutations <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token punctuation">[</span><span class="token constant">ERROR</span><span class="token punctuation">]</span><span class="token punctuation">(</span>state<span class="token punctuation">,</span> error<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    state<span class="token punctuation">.</span>error <span class="token operator">=</span> error<span class="token punctuation">;</span>\n    state<span class="token punctuation">.</span>success <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">[</span><span class="token constant">SUCCESS</span><span class="token punctuation">]</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    state<span class="token punctuation">.</span>error <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n    state<span class="token punctuation">.</span>success <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token comment">// ...</span></code></pre>\n      </div>\n<p>Tới đây chúng ta có thể define object state cần có</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js"><span class="token comment">// src/store/modules/customer.js</span>\n\n<span class="token comment">// ...</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">state</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n  error<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  success<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> modules <span class="token operator">=</span> <span class="token punctuation">{</span>\n  address<span class="token punctuation">,</span>\n  contact<span class="token punctuation">,</span>\n  name<span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token comment">// ...</span></code></pre>\n      </div>\n<p>Để thuận tiện hơn trong lúc code, chúng ta đang sử dụng một số hàm helper của <code class="language-text">vuex-map-fields</code></p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js"><span class="token comment">// src/store/modules/customer.js</span>\n\n<span class="token comment">// ...</span>\n\n<span class="token comment">// Để mapping form fields qua Vuex.</span>\n<span class="token comment">// Xem: https://github.com/maoberlehner/vuex-map-fields#custom-getters-and-mutations</span>\n<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token punctuation">{</span> mapFields<span class="token punctuation">:</span> mapAddressFields <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">createHelpers</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  getterType<span class="token punctuation">:</span> <span class="token string">\'customer/address/getField\'</span><span class="token punctuation">,</span>\n  mutationType<span class="token punctuation">:</span> <span class="token string">\'customer/address/updateField\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token punctuation">{</span> mapMultiRowFields<span class="token punctuation">:</span> mapContactMultiRowFields <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">createHelpers</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  getterType<span class="token punctuation">:</span> <span class="token string">\'customer/contact/getField\'</span><span class="token punctuation">,</span>\n  mutationType<span class="token punctuation">:</span> <span class="token string">\'customer/contact/updateField\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token punctuation">{</span> mapFields<span class="token punctuation">:</span> mapNameFields <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">createHelpers</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  getterType<span class="token punctuation">:</span> <span class="token string">\'customer/name/getField\'</span><span class="token punctuation">,</span>\n  mutationType<span class="token punctuation">:</span> <span class="token string">\'customer/name/updateField\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">const</span> customer <span class="token operator">=</span> <span class="token punctuation">{</span>\n  namespaced<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  actions<span class="token punctuation">,</span>\n  mutations<span class="token punctuation">,</span>\n  state<span class="token punctuation">,</span>\n  modules<span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n      </div>\n<h2 id="pagecustomervue"><a href="#pagecustomervue" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>PageCustomer.vue</h2>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>$options.name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>New Customer<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>success<span class="token punctuation">"</span></span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>success<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n      <span class="token constant">SUCCESS</span><span class="token operator">!</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>error<span class="token punctuation">"</span></span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>error<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n      <span class="token constant">ERROR</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> error <span class="token punctuation">}</span><span class="token punctuation">}</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>!success<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-sections<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-section<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-element<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>firstName<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-label<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>First name<span class="token punctuation">:</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>firstName<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>firstName<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-element<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lastName<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-label<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Last name<span class="token punctuation">:</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lastName<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lastName<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>\n\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-section<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-repeatable<span class="token punctuation">"</span></span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>(contact, index) in contacts<span class="token punctuation">"</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>index<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-element<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-label<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token constant">E</span><span class="token operator">-</span>Mail<span class="token punctuation">:</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>contact.email<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-element<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>phone<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-label<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Phone<span class="token punctuation">:</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>phone<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>contact.phone<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n          <span class="token operator">&lt;</span>button <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"form-button"</span> @click<span class="token operator">=</span><span class="token string">"addContact"</span><span class="token operator">></span>Add contact<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>\n\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-section<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-element<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>zip<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-label<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token constant">ZIP</span><span class="token punctuation">:</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>zip<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>zip<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-element<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>town<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-label<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Town<span class="token punctuation">:</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>town<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>town<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-element<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>street<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-label<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Street<span class="token punctuation">:</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>street<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>street<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n      <span class="token operator">&lt;</span>button <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"form-button"</span> @click<span class="token operator">=</span><span class="token string">"submit"</span><span class="token operator">></span>\n        Submit\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> createNamespacedHelpers <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'vuex\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token punctuation">{</span> <span class="token constant">SUBMIT</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'../../store/action-types\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> <span class="token constant">ADD_ROW</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'../../store/mutation-types\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> store <span class="token keyword">from</span> <span class="token string">\'../../store\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>\n  customer<span class="token punctuation">,</span>\n  mapAddressFields<span class="token punctuation">,</span>\n  mapContactMultiRowFields<span class="token punctuation">,</span>\n  mapNameFields<span class="token punctuation">,</span>\n<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'../../store/modules/customer\'</span><span class="token punctuation">;</span>\n\n<span class="token comment">// chủ động đăng ký `customer` module </span>\n<span class="token comment">// chỉ load module này khi cần thiết</span>\n\n<span class="token comment">// trước khi đăng ký module</span>\n<span class="token comment">// kiểm tra xem nó được đăng ký chưa </span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>customer<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  store<span class="token punctuation">.</span><span class="token function">registerModule</span><span class="token punctuation">(</span><span class="token string">\'customer\'</span><span class="token punctuation">,</span> customer<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span>\n  mapActions<span class="token punctuation">:</span> mapCustomerActions<span class="token punctuation">,</span>\n  mapState<span class="token punctuation">:</span> mapCustomerState<span class="token punctuation">,</span>\n<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">createNamespacedHelpers</span><span class="token punctuation">(</span><span class="token string">\'customer\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span>\n  mapMutations<span class="token punctuation">:</span> mapContactMutations<span class="token punctuation">,</span>\n<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">createNamespacedHelpers</span><span class="token punctuation">(</span><span class="token string">\'customer/contact\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  name<span class="token punctuation">:</span> <span class="token string">\'PageCustomer\'</span><span class="token punctuation">,</span>\n  <span class="token comment">// Here we\'re wiring everything up.</span>\n  computed<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    <span class="token operator">...</span><span class="token function">mapCustomerState</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">\'error\'</span><span class="token punctuation">,</span> <span class="token string">\'success\'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token comment">// Đọc thêm về mapping field value</span>\n    <span class="token comment">// https://markus.oberlehner.net/blog/form-fields-two-way-data-binding-and-vuex/</span>\n    <span class="token comment">// https://markus.oberlehner.net/blog/how-to-handle-multi-row-forms-with-vue-vuex-and-vuex-map-fields/</span>\n    <span class="token operator">...</span><span class="token function">mapNameFields</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">\'rows[0].firstName\'</span><span class="token punctuation">,</span> <span class="token string">\'rows[0].lastName\'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token operator">...</span><span class="token function">mapContactMultiRowFields</span><span class="token punctuation">(</span><span class="token punctuation">{</span> contacts<span class="token punctuation">:</span> <span class="token string">\'rows\'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token operator">...</span><span class="token function">mapAddressFields</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">\'rows[0].zip\'</span><span class="token punctuation">,</span> <span class="token string">\'rows[0].town\'</span><span class="token punctuation">,</span> <span class="token string">\'rows[0].street\'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  methods<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    <span class="token operator">...</span><span class="token function">mapContactMutations</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      addContact<span class="token punctuation">:</span> <span class="token constant">ADD_ROW</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token operator">...</span><span class="token function">mapCustomerActions</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      submit<span class="token punctuation">:</span> <span class="token constant">SUBMIT</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre>\n      </div>\n<p>Bạn có thể thấy là không có xử lý logic bên trong component. Tất cả những gì làm ở component là map các action, field, mutation, field từ store module vào component.</p>\n<h2 id="tổng-kết"><a href="#t%E1%BB%95ng-k%E1%BA%BFt" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Tổng kết</h2>\n<p>Để tổng kết lại chúng ta cũng nhìn lại chúng ta đạt được gì và cách tiếp cận structure như thế này trong Vuex store khác gì so với cách truyền thống</p>\n<h3 id="chủ-động-load-các-module"><a href="#ch%E1%BB%A7-%C4%91%E1%BB%99ng-load-c%C3%A1c-module" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Chủ động load các module</h3>\n<p>Bởi vì chúng ta không đăng ký tất cả các module một cách globally, no cho phép sử dụng tính năng webpack splitting code hoạt động với vue-router.</p>\n<h3 id="tối-đa-việc-tái-sử-dụng"><a href="#t%E1%BB%91i-%C4%91a-vi%E1%BB%87c-t%C3%A1i-s%E1%BB%AD-d%E1%BB%A5ng" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Tối đa việc tái sử dụng</h3>\n<p>Với cách thiết kế store như thế này, chúng ta có thể sử dụng lại một số module. Chìa khóa để đạt được chính là đặt tên theo rule cố định và cách structure module, luôn tuân thủ các quy định giúp chúng ta có thể đoán được.</p>\n<p><a href="https://markus.oberlehner.net/blog/how-to-structure-a-complex-vuex-store/" target="_blank" rel="noopener noreferrer">Bài viết gốc  </a></p>\n<p><a href="https://how-to-structure-a-complex-vuex-store.netlify.com/" target="_blank" rel="noopener noreferrer">Demo </a></p>\n<p><a href="https://github.com/maoberlehner/how-to-structure-a-complex-vuex-store" target="_blank" rel="noopener noreferrer">Toàn bộ source code  </a></p>',
timeToRead:7,excerpt:"src/store/index.js src/store/modules/forms src/store/modules/customer.js PageCustomer.vue Tổng kết Chủ động load các module Tối đa việc tái…",frontmatter:{title:"Kinh nghiệm tổ chức Vuex cho ứng dụng lớn",cover:"",date:"2018-11-10",category:null,tags:["vuejs"],desc:"Nếu bạn đã sử dụng thông thạo Vuex để tạo các ứng dụng be bé như ToDo list, Shopping Cart, hãy nâng trình của mình lên bằng các ứng dụng có nhiều dữ liệu hơn."},fields:{slug:"/2018-11-10-huong-dan-to-chuc-vuex-store-tren-du-an-lon"}}},pathContext:{slug:"/2018-11-10-huong-dan-to-chuc-vuex-store-tren-du-an-lon",prev:{frontmatter:{title:"Cách làm two-way data binding cho form field trong Vue và Vuex",desc:"Two-way data binding trong Vue và Vuex làm như thế nào cho đúng mà nhanh",type:"post",category:null,tags:["vuejs"],date:"2018-11-11",cover:""},fields:{slug:"/2018-11-11-huong-dan-two-way-data-binding-voi-vue-vuex"}},next:{frontmatter:{title:"Tìm hiểu Execution context trong Javascript",desc:"Theo quan điểm của mình, khái niệm căn bản và quan trọng bật nhất của javascript là hiểu được Execution Context,",type:"post",category:null,tags:["javascript"],date:"2018-11-09",cover:""},fields:{slug:"/2018-11-09-gioi-thieu-execution-context-trong-javascript-kien-thuc-can-biet"}}}}}});
//# sourceMappingURL=path---2018-11-10-huong-dan-to-chuc-vuex-store-tren-du-an-lon-0bf10ec07484b43102df.js.map