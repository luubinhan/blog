{"version":3,"sources":["webpack:///path---2020-02-01-huong-dan-kieu-enum-trong-typescript-can-ban-f1e2562f0157edaaf373.js","webpack:///./.cache/json/2020-02-01-huong-dan-kieu-enum-trong-typescript-can-ban.json"],"names":["webpackJsonp","1621","module","exports","data","markdownRemark","html","timeToRead","excerpt","frontmatter","title","cover","date","category","tags","desc","fields","slug","pathContext","prev","type","next"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,snaAA+0aC,WAAA,EAAAC,QAAA,2IAAAC,aAA+VC,MAAA,mEAAAC,MAAA,GAAAC,KAAA,aAAAC,SAAA,KAAAC,MAAA,0BAAAC,KAAA,iJAAmTC,QAAWC,KAAA,8DAAoEC,aAAgBD,KAAA,2DAAAE,MAA0EV,aAAeC,MAAA,wFAAAK,KAAA,yMAAAK,KAAA,OAAAP,SAAA,KAAAC,MAAA,+CAAAF,KAAA,aAAAD,MAAA,IAAoaK,QAAWC,KAAA,4EAAkFI,MAASZ,aAAeC,MAAA,0DAAAK,KAAA,iOAAAK,KAAA,OAAAP,SAAA,KAAAC,MAAA,qBAAAF,KAAA,aAAAD,MAAA,IAAoYK,QAAWC,KAAA","file":"path---2020-02-01-huong-dan-kieu-enum-trong-typescript-can-ban-f1e2562f0157edaaf373.js","sourcesContent":["webpackJsonp([220332967723373],{\n\n/***/ 1621:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h2 id=\\\"các-khái-niệm-căn-bản-của-enum\\\"><a href=\\\"#c%C3%A1c-kh%C3%A1i-ni%E1%BB%87m-c%C4%83n-b%E1%BA%A3n-c%E1%BB%A7a-enum\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Các khái niệm căn bản của enum</h2>\\n<p>Javascript chỉ có đúng một kiểu mà giá trị bị ràng buộc <em>rất cụ thể</em>: <code class=\\\"language-text\\\">boolean</code>, giá trị chỉ được phép là <code class=\\\"language-text\\\">true</code> hoặc <code class=\\\"language-text\\\">false</code>, không chấp nhận một giá trị nào khác. <code class=\\\"language-text\\\">Enum</code> là phiên bản <em>mở rộng</em> với công dụng tương tự như <code class=\\\"language-text\\\">boolean</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\">enum NoYes {\\n    No,\\n    Yes\\n}</code></pre>\\n      </div>\\n<p>2 giá trị <code class=\\\"language-text\\\">No</code> <code class=\\\"language-text\\\">Yes</code> được gọi là thành viên của hội <code class=\\\"language-text\\\">enum</code> <code class=\\\"language-text\\\">NoYes</code>. Dùng nó như một <code class=\\\"language-text\\\">object</code>, chúng ta có thể <em>chấm</em> đến giá trị đó</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\">function toGerman(value: NoYes) {\\n  switch (value) {\\n    case NoYes.No:\\n      return &#39;Nein&#39;;\\n    case NoYes.Yes:\\n      return &#39;Ja&#39;;\\n  }\\n}</code></pre>\\n      </div>\\n<p>Tất cả thành viên của hội <code class=\\\"language-text\\\">enum</code> đều được cấp một <em>thẻ thành viên</em> gồm <code class=\\\"language-text\\\">name</code> và <code class=\\\"language-text\\\">value</code>. Ở trên chúng ta chỉ đang khai báo phần <code class=\\\"language-text\\\">name</code> cho enum, <code class=\\\"language-text\\\">value</code> lúc đó sẽ lấy mặc định là số từ 0 đi lên</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\">enum NoYes {\\n  No,\\n  Yes,\\n}\\n// nếu khai báo một cách tường minh hơn\\nenum NoYes {\\n  No = 0,\\n  Yes = 1,\\n}\\n\\nassert.equal(NoYes.No, 0);\\nassert.equal(NoYes.Yes, 1);</code></pre>\\n      </div>\\n<p>Nếu cà khịa, khai báo như thế này</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\">enum Enum {\\n  A,\\n  B,\\n  C = 4,\\n  D,\\n  E = 8,\\n  F,\\n}</code></pre>\\n      </div>\\n<p>Đồng nghĩa là các giá trị kế tiếp sẽ tự động tăng lên một, so với giá trị khai báo trước đó</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\">assert.deepEqual(\\n  [Enum.A, Enum.B, Enum.C, Enum.D, Enum.E, Enum.F],\\n  [0, 1, 4, 5, 8, 9]\\n);</code></pre>\\n      </div>\\n<p>Về cách đặt tên (<code class=\\\"language-text\\\">name</code>) trong <code class=\\\"language-text\\\">enum</code>, cũng có vài ba lựa chọn</p>\\n<ul>\\n<li>Đặt theo kiểu JavaScript, viết hoa hết, <code class=\\\"language-text\\\">Number,MAX_VALUE</code></li>\\n<li>Đặt theo kiểu symbol, con lạc đà, chữ đầu viết thường, <code class=\\\"language-text\\\">Symbol.asyncIterator</code></li>\\n<li>Kiểu TypeScript, con lạc đà, chữ đầu viết hoa, <code class=\\\"language-text\\\">Number.MaxValue</code></li>\\n</ul>\\n<p>Tương tự như object, chúng ta có thể truy xuất đến một thành viên của hội bằng cách viết sau</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\">enum HttpRequestField {\\n  &#39;Accept&#39;,\\n  &#39;Accept-Charset&#39;,\\n  &#39;Accept-Datetime&#39;,\\n  &#39;Accept-Encoding&#39;,\\n  &#39;Accept-Language&#39;,\\n}\\nassert.equal(HttpRequestField[&#39;Accept-Charset&#39;], 1);</code></pre>\\n      </div>\\n<p>Giá trị <code class=\\\"language-text\\\">value</code> của enum, không bắt buộc là một number, có thể là một <code class=\\\"language-text\\\">string</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\">enum NoYes {\\n  No = &#39;No&#39;,\\n  Yes = &#39;Yes&#39;,\\n}\\nassert.equal(NoYes.No, &#39;No&#39;);\\nassert.equal(NoYes.Yes, &#39;Yes&#39;);</code></pre>\\n      </div>\\n<p>Còn một cách khai báo, ít được sử dụng, là kiểu xăng pha nhớt, các giá trị trong enum có thể là số cũng có thể là chữ</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\">enum Enum {\\n  A,\\n  B,\\n  C = &#39;C&#39;,\\n  D = &#39;D&#39;,\\n  E = 8,\\n  F,\\n}\\nassert.deepEqual(\\n  [Enum.A, Enum.B, Enum.C, Enum.D, Enum.E, Enum.F],\\n  [0, 1, &#39;C&#39;, &#39;D&#39;, 8, 9]\\n);</code></pre>\\n      </div>\\n<p>Theo như kinh nghiệm từ các bật tiền bối, sử dụng enum thì nên dùng kiểu giá trị <code class=\\\"language-text\\\">string</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\">enum NoYes { No = &#39;NO&#39;, Yes = &#39;YES&#39; }</code></pre>\\n      </div>\\n<p>Nếu có <em>log</em> ra chúng ta cũng biết được giá trị chính xác là gì, đỡ hack não ngồi đếm số thứ tự</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\">console.log(NoYes.No);\\nconsole.log(NoYes.Yes);</code></pre>\\n      </div>\\n<p>Thêm nữa, ràng buộc được luôn kiểu giá trị</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\">function func(noYes: NoYes) {}\\n\\nfunc(&#39;abc&#39;);\\nfunc(&#39;Yes&#39;);</code></pre>\\n      </div>\\n<h2 id=\\\"trường-hợp-sử-dụng-enum\\\"><a href=\\\"#tr%C6%B0%E1%BB%9Dng-h%E1%BB%A3p-s%E1%BB%AD-d%E1%BB%A5ng-enum\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Trường hợp sử dụng enum</h2>\\n<h3 id=\\\"hằng-số-nhiều-giá-trị\\\"><a href=\\\"#h%E1%BA%B1ng-s%E1%BB%91-nhi%E1%BB%81u-gi%C3%A1-tr%E1%BB%8B\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>hằng số nhiều giá trị</h3>\\n<p>Nếu chúng ta có một <em>mớ</em> các hằng số, có quan hệ họ hàng gần với nhau</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\">const fatal = Symbol(&#39;fatal&#39;);\\nconst error = Symbol(&#39;error&#39;);\\nconst warn = Symbol(&#39;warn&#39;);\\nconst info = Symbol(&#39;info&#39;);\\nconst debug = Symbol(&#39;debug&#39;);\\nconst trace = Symbol(&#39;trace&#39;);</code></pre>\\n      </div>\\n<p>Có thể dùng enum</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\">enum LogLevel {\\n  fatal = &#39;fatal&#39;,\\n  error = &#39;error&#39;,\\n  warn = &#39;warn&#39;,\\n  info = &#39;info&#39;,\\n  debug = &#39;debug&#39;,\\n  trace = &#39;trace&#39;,\\n}</code></pre>\\n      </div>\\n<p>Lợi ích mang lại: nhóm lại với nhau một cục, TypeScript dễ đàng kiểm tra giúp chúng ta</p>\\n<h3 id=\\\"tường-minh-hơn-boolean\\\"><a href=\\\"#t%C6%B0%E1%BB%9Dng-minh-h%C6%A1n-boolean\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Tường minh hơn boolean</h3>\\n<p>Chúng ta hay dùng boolean để làm <em>cờ</em> bật tắt hoặc đảo ngược giá trị</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\">class List1 { isOrdered: boolean; }</code></pre>\\n      </div>\\n<p>Nếu dùng enum, nó sẽ rõ nghĩa hơn, nhiều lựa chọn hơn</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\">enum ListKind { ordered, unordered }\\nclass List2 {\\n  listKind: ListKind;\\n  \\n}</code></pre>\\n      </div>\\n<h3 id=\\\"string-là-một-hằng-số-đúng-nghĩa-an-toàn-hơn-vì-không-thể-thay-đổi-được-giá-trị\\\"><a href=\\\"#string-l%C3%A0-m%E1%BB%99t-h%E1%BA%B1ng-s%E1%BB%91-%C4%91%C3%BAng-ngh%C4%A9a-an-to%C3%A0n-h%C6%A1n-v%C3%AC-kh%C3%B4ng-th%E1%BB%83-thay-%C4%91%E1%BB%95i-%C4%91%C6%B0%E1%BB%A3c-gi%C3%A1-tr%E1%BB%8B\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>String là một hằng số đúng nghĩa, an toàn hơn vì không thể thay đổi được giá trị</h3>\\n<p>Ví dụ hàm bên dưới dùng <code class=\\\"language-text\\\">const</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\">const GLOBAL = &#39;g&#39;;\\nconst NOT_GLOBAL = &#39;&#39;;\\ntype Globalness = typeof GLOBAL | typeof NOT_GLOBAL;\\n\\nfunction createRegExp(source: string,\\n  globalness: Globalness = NOT_GLOBAL) {\\n    return new RegExp(source, &#39;u&#39; + globalness);\\n  }\\n\\nassert.deepEqual(\\n  createRegExp(&#39;abc&#39;, GLOBAL),\\n  /abc/ug);</code></pre>\\n      </div>\\n<p>dùng enum tiện hơn</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\">enum Globalness {\\n  GLOBAL = &#39;g&#39;,\\n  NOT_GLOBAL = &#39;&#39;,\\n}\\n\\nfunction createRegExp(source: string, globalness = Globalness.NOT_GLOBAL) {\\n  return new RegExp(source, &#39;u&#39; + globalness);\\n}\\n\\nassert.deepEqual(\\n  createRegExp(&#39;abc&#39;, Globalness.GLOBAL),\\n  /abc/ug);</code></pre>\\n      </div>\\n<h2 id=\\\"enum-lúc-chạy-thì-sẽ-trở-thành-gì\\\"><a href=\\\"#enum-l%C3%BAc-ch%E1%BA%A1y-th%C3%AC-s%E1%BA%BD-tr%E1%BB%9F-th%C3%A0nh-g%C3%AC\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Enum lúc chạy thì sẽ trở thành gì?</h2>\\n<p>Sau khi TypeScript đã compile, enum sẽ được được chuyển thành javascript object</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\">enum NoYes {\\n  No,\\n  Yes,\\n}</code></pre>\\n      </div>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">var</span> NoYes<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">NoYes</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  NoYes<span class=\\\"token punctuation\\\">[</span>NoYes<span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"No\\\"</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"No\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n  NoYes<span class=\\\"token punctuation\\\">[</span>NoYes<span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"Yes\\\"</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"Yes\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span>NoYes <span class=\\\"token operator\\\">||</span> <span class=\\\"token punctuation\\\">(</span>NoYes <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p><a href=\\\"https://2ality.com/2020/01/typescript-enums.html\\\">TypeScript enums: How do they work? What can they be used for?</a></p>\",\"timeToRead\":5,\"excerpt\":\"Các khái niệm căn bản của enum Javascript chỉ có đúng một kiểu mà giá trị bị ràng buộc  rất cụ thể :  , giá trị chỉ được phép là   hoặc…\",\"frontmatter\":{\"title\":\"Kiểu enum trong TypeScript: làm việc như thế nào, sử dụng ra sao\",\"cover\":\"\",\"date\":\"2020-02-01\",\"category\":null,\"tags\":[\"hoc-thuat\",\"typescript\"],\"desc\":\"Chúng ta sẽ trả lời 2 câu hỏi sau: enum của TypeScript làm việc như thế nào, Nó được sử dụng để làm gì. Vở lòng cho người mới viết TypeScript\"},\"fields\":{\"slug\":\"/2020-02-01-huong-dan-kieu-enum-trong-typescript-can-ban\"}}},\"pathContext\":{\"slug\":\"/2020-02-01-huong-dan-kieu-enum-trong-typescript-can-ban\",\"prev\":{\"frontmatter\":{\"title\":\"Chỉ dẫn thiết đặt ESLint trong nhiều tình huống sử dụng Javascript, Typescript, React\",\"desc\":\"Chúng ta bắt đầu với Javascript trước, sau đó sẽ là TypeScript, và React. Mục tiêu là làm đúng, tránh trường hợp cài package không cần thiết hoặc copy/paste các config tới khi nó chạy được thì thôi.\",\"type\":\"post\",\"category\":null,\"tags\":[\"hoc-thuat\",\"javascript\",\"typescript\",\"react\"],\"date\":\"2020-02-03\",\"cover\":\"\"},\"fields\":{\"slug\":\"/2020-02-03-huong-dan-cai-dat-eslint-react-javascript-typescript-vscode\"}},\"next\":{\"frontmatter\":{\"title\":\"Những nguyên tắc chung mà Vue 3 đã áp dụng khi thiết kế\",\"desc\":\"Nguyên tắc (principle) được áp dụng khi cần đưa ra một quyết định kỹ thuật trước vô vàng các lựa chọn. Nếu bạn đã biết được mọi thứ vận hành như thế nào, thì đã đến lúc bạn tiến một bước xa hơn, trả lời cho câu hỏi tại sao\",\"type\":\"post\",\"category\":null,\"tags\":[\"hoc-thuat\",\"vuejs\"],\"date\":\"2020-01-29\",\"cover\":\"\"},\"fields\":{\"slug\":\"/2020-01-29-nguyen-tac-thiet-ke-cua-vue-3\"}}}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---2020-02-01-huong-dan-kieu-enum-trong-typescript-can-ban-f1e2562f0157edaaf373.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h2 id=\\\"các-khái-niệm-căn-bản-của-enum\\\"><a href=\\\"#c%C3%A1c-kh%C3%A1i-ni%E1%BB%87m-c%C4%83n-b%E1%BA%A3n-c%E1%BB%A7a-enum\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Các khái niệm căn bản của enum</h2>\\n<p>Javascript chỉ có đúng một kiểu mà giá trị bị ràng buộc <em>rất cụ thể</em>: <code class=\\\"language-text\\\">boolean</code>, giá trị chỉ được phép là <code class=\\\"language-text\\\">true</code> hoặc <code class=\\\"language-text\\\">false</code>, không chấp nhận một giá trị nào khác. <code class=\\\"language-text\\\">Enum</code> là phiên bản <em>mở rộng</em> với công dụng tương tự như <code class=\\\"language-text\\\">boolean</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\">enum NoYes {\\n    No,\\n    Yes\\n}</code></pre>\\n      </div>\\n<p>2 giá trị <code class=\\\"language-text\\\">No</code> <code class=\\\"language-text\\\">Yes</code> được gọi là thành viên của hội <code class=\\\"language-text\\\">enum</code> <code class=\\\"language-text\\\">NoYes</code>. Dùng nó như một <code class=\\\"language-text\\\">object</code>, chúng ta có thể <em>chấm</em> đến giá trị đó</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\">function toGerman(value: NoYes) {\\n  switch (value) {\\n    case NoYes.No:\\n      return &#39;Nein&#39;;\\n    case NoYes.Yes:\\n      return &#39;Ja&#39;;\\n  }\\n}</code></pre>\\n      </div>\\n<p>Tất cả thành viên của hội <code class=\\\"language-text\\\">enum</code> đều được cấp một <em>thẻ thành viên</em> gồm <code class=\\\"language-text\\\">name</code> và <code class=\\\"language-text\\\">value</code>. Ở trên chúng ta chỉ đang khai báo phần <code class=\\\"language-text\\\">name</code> cho enum, <code class=\\\"language-text\\\">value</code> lúc đó sẽ lấy mặc định là số từ 0 đi lên</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\">enum NoYes {\\n  No,\\n  Yes,\\n}\\n// nếu khai báo một cách tường minh hơn\\nenum NoYes {\\n  No = 0,\\n  Yes = 1,\\n}\\n\\nassert.equal(NoYes.No, 0);\\nassert.equal(NoYes.Yes, 1);</code></pre>\\n      </div>\\n<p>Nếu cà khịa, khai báo như thế này</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\">enum Enum {\\n  A,\\n  B,\\n  C = 4,\\n  D,\\n  E = 8,\\n  F,\\n}</code></pre>\\n      </div>\\n<p>Đồng nghĩa là các giá trị kế tiếp sẽ tự động tăng lên một, so với giá trị khai báo trước đó</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\">assert.deepEqual(\\n  [Enum.A, Enum.B, Enum.C, Enum.D, Enum.E, Enum.F],\\n  [0, 1, 4, 5, 8, 9]\\n);</code></pre>\\n      </div>\\n<p>Về cách đặt tên (<code class=\\\"language-text\\\">name</code>) trong <code class=\\\"language-text\\\">enum</code>, cũng có vài ba lựa chọn</p>\\n<ul>\\n<li>Đặt theo kiểu JavaScript, viết hoa hết, <code class=\\\"language-text\\\">Number,MAX_VALUE</code></li>\\n<li>Đặt theo kiểu symbol, con lạc đà, chữ đầu viết thường, <code class=\\\"language-text\\\">Symbol.asyncIterator</code></li>\\n<li>Kiểu TypeScript, con lạc đà, chữ đầu viết hoa, <code class=\\\"language-text\\\">Number.MaxValue</code></li>\\n</ul>\\n<p>Tương tự như object, chúng ta có thể truy xuất đến một thành viên của hội bằng cách viết sau</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\">enum HttpRequestField {\\n  &#39;Accept&#39;,\\n  &#39;Accept-Charset&#39;,\\n  &#39;Accept-Datetime&#39;,\\n  &#39;Accept-Encoding&#39;,\\n  &#39;Accept-Language&#39;,\\n}\\nassert.equal(HttpRequestField[&#39;Accept-Charset&#39;], 1);</code></pre>\\n      </div>\\n<p>Giá trị <code class=\\\"language-text\\\">value</code> của enum, không bắt buộc là một number, có thể là một <code class=\\\"language-text\\\">string</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\">enum NoYes {\\n  No = &#39;No&#39;,\\n  Yes = &#39;Yes&#39;,\\n}\\nassert.equal(NoYes.No, &#39;No&#39;);\\nassert.equal(NoYes.Yes, &#39;Yes&#39;);</code></pre>\\n      </div>\\n<p>Còn một cách khai báo, ít được sử dụng, là kiểu xăng pha nhớt, các giá trị trong enum có thể là số cũng có thể là chữ</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\">enum Enum {\\n  A,\\n  B,\\n  C = &#39;C&#39;,\\n  D = &#39;D&#39;,\\n  E = 8,\\n  F,\\n}\\nassert.deepEqual(\\n  [Enum.A, Enum.B, Enum.C, Enum.D, Enum.E, Enum.F],\\n  [0, 1, &#39;C&#39;, &#39;D&#39;, 8, 9]\\n);</code></pre>\\n      </div>\\n<p>Theo như kinh nghiệm từ các bật tiền bối, sử dụng enum thì nên dùng kiểu giá trị <code class=\\\"language-text\\\">string</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\">enum NoYes { No = &#39;NO&#39;, Yes = &#39;YES&#39; }</code></pre>\\n      </div>\\n<p>Nếu có <em>log</em> ra chúng ta cũng biết được giá trị chính xác là gì, đỡ hack não ngồi đếm số thứ tự</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\">console.log(NoYes.No);\\nconsole.log(NoYes.Yes);</code></pre>\\n      </div>\\n<p>Thêm nữa, ràng buộc được luôn kiểu giá trị</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\">function func(noYes: NoYes) {}\\n\\nfunc(&#39;abc&#39;);\\nfunc(&#39;Yes&#39;);</code></pre>\\n      </div>\\n<h2 id=\\\"trường-hợp-sử-dụng-enum\\\"><a href=\\\"#tr%C6%B0%E1%BB%9Dng-h%E1%BB%A3p-s%E1%BB%AD-d%E1%BB%A5ng-enum\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Trường hợp sử dụng enum</h2>\\n<h3 id=\\\"hằng-số-nhiều-giá-trị\\\"><a href=\\\"#h%E1%BA%B1ng-s%E1%BB%91-nhi%E1%BB%81u-gi%C3%A1-tr%E1%BB%8B\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>hằng số nhiều giá trị</h3>\\n<p>Nếu chúng ta có một <em>mớ</em> các hằng số, có quan hệ họ hàng gần với nhau</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\">const fatal = Symbol(&#39;fatal&#39;);\\nconst error = Symbol(&#39;error&#39;);\\nconst warn = Symbol(&#39;warn&#39;);\\nconst info = Symbol(&#39;info&#39;);\\nconst debug = Symbol(&#39;debug&#39;);\\nconst trace = Symbol(&#39;trace&#39;);</code></pre>\\n      </div>\\n<p>Có thể dùng enum</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\">enum LogLevel {\\n  fatal = &#39;fatal&#39;,\\n  error = &#39;error&#39;,\\n  warn = &#39;warn&#39;,\\n  info = &#39;info&#39;,\\n  debug = &#39;debug&#39;,\\n  trace = &#39;trace&#39;,\\n}</code></pre>\\n      </div>\\n<p>Lợi ích mang lại: nhóm lại với nhau một cục, TypeScript dễ đàng kiểm tra giúp chúng ta</p>\\n<h3 id=\\\"tường-minh-hơn-boolean\\\"><a href=\\\"#t%C6%B0%E1%BB%9Dng-minh-h%C6%A1n-boolean\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Tường minh hơn boolean</h3>\\n<p>Chúng ta hay dùng boolean để làm <em>cờ</em> bật tắt hoặc đảo ngược giá trị</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\">class List1 { isOrdered: boolean; }</code></pre>\\n      </div>\\n<p>Nếu dùng enum, nó sẽ rõ nghĩa hơn, nhiều lựa chọn hơn</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\">enum ListKind { ordered, unordered }\\nclass List2 {\\n  listKind: ListKind;\\n  \\n}</code></pre>\\n      </div>\\n<h3 id=\\\"string-là-một-hằng-số-đúng-nghĩa-an-toàn-hơn-vì-không-thể-thay-đổi-được-giá-trị\\\"><a href=\\\"#string-l%C3%A0-m%E1%BB%99t-h%E1%BA%B1ng-s%E1%BB%91-%C4%91%C3%BAng-ngh%C4%A9a-an-to%C3%A0n-h%C6%A1n-v%C3%AC-kh%C3%B4ng-th%E1%BB%83-thay-%C4%91%E1%BB%95i-%C4%91%C6%B0%E1%BB%A3c-gi%C3%A1-tr%E1%BB%8B\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>String là một hằng số đúng nghĩa, an toàn hơn vì không thể thay đổi được giá trị</h3>\\n<p>Ví dụ hàm bên dưới dùng <code class=\\\"language-text\\\">const</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\">const GLOBAL = &#39;g&#39;;\\nconst NOT_GLOBAL = &#39;&#39;;\\ntype Globalness = typeof GLOBAL | typeof NOT_GLOBAL;\\n\\nfunction createRegExp(source: string,\\n  globalness: Globalness = NOT_GLOBAL) {\\n    return new RegExp(source, &#39;u&#39; + globalness);\\n  }\\n\\nassert.deepEqual(\\n  createRegExp(&#39;abc&#39;, GLOBAL),\\n  /abc/ug);</code></pre>\\n      </div>\\n<p>dùng enum tiện hơn</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\">enum Globalness {\\n  GLOBAL = &#39;g&#39;,\\n  NOT_GLOBAL = &#39;&#39;,\\n}\\n\\nfunction createRegExp(source: string, globalness = Globalness.NOT_GLOBAL) {\\n  return new RegExp(source, &#39;u&#39; + globalness);\\n}\\n\\nassert.deepEqual(\\n  createRegExp(&#39;abc&#39;, Globalness.GLOBAL),\\n  /abc/ug);</code></pre>\\n      </div>\\n<h2 id=\\\"enum-lúc-chạy-thì-sẽ-trở-thành-gì\\\"><a href=\\\"#enum-l%C3%BAc-ch%E1%BA%A1y-th%C3%AC-s%E1%BA%BD-tr%E1%BB%9F-th%C3%A0nh-g%C3%AC\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Enum lúc chạy thì sẽ trở thành gì?</h2>\\n<p>Sau khi TypeScript đã compile, enum sẽ được được chuyển thành javascript object</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\">enum NoYes {\\n  No,\\n  Yes,\\n}</code></pre>\\n      </div>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">var</span> NoYes<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">NoYes</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  NoYes<span class=\\\"token punctuation\\\">[</span>NoYes<span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"No\\\"</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"No\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n  NoYes<span class=\\\"token punctuation\\\">[</span>NoYes<span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"Yes\\\"</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"Yes\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span>NoYes <span class=\\\"token operator\\\">||</span> <span class=\\\"token punctuation\\\">(</span>NoYes <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p><a href=\\\"https://2ality.com/2020/01/typescript-enums.html\\\">TypeScript enums: How do they work? What can they be used for?</a></p>\",\"timeToRead\":5,\"excerpt\":\"Các khái niệm căn bản của enum Javascript chỉ có đúng một kiểu mà giá trị bị ràng buộc  rất cụ thể :  , giá trị chỉ được phép là   hoặc…\",\"frontmatter\":{\"title\":\"Kiểu enum trong TypeScript: làm việc như thế nào, sử dụng ra sao\",\"cover\":\"\",\"date\":\"2020-02-01\",\"category\":null,\"tags\":[\"hoc-thuat\",\"typescript\"],\"desc\":\"Chúng ta sẽ trả lời 2 câu hỏi sau: enum của TypeScript làm việc như thế nào, Nó được sử dụng để làm gì. Vở lòng cho người mới viết TypeScript\"},\"fields\":{\"slug\":\"/2020-02-01-huong-dan-kieu-enum-trong-typescript-can-ban\"}}},\"pathContext\":{\"slug\":\"/2020-02-01-huong-dan-kieu-enum-trong-typescript-can-ban\",\"prev\":{\"frontmatter\":{\"title\":\"Chỉ dẫn thiết đặt ESLint trong nhiều tình huống sử dụng Javascript, Typescript, React\",\"desc\":\"Chúng ta bắt đầu với Javascript trước, sau đó sẽ là TypeScript, và React. Mục tiêu là làm đúng, tránh trường hợp cài package không cần thiết hoặc copy/paste các config tới khi nó chạy được thì thôi.\",\"type\":\"post\",\"category\":null,\"tags\":[\"hoc-thuat\",\"javascript\",\"typescript\",\"react\"],\"date\":\"2020-02-03\",\"cover\":\"\"},\"fields\":{\"slug\":\"/2020-02-03-huong-dan-cai-dat-eslint-react-javascript-typescript-vscode\"}},\"next\":{\"frontmatter\":{\"title\":\"Những nguyên tắc chung mà Vue 3 đã áp dụng khi thiết kế\",\"desc\":\"Nguyên tắc (principle) được áp dụng khi cần đưa ra một quyết định kỹ thuật trước vô vàng các lựa chọn. Nếu bạn đã biết được mọi thứ vận hành như thế nào, thì đã đến lúc bạn tiến một bước xa hơn, trả lời cho câu hỏi tại sao\",\"type\":\"post\",\"category\":null,\"tags\":[\"hoc-thuat\",\"vuejs\"],\"date\":\"2020-01-29\",\"cover\":\"\"},\"fields\":{\"slug\":\"/2020-01-29-nguyen-tac-thiet-ke-cua-vue-3\"}}}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/2020-02-01-huong-dan-kieu-enum-trong-typescript-can-ban.json\n// module id = 1621\n// module chunks = 220332967723373"],"sourceRoot":""}