{"version":3,"sources":["webpack:///path---2018-05-01-huong-dan-cai-thien-performance-react-app-be55e8cc5ecc80ab440f.js","webpack:///./.cache/json/2018-05-01-huong-dan-cai-thien-performance-react-app.json"],"names":["webpackJsonp","1425","module","exports","data","markdownRemark","html","timeToRead","excerpt","frontmatter","title","cover","date","category","tags","desc","fields","slug","pathContext","prev","type","next"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA;AAAyt3CC,WAAA,EAAAC,QAAA,6IAAAC,aAA+sCC,MAAA,sCAAAC,MAAA,GAAAC,KAAA,aAAAC,SAAA,KAAAC,MAAA,oCAAAC,KAAA,0GAAyPC,QAAWC,KAAA,2DAAiEC,aAAgBD,KAAA,wDAAAE,MAAuEV,aAAeC,MAAA,qDAAAK,KAAA,mEAAAK,KAAA,OAAAP,SAAA,KAAAC,MAAA,qCAAAF,KAAA,aAAAD,MAAA,IAAiPK,QAAWC,KAAA,0DAAgEI,MAASZ,aAAeC,MAAA,uBAAAK,KAAA,4CAAAK,KAAA,OAAAP,SAAA,KAAAC,MAAA,sBAAAF,KAAA,aAAAD,MAAA,IAA6KK,QAAWC,KAAA","file":"path---2018-05-01-huong-dan-cai-thien-performance-react-app-be55e8cc5ecc80ab440f.js","sourcesContent":["webpackJsonp([79752974708534],{\n\n/***/ 1425:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<!-- TOC -->\\n<ul>\\n<li><a href=\\\"#x%C3%A1c-%C4%91%E1%BB%8Bnh-c%C3%A1c-tr%C6%B0%E1%BB%9Dng-h%E1%BB%A3p-render-kh%C3%B4ng-c%E1%BA%A7n-thi%E1%BA%BFt\\\">Xác định các trường hợp render không cần thiết</a></li>\\n<li><a href=\\\"#t%C3%A1ch-c%C3%A1c-component-update-th%C6%B0%E1%BB%9Dng-xuy%C3%AAn-th%C3%A0nh-c%C3%A1c-component-%C4%91%E1%BB%99c-l%E1%BA%ADp\\\">Tách các component update thường xuyên thành các component độc lập</a></li>\\n<li><a href=\\\"#shouldcomponentupdate-v%C3%A0-purecomponent\\\"><code class=\\\"language-text\\\">shouldComponentUpdate</code> và PureComponent</a></li>\\n<li><a href=\\\"#tr%C3%A1nh-vi%E1%BB%87c-%C4%91%C6%B0a-m%E1%BB%99t-object-m%E1%BB%9Bi-nh%C6%B0-l%C3%A0-prop\\\">Tránh việc đưa một object mới như là prop</a></li>\\n<li><a href=\\\"#production\\\">Production</a></li>\\n<li><a href=\\\"#code-splitting\\\">Code splitting</a></li>\\n<li><a href=\\\"#thay-%C4%91%E1%BB%95i-dom-qu%C3%A1-nhi%E1%BB%81u-l%E1%BA%A7n\\\">Thay đổi DOM quá nhiều lần</a></li>\\n<li><a href=\\\"#callback\\\">Callback</a></li>\\n</ul>\\n<!-- /TOC -->\\n<p>Toàn bộ source app ví dụ có thể lấy <a href=\\\"https://github.com/ohansemmanuel/Cardie-performace\\\">ở đây https://github.com/ohansemmanuel/Cardie-performace</a>, khuyến khích các bạn nên tự lấy về và vọc.</p>\\n<p>Chạy lên nó sẽ có như vầy</p>\\n<p><img src=\\\"https://cdn-images-1.medium.com/max/1600/1*Yh4h7wXPOcbaDBKdVJxm-g.png\\\" alt=\\\"Cải thiện performance của React App\\\"></p>\\n<p>Khi click vào button nó sẽ update lại thông tin nghề nghiệp</p>\\n<p><img src=\\\"https://cdn-images-1.medium.com/max/1600/1*o-8SuFxH2Tl37JG-wSOj0g.gif\\\" alt=\\\"Cải thiện performance của React App\\\"></p>\\n<h1 id=\\\"xác-định-các-trường-hợp-render-không-cần-thiết\\\"><a href=\\\"#x%C3%A1c-%C4%91%E1%BB%8Bnh-c%C3%A1c-tr%C6%B0%E1%BB%9Dng-h%E1%BB%A3p-render-kh%C3%B4ng-c%E1%BA%A7n-thi%E1%BA%BFt\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Xác định các trường hợp render không cần thiết</h1>\\n<p>Phương pháp đơn giản nhất để kiểm tra là bật nút <code class=\\\"language-text\\\">highlight update</code> trên React Dev tool.</p>\\n<p><img src=\\\"https://cdn-images-1.medium.com/max/1600/1*jfeS12BHr2dt5ooLeh5u3Q.gif\\\" alt=\\\"Cải thiện performance của React App\\\"></p>\\n<p>Cái viền màu xanh hiển thị xung quanh component cho biết nó đang gọi render.</p>\\n<p>Trong ví dụ này có thể thấy nguyên component <code class=\\\"language-text\\\">App</code> được re-render, không đúng như chúng ta mong muốn.</p>\\n<p><img src=\\\"https://cdn-images-1.medium.com/max/1600/1*ofXx-J4tr7KXXlNozuW9OA.gif\\\" alt=\\\"Cải thiện performance của React App\\\"></p>\\n<p>Tốt nhất là đúng cái phần hiển thị thông tin nghề nghiệp gọi render.</p>\\n<h1 id=\\\"tách-các-component-update-thường-xuyên-thành-các-component-độc-lập\\\"><a href=\\\"#t%C3%A1ch-c%C3%A1c-component-update-th%C6%B0%E1%BB%9Dng-xuy%C3%AAn-th%C3%A0nh-c%C3%A1c-component-%C4%91%E1%BB%99c-l%E1%BA%ADp\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Tách các component update thường xuyên thành các component độc lập</h1>\\n<p>Sau khi đã bắt được component nào đang re-render không cần thiết, tách component này theo phương pháp sau</p>\\n<p>Component <code class=\\\"language-text\\\">App</code> connect với redux store bằng hàm <code class=\\\"language-text\\\">connect</code>, nó nhận các props là <code class=\\\"language-text\\\">name</code>, <code class=\\\"language-text\\\">location</code>, <code class=\\\"language-text\\\">likes</code> và <code class=\\\"language-text\\\">description</code></p>\\n<p><img src=\\\"https://cdn-images-1.medium.com/max/1600/1*EQLJ8lXEchp_USFfj2Em7A.png\\\" alt=\\\"Cải thiện performance của React App\\\"></p>\\n<p>Khi user click cái button, cái description bị thay đổi. Nó làm cho component <code class=\\\"language-text\\\">App</code> re-render.</p>\\n<p>Nhớ lại kiến thức căn bản React, khi prop hoặc state thay đổi, cây virtual DOM được update</p>\\n<p><img src=\\\"https://cdn-images-1.medium.com/max/800/1*rv3Y1Au-GarKtoiTJSmWRA.png\\\" alt=\\\"Cải thiện performance của React App\\\">\\n<img src=\\\"https://cdn-images-1.medium.com/max/800/1*x6NfWjAOcqwoZs2GhbdTZw.png\\\" alt=\\\"Cải thiện performance của React App\\\">\\n<img src=\\\"https://cdn-images-1.medium.com/max/800/1*EpSSnv8Wjql-IcrNvzvz_A.png\\\" alt=\\\"Cải thiện performance của React App\\\"></p>\\n<p>Giờ để xử lý, chúng ta tạo một component mới, đặt là <code class=\\\"language-text\\\">Profession</code>, để render thông tin description, chúng ta cần tổ chức lại để có cây virtual DOM như thế này</p>\\n<p><img src=\\\"https://cdn-images-1.medium.com/max/1600/1*g8w3av5rclzcX9N387nxgQ.png\\\" alt=\\\"Cải thiện performance của React App\\\">\\n<img src=\\\"https://cdn-images-1.medium.com/max/1600/1*0kqtSR4WxvGy4yYBKyReIw.png\\\" alt=\\\"Cải thiện performance của React App\\\"></p>\\n<p>Thay vì <code class=\\\"language-text\\\">&lt;App /&gt;</code> nhận prop là <code class=\\\"language-text\\\">profession</code>, chuyển trách nhiệm này cho <code class=\\\"language-text\\\">&lt;Profession /&gt;</code></p>\\n<p><img src=\\\"https://cdn-images-1.medium.com/max/1600/1*tLbbgUgBavBm6FMpOzqL7Q.png\\\" alt=\\\"Cải thiện performance của React App\\\"></p>\\n<p>Kết quả sau khi tách component</p>\\n<p><img src=\\\"https://cdn-images-1.medium.com/max/1600/1*Poo-6-5-bfYQ0qYBcXoyiw.gif\\\" alt=\\\"Cải thiện performance của React App\\\"></p>\\n<h1 id=\\\"code-classlanguage-textshouldcomponentupdatecode-và-purecomponent\\\"><a href=\\\"#code-classlanguage-textshouldcomponentupdatecode-v%C3%A0-purecomponent\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a><code class=\\\"language-text\\\">shouldComponentUpdate</code> và PureComponent</h1>\\n<p>Các bài viết liên quan đến chủ đề performance, chắc chắn sẽ nhắc đến <code class=\\\"language-text\\\">PureComponent</code>, bài này cũng không ngoại lệ.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">MyComponent</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">MyComponent</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>PureComponent</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p>Điều gì bạn cần quan tâm khi khai báo một component là <code class=\\\"language-text\\\">PureComponent</code>? Đó là việc mất đi hàm <code class=\\\"language-text\\\">shouldComponentUpdate</code>. Về nguyên tắc nó chỉ render lại khi <code class=\\\"language-text\\\">prop</code> thay đổi</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">Description</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\"><span class=\\\"token punctuation\\\">{</span> description <span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span>\\n\\t<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>p</span><span class=\\\"token punctuation\\\">></span></span>\\n\\t\\t<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>span</span> <span class=\\\"token attr-name\\\">className</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>faint<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token constant\\\">I</span> am<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>span</span><span class=\\\"token punctuation\\\">></span></span> a <span class=\\\"token punctuation\\\">{</span>description<span class=\\\"token punctuation\\\">}</span>\\n\\t<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>p</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token punctuation\\\">)</span></code></pre>\\n      </div>\\n<p>Tác giả bài viết này còn chia nhỏ hơn nữa</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">Description</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\"><span class=\\\"token punctuation\\\">{</span> description <span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>p</span><span class=\\\"token punctuation\\\">></span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">I</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Am</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">A</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Profession</span></span> <span class=\\\"token attr-name\\\">profession</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>description<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>p</span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p><img src=\\\"https://cdn-images-1.medium.com/max/1600/1*TpXci0NJ24imQqmsc7S-_A.png\\\" alt=\\\"Cải thiện performance của React App\\\"></p>\\n<p>Chúng ta cần nhớ lại 1 lần nữa: React định nghĩa thế nào là một PureComponent?</p>\\n<p>Hãy thử xem xét cách viết <code class=\\\"language-text\\\">shouldComponentUpdate</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">ShouldNotUpdate</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">constructor</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">props</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">super</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>counter <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  \\n  <span class=\\\"token function\\\">shouldComponentUpdate</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">nextProps<span class=\\\"token punctuation\\\">,</span> nextState</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span>children <span class=\\\"token operator\\\">!==</span> nextProps<span class=\\\"token punctuation\\\">.</span>children<span class=\\\"token punctuation\\\">;</span>    \\n  <span class=\\\"token punctuation\\\">}</span>\\n  \\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">I should be rendered only 1 time. actual times rendered: </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span><span class=\\\"token operator\\\">++</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>counter<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p>Kết quả trả về sẽ không phải counter = 1, nghĩa là hàm render thực sự sẽ chạy rất nhiều lần, tại sao lại vậy? bởi vì <code class=\\\"language-text\\\">this.props.children !== nextProps.children</code> sẽ luôn luôn trả về <code class=\\\"language-text\\\">true</code>, React sẽ tạo ra một instance mới, 1 <strong>ReactElement mới</strong> mỗi khi render</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">ShouldNotUpdate</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>PureComponent</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">constructor</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">props</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">super</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>counter <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  \\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">I should be rendered only 1 time. actual times rendered: </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span><span class=\\\"token operator\\\">++</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>counter<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p>Số lần render vẫn không giảm đi, tại sao? Đọc tiếp sẽ rõ.</p>\\n<h1 id=\\\"tránh-việc-đưa-một-object-mới-như-là-prop\\\"><a href=\\\"#tr%C3%A1nh-vi%E1%BB%87c-%C4%91%C6%B0a-m%E1%BB%99t-object-m%E1%BB%9Bi-nh%C6%B0-l%C3%A0-prop\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Tránh việc đưa một object mới như là prop</h1>\\n<p>Nó sẽ xảy ra tình huống là <code class=\\\"language-text\\\">prop</code> không thay đổi, nhưng React nghĩ là nó đã thay đổi, nên render lại. Ví dụ</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">I</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">PureComponent</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>span</span> <span class=\\\"token attr-name\\\">className</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>faint<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span>i<span class=\\\"token punctuation\\\">.</span>value<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>span</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token comment\\\">// đâu đó truyền vào </span>\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Description</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\t<span class=\\\"token keyword\\\">const</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n\\t  value<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"i\\\"</span>\\n\\t<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\t<span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n\\t  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>p</span><span class=\\\"token punctuation\\\">></span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">I</span></span> <span class=\\\"token attr-name\\\">i</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>i<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n\\t    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Am</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n\\t    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">A</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n\\t    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Profession</span></span> <span class=\\\"token attr-name\\\">profession</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span>description<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n\\t  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>p</span><span class=\\\"token punctuation\\\">></span></span>\\n\\t<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p><img src=\\\"https://cdn-images-1.medium.com/max/1600/1*NymA8dLgtXQIHhk7AI2LzQ.png\\\" alt=\\\"Cải thiện performance của React App\\\"></p>\\n<p>Ngay cả khi <code class=\\\"language-text\\\">&lt;I /&gt;</code> là một PureComponent, nó vẫn render khi <code class=\\\"language-text\\\">profession</code> thay đổi.</p>\\n<p>Tại sao?</p>\\n<p>Khi <code class=\\\"language-text\\\">&lt;Description /&gt;</code> nhận một prop mới, hàm render được gọi</p>\\n<p>Khi đến đoạn này <code class=\\\"language-text\\\">&lt;I i={i} /&gt;</code>, giá trị của <code class=\\\"language-text\\\">i</code> là một object hoàn toàn mới</p>\\n<p>Với <code class=\\\"language-text\\\">PureComponent</code> nó chỉ dùng <strong>shallow compare</strong> giữa prop cũ và mới, tức là <code class=\\\"language-text\\\">string</code> và <code class=\\\"language-text\\\">number</code> thì so sánh theo giá trị, còn <code class=\\\"language-text\\\">object</code> so sánh theo tham chiếu đến vùng nhớ</p>\\n<p>Giá trị của <code class=\\\"language-text\\\">i</code> không khác, nhưng thực sự nó đã tham chiếu đến vùng nhớ khác</p>\\n<p>Điều này cũng giải thích cho việc tại sao cách làm như thế này không được khuyến khích</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token function\\\">Render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span> <span class=\\\"token attr-name\\\">onClick</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token comment\\\">/*do something*/</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span></code></pre>\\n      </div>\\n<p>Function cũng là một <code class=\\\"language-text\\\">object</code>, bạn đang truyền vào một <code class=\\\"language-text\\\">object</code> mỗi lần render</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token comment\\\">// Do this, please</span>\\n<span class=\\\"token function-variable function\\\">handleClick</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token operator\\\">&lt;</span>div onClick<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>handleClick<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h1 id=\\\"production\\\"><a href=\\\"#production\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Production</h1>\\n<p>Deploy thì luôn build bằng production nhỉ, ngoài ra ở phía server nên nén lại bằng Gzip. Nếu dùng Node/Express ở backend, cài thêm module <code class=\\\"language-text\\\">compression</code> và sử dụng như Express middleware</p>\\n<h1 id=\\\"code-splitting\\\"><a href=\\\"#code-splitting\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Code splitting</h1>\\n<p>Cái này mình có hướng dẫn rồi, đọc lại <a href=\\\"/2018-10-07-huong-dan-lazy-load-component-react\\\">ở đây</a></p>\\n<h1 id=\\\"thay-đổi-dom-quá-nhiều-lần\\\"><a href=\\\"#thay-%C4%91%E1%BB%95i-dom-qu%C3%A1-nhi%E1%BB%81u-l%E1%BA%A7n\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Thay đổi DOM quá nhiều lần</h1>\\n<p>Có bao giờ bạn từng sử dụng một <em>component</em> nhiều lần trong app, cảm thấy app hơi lag? Animation cảm giác chạy không mượt?</p>\\n<p>Khi xây các component phức tạp, bạn sẽ phải xử lý DOM một chút, khả năng sẽ vướng vào 2 issue sau</p>\\n<ol>\\n<li><a href=\\\"https://developers.google.com/web/fundamentals/performance/rendering/avoid-large-complex-layouts-and-layout-thrashing\\\">Trigger layout</a></li>\\n<li><a href=\\\"https://developers.google.com/web/fundamentals/performance/rendering/avoid-large-complex-layouts-and-layout-thrashing#avoid_layout_thrashing\\\">Layout Thrashing</a></li>\\n</ol>\\n<p>Hãy chạy thử hiệu ứng đang làm cho một component <strong>Collapse</strong> với khoản vài chục cái instance, sau đó chọn 6x slowdown trên dev tool để thấy sự khác biệt, 6x slowdown là giá trị tương ứng với tốc độ khi xem trên điện thoại</p>\\n<p><a href=\\\"https://cdn-images-1.medium.com/max/800/1*2xOju9iTPGs22U0joILHmQ.png\\\">Cải thiện performance của React App</a></p>\\n<p>Component <strong>Collapse</strong>, ta thường sẽ làm là thay đổi độ cao của nó</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token function\\\">updateHeight</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">isOpen</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>isOpen<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>containerEl<span class=\\\"token punctuation\\\">.</span>style<span class=\\\"token punctuation\\\">.</span>height <span class=\\\"token operator\\\">=</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>contentEl<span class=\\\"token punctuation\\\">.</span>scrollHeight<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">px</span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>containerEl<span class=\\\"token punctuation\\\">.</span>style<span class=\\\"token punctuation\\\">.</span>height <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'0px'</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p>Có 2 điểm cần lưu ý</p>\\n<ol>\\n<li>Chúng ta thay đổi <em>height</em>, là chúng ta trigger chuyện sắp xếp lại Layout. Nếu chúng ta thay đổi <code class=\\\"language-text\\\">transform</code>, chúng ta chỉ sẽ trigger <strong>Composite</strong> và nhìn nó sẽ smooth hơn.</li>\\n<li>Dòng <code class=\\\"language-text\\\">this.containerEl.style.height = ${this.contentEl.scrollHeight}px;</code> là một ví dụ điển hình của <strong>Layout Thrashing</strong>, chúng ta đọc giá trị độ cao hiện tại, rồi lấy giá trị đó update cho một đối tượng DOM, nhân số lần này lên với số lượng component <strong>Collapse</strong> sẽ là một số lần đáng quan tâm. Sẽ tốt hơn nếu chúng ta chỉ đọc một lần rồi gán giá trị một lượt luôn.</li>\\n</ol>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token function\\\">updateHeight</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">isOpen</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>lastRAF <span class=\\\"token operator\\\">&amp;&amp;</span> <span class=\\\"token function\\\">cancelAnimationFrame</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>lastRAF<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>isOpen<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>lastRAF <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">requestAnimationFrame</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token comment\\\">// đọc</span>\\n      <span class=\\\"token keyword\\\">const</span> height <span class=\\\"token operator\\\">=</span><span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>contentEl<span class=\\\"token punctuation\\\">.</span>scrollHeight<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">px</span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>lastRAF <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">requestAnimationFrame</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>lastRAF <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">requestAnimationFrame</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token comment\\\">// gán giá trị</span>\\n          <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>containerEl<span class=\\\"token punctuation\\\">.</span>style<span class=\\\"token punctuation\\\">.</span>height <span class=\\\"token operator\\\">=</span> height<span class=\\\"token punctuation\\\">;</span>\\n          <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>lastRAF <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>containerEl<span class=\\\"token punctuation\\\">.</span>style<span class=\\\"token punctuation\\\">.</span>height <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'0px'</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p>Có thể sử dụng thư viện <a href=\\\"https://github.com/wilsonpage/fastdom\\\">Fastdom</a> thay vì tự viết</p>\\n<h1 id=\\\"callback\\\"><a href=\\\"#callback\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Callback</h1>\\n<p>Khi attach một function vào bất kỳ event nào trong DOM, nếu có thêm <code class=\\\"language-text\\\">debounced</code> hoặc <code class=\\\"language-text\\\">throttled</code> sẽ tốt hơn, giảm tải số lần gọi đến function này đến mức thấp nhất.</p>\\n<p>Cách viết rất thường thấy</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\">window<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">addEventListener</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'resize'</span><span class=\\\"token punctuation\\\">,</span> _<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">throttle</span><span class=\\\"token punctuation\\\">(</span>callback<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span></code></pre>\\n      </div>\\n<p>Nhưng tại sao không sử dụng nó trong component callback?</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">UnleashedOne</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">constructor</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">props</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">super</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>onChange <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">onChange</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">bind</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token function\\\">onChange</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">e</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">onChange</span><span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">.</span>target<span class=\\\"token punctuation\\\">.</span>value<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token function\\\">render</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>input</span> <span class=\\\"token attr-name\\\">onChange</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>onChange<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">/></span></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p>Chúng ta đang lắng nghe tất tần tật mỗi khi có thay đổi trên <code class=\\\"language-text\\\">input</code>, như vậy thực sự có cần thiết không?</p>\\n<p>Để giải quyết vấn đề trên, có thể viết lại component</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">LeashedOne</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">constructor</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">props</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">super</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>onChange <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">onChange</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">bind</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>onChangeDebounce <span class=\\\"token operator\\\">=</span> _<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">debounce</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">value</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">onChange</span><span class=\\\"token punctuation\\\">(</span>value<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">300</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token function\\\">onChange</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">e</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">onChangeDebounce</span><span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">.</span>target<span class=\\\"token punctuation\\\">.</span>value<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token function\\\">render</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>input</span> <span class=\\\"token attr-name\\\">onChange</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>onChange<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">/></span></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p>Đợi user nhập xong đi rồi xử lý sự kiện, ở đây sử dụng <code class=\\\"language-text\\\">_.debounce</code>, <code class=\\\"language-text\\\">_.throttle</code> từ thư viện <strong>lodash</strong>, sự khác nhau của 2 thằng này thì đọc thêm trên docs của lodash.</p>\\n<p>Nếu bị nghiện performance, bạn có thể chia sẻ thêm một số tip với mình.</p>\\n<p>Tham khảo thêm </p>\\n<ul>\\n<li><a href=\\\"/2018-09-19-huong-dan-react-profiler-dev-tool\\\">Giới thiệu React Profiler</a></li>\\n</ul>\\n<p>Tài liệu tham khảo</p>\\n<ul>\\n<li><a href=\\\"https://medium.com/myheritage-engineering/how-to-greatly-improve-your-react-app-performance-e70f7cbbb5f6\\\">https://medium.com/myheritage-engineering/how-to-greatly-improve-your-react-app-performance-e70f7cbbb5f6</a></li>\\n<li><a href=\\\"https://logrocket-blog.ghost.io/death-by-a-thousand-cuts-a-checklist-for-eliminating-common-react-performance-issues/\\\">https://logrocket-blog.ghost.io/death-by-a-thousand-cuts-a-checklist-for-eliminating-common-react-performance-issues/</a></li>\\n</ul>\",\"timeToRead\":9,\"excerpt\":\"Xác định các trường hợp render không cần thiết Tách các component update thường xuyên thành các component độc lập  và PureComponent Tránh…\",\"frontmatter\":{\"title\":\"Cải thiện performance của React App\",\"cover\":\"\",\"date\":\"2018-05-01\",\"category\":null,\"tags\":[\"javascript\",\"react\",\"performance\"],\"desc\":\"Trong bài này, chúng ta cùng đi qua các bước để fix những issue liên quan đến performance thường thấy.\"},\"fields\":{\"slug\":\"/2018-05-01-huong-dan-cai-thien-performance-react-app\"}}},\"pathContext\":{\"slug\":\"/2018-05-01-huong-dan-cai-thien-performance-react-app\",\"prev\":{\"frontmatter\":{\"title\":\"Transition trong React Native với React Navigation\",\"desc\":\"Hướng dẫn làm transition trong React Native với react navigation\",\"type\":\"post\",\"category\":null,\"tags\":[\"javascript\",\"react\",\"react-native\"],\"date\":\"2018-05-02\",\"cover\":\"\"},\"fields\":{\"slug\":\"/2018-05-02-huong-dan-transition-voi-react-navigation\"}},\"next\":{\"frontmatter\":{\"title\":\"Google Maps và React\",\"desc\":\"Hướng Sử dụng google maps api trong React\",\"type\":\"post\",\"category\":null,\"tags\":[\"javascript\",\"react\"],\"date\":\"2018-04-27\",\"cover\":\"\"},\"fields\":{\"slug\":\"/2018-04-27-huong-dan-google-maps-va-react\"}}}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---2018-05-01-huong-dan-cai-thien-performance-react-app-be55e8cc5ecc80ab440f.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<!-- TOC -->\\n<ul>\\n<li><a href=\\\"#x%C3%A1c-%C4%91%E1%BB%8Bnh-c%C3%A1c-tr%C6%B0%E1%BB%9Dng-h%E1%BB%A3p-render-kh%C3%B4ng-c%E1%BA%A7n-thi%E1%BA%BFt\\\">Xác định các trường hợp render không cần thiết</a></li>\\n<li><a href=\\\"#t%C3%A1ch-c%C3%A1c-component-update-th%C6%B0%E1%BB%9Dng-xuy%C3%AAn-th%C3%A0nh-c%C3%A1c-component-%C4%91%E1%BB%99c-l%E1%BA%ADp\\\">Tách các component update thường xuyên thành các component độc lập</a></li>\\n<li><a href=\\\"#shouldcomponentupdate-v%C3%A0-purecomponent\\\"><code class=\\\"language-text\\\">shouldComponentUpdate</code> và PureComponent</a></li>\\n<li><a href=\\\"#tr%C3%A1nh-vi%E1%BB%87c-%C4%91%C6%B0a-m%E1%BB%99t-object-m%E1%BB%9Bi-nh%C6%B0-l%C3%A0-prop\\\">Tránh việc đưa một object mới như là prop</a></li>\\n<li><a href=\\\"#production\\\">Production</a></li>\\n<li><a href=\\\"#code-splitting\\\">Code splitting</a></li>\\n<li><a href=\\\"#thay-%C4%91%E1%BB%95i-dom-qu%C3%A1-nhi%E1%BB%81u-l%E1%BA%A7n\\\">Thay đổi DOM quá nhiều lần</a></li>\\n<li><a href=\\\"#callback\\\">Callback</a></li>\\n</ul>\\n<!-- /TOC -->\\n<p>Toàn bộ source app ví dụ có thể lấy <a href=\\\"https://github.com/ohansemmanuel/Cardie-performace\\\">ở đây https://github.com/ohansemmanuel/Cardie-performace</a>, khuyến khích các bạn nên tự lấy về và vọc.</p>\\n<p>Chạy lên nó sẽ có như vầy</p>\\n<p><img src=\\\"https://cdn-images-1.medium.com/max/1600/1*Yh4h7wXPOcbaDBKdVJxm-g.png\\\" alt=\\\"Cải thiện performance của React App\\\"></p>\\n<p>Khi click vào button nó sẽ update lại thông tin nghề nghiệp</p>\\n<p><img src=\\\"https://cdn-images-1.medium.com/max/1600/1*o-8SuFxH2Tl37JG-wSOj0g.gif\\\" alt=\\\"Cải thiện performance của React App\\\"></p>\\n<h1 id=\\\"xác-định-các-trường-hợp-render-không-cần-thiết\\\"><a href=\\\"#x%C3%A1c-%C4%91%E1%BB%8Bnh-c%C3%A1c-tr%C6%B0%E1%BB%9Dng-h%E1%BB%A3p-render-kh%C3%B4ng-c%E1%BA%A7n-thi%E1%BA%BFt\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Xác định các trường hợp render không cần thiết</h1>\\n<p>Phương pháp đơn giản nhất để kiểm tra là bật nút <code class=\\\"language-text\\\">highlight update</code> trên React Dev tool.</p>\\n<p><img src=\\\"https://cdn-images-1.medium.com/max/1600/1*jfeS12BHr2dt5ooLeh5u3Q.gif\\\" alt=\\\"Cải thiện performance của React App\\\"></p>\\n<p>Cái viền màu xanh hiển thị xung quanh component cho biết nó đang gọi render.</p>\\n<p>Trong ví dụ này có thể thấy nguyên component <code class=\\\"language-text\\\">App</code> được re-render, không đúng như chúng ta mong muốn.</p>\\n<p><img src=\\\"https://cdn-images-1.medium.com/max/1600/1*ofXx-J4tr7KXXlNozuW9OA.gif\\\" alt=\\\"Cải thiện performance của React App\\\"></p>\\n<p>Tốt nhất là đúng cái phần hiển thị thông tin nghề nghiệp gọi render.</p>\\n<h1 id=\\\"tách-các-component-update-thường-xuyên-thành-các-component-độc-lập\\\"><a href=\\\"#t%C3%A1ch-c%C3%A1c-component-update-th%C6%B0%E1%BB%9Dng-xuy%C3%AAn-th%C3%A0nh-c%C3%A1c-component-%C4%91%E1%BB%99c-l%E1%BA%ADp\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Tách các component update thường xuyên thành các component độc lập</h1>\\n<p>Sau khi đã bắt được component nào đang re-render không cần thiết, tách component này theo phương pháp sau</p>\\n<p>Component <code class=\\\"language-text\\\">App</code> connect với redux store bằng hàm <code class=\\\"language-text\\\">connect</code>, nó nhận các props là <code class=\\\"language-text\\\">name</code>, <code class=\\\"language-text\\\">location</code>, <code class=\\\"language-text\\\">likes</code> và <code class=\\\"language-text\\\">description</code></p>\\n<p><img src=\\\"https://cdn-images-1.medium.com/max/1600/1*EQLJ8lXEchp_USFfj2Em7A.png\\\" alt=\\\"Cải thiện performance của React App\\\"></p>\\n<p>Khi user click cái button, cái description bị thay đổi. Nó làm cho component <code class=\\\"language-text\\\">App</code> re-render.</p>\\n<p>Nhớ lại kiến thức căn bản React, khi prop hoặc state thay đổi, cây virtual DOM được update</p>\\n<p><img src=\\\"https://cdn-images-1.medium.com/max/800/1*rv3Y1Au-GarKtoiTJSmWRA.png\\\" alt=\\\"Cải thiện performance của React App\\\">\\n<img src=\\\"https://cdn-images-1.medium.com/max/800/1*x6NfWjAOcqwoZs2GhbdTZw.png\\\" alt=\\\"Cải thiện performance của React App\\\">\\n<img src=\\\"https://cdn-images-1.medium.com/max/800/1*EpSSnv8Wjql-IcrNvzvz_A.png\\\" alt=\\\"Cải thiện performance của React App\\\"></p>\\n<p>Giờ để xử lý, chúng ta tạo một component mới, đặt là <code class=\\\"language-text\\\">Profession</code>, để render thông tin description, chúng ta cần tổ chức lại để có cây virtual DOM như thế này</p>\\n<p><img src=\\\"https://cdn-images-1.medium.com/max/1600/1*g8w3av5rclzcX9N387nxgQ.png\\\" alt=\\\"Cải thiện performance của React App\\\">\\n<img src=\\\"https://cdn-images-1.medium.com/max/1600/1*0kqtSR4WxvGy4yYBKyReIw.png\\\" alt=\\\"Cải thiện performance của React App\\\"></p>\\n<p>Thay vì <code class=\\\"language-text\\\">&lt;App /&gt;</code> nhận prop là <code class=\\\"language-text\\\">profession</code>, chuyển trách nhiệm này cho <code class=\\\"language-text\\\">&lt;Profession /&gt;</code></p>\\n<p><img src=\\\"https://cdn-images-1.medium.com/max/1600/1*tLbbgUgBavBm6FMpOzqL7Q.png\\\" alt=\\\"Cải thiện performance của React App\\\"></p>\\n<p>Kết quả sau khi tách component</p>\\n<p><img src=\\\"https://cdn-images-1.medium.com/max/1600/1*Poo-6-5-bfYQ0qYBcXoyiw.gif\\\" alt=\\\"Cải thiện performance của React App\\\"></p>\\n<h1 id=\\\"code-classlanguage-textshouldcomponentupdatecode-và-purecomponent\\\"><a href=\\\"#code-classlanguage-textshouldcomponentupdatecode-v%C3%A0-purecomponent\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a><code class=\\\"language-text\\\">shouldComponentUpdate</code> và PureComponent</h1>\\n<p>Các bài viết liên quan đến chủ đề performance, chắc chắn sẽ nhắc đến <code class=\\\"language-text\\\">PureComponent</code>, bài này cũng không ngoại lệ.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">MyComponent</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">MyComponent</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>PureComponent</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p>Điều gì bạn cần quan tâm khi khai báo một component là <code class=\\\"language-text\\\">PureComponent</code>? Đó là việc mất đi hàm <code class=\\\"language-text\\\">shouldComponentUpdate</code>. Về nguyên tắc nó chỉ render lại khi <code class=\\\"language-text\\\">prop</code> thay đổi</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">Description</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\"><span class=\\\"token punctuation\\\">{</span> description <span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span>\\n\\t<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>p</span><span class=\\\"token punctuation\\\">></span></span>\\n\\t\\t<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>span</span> <span class=\\\"token attr-name\\\">className</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>faint<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token constant\\\">I</span> am<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>span</span><span class=\\\"token punctuation\\\">></span></span> a <span class=\\\"token punctuation\\\">{</span>description<span class=\\\"token punctuation\\\">}</span>\\n\\t<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>p</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token punctuation\\\">)</span></code></pre>\\n      </div>\\n<p>Tác giả bài viết này còn chia nhỏ hơn nữa</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">Description</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\"><span class=\\\"token punctuation\\\">{</span> description <span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>p</span><span class=\\\"token punctuation\\\">></span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">I</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Am</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">A</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Profession</span></span> <span class=\\\"token attr-name\\\">profession</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>description<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>p</span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p><img src=\\\"https://cdn-images-1.medium.com/max/1600/1*TpXci0NJ24imQqmsc7S-_A.png\\\" alt=\\\"Cải thiện performance của React App\\\"></p>\\n<p>Chúng ta cần nhớ lại 1 lần nữa: React định nghĩa thế nào là một PureComponent?</p>\\n<p>Hãy thử xem xét cách viết <code class=\\\"language-text\\\">shouldComponentUpdate</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">ShouldNotUpdate</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">constructor</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">props</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">super</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>counter <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  \\n  <span class=\\\"token function\\\">shouldComponentUpdate</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">nextProps<span class=\\\"token punctuation\\\">,</span> nextState</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span>children <span class=\\\"token operator\\\">!==</span> nextProps<span class=\\\"token punctuation\\\">.</span>children<span class=\\\"token punctuation\\\">;</span>    \\n  <span class=\\\"token punctuation\\\">}</span>\\n  \\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">I should be rendered only 1 time. actual times rendered: </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span><span class=\\\"token operator\\\">++</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>counter<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p>Kết quả trả về sẽ không phải counter = 1, nghĩa là hàm render thực sự sẽ chạy rất nhiều lần, tại sao lại vậy? bởi vì <code class=\\\"language-text\\\">this.props.children !== nextProps.children</code> sẽ luôn luôn trả về <code class=\\\"language-text\\\">true</code>, React sẽ tạo ra một instance mới, 1 <strong>ReactElement mới</strong> mỗi khi render</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">ShouldNotUpdate</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>PureComponent</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">constructor</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">props</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">super</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>counter <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  \\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">I should be rendered only 1 time. actual times rendered: </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span><span class=\\\"token operator\\\">++</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>counter<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p>Số lần render vẫn không giảm đi, tại sao? Đọc tiếp sẽ rõ.</p>\\n<h1 id=\\\"tránh-việc-đưa-một-object-mới-như-là-prop\\\"><a href=\\\"#tr%C3%A1nh-vi%E1%BB%87c-%C4%91%C6%B0a-m%E1%BB%99t-object-m%E1%BB%9Bi-nh%C6%B0-l%C3%A0-prop\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Tránh việc đưa một object mới như là prop</h1>\\n<p>Nó sẽ xảy ra tình huống là <code class=\\\"language-text\\\">prop</code> không thay đổi, nhưng React nghĩ là nó đã thay đổi, nên render lại. Ví dụ</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">I</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">PureComponent</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>span</span> <span class=\\\"token attr-name\\\">className</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>faint<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span>i<span class=\\\"token punctuation\\\">.</span>value<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>span</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token comment\\\">// đâu đó truyền vào </span>\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Description</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\t<span class=\\\"token keyword\\\">const</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n\\t  value<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"i\\\"</span>\\n\\t<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\t<span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n\\t  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>p</span><span class=\\\"token punctuation\\\">></span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">I</span></span> <span class=\\\"token attr-name\\\">i</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>i<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n\\t    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Am</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n\\t    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">A</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n\\t    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Profession</span></span> <span class=\\\"token attr-name\\\">profession</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span>description<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n\\t  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>p</span><span class=\\\"token punctuation\\\">></span></span>\\n\\t<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p><img src=\\\"https://cdn-images-1.medium.com/max/1600/1*NymA8dLgtXQIHhk7AI2LzQ.png\\\" alt=\\\"Cải thiện performance của React App\\\"></p>\\n<p>Ngay cả khi <code class=\\\"language-text\\\">&lt;I /&gt;</code> là một PureComponent, nó vẫn render khi <code class=\\\"language-text\\\">profession</code> thay đổi.</p>\\n<p>Tại sao?</p>\\n<p>Khi <code class=\\\"language-text\\\">&lt;Description /&gt;</code> nhận một prop mới, hàm render được gọi</p>\\n<p>Khi đến đoạn này <code class=\\\"language-text\\\">&lt;I i={i} /&gt;</code>, giá trị của <code class=\\\"language-text\\\">i</code> là một object hoàn toàn mới</p>\\n<p>Với <code class=\\\"language-text\\\">PureComponent</code> nó chỉ dùng <strong>shallow compare</strong> giữa prop cũ và mới, tức là <code class=\\\"language-text\\\">string</code> và <code class=\\\"language-text\\\">number</code> thì so sánh theo giá trị, còn <code class=\\\"language-text\\\">object</code> so sánh theo tham chiếu đến vùng nhớ</p>\\n<p>Giá trị của <code class=\\\"language-text\\\">i</code> không khác, nhưng thực sự nó đã tham chiếu đến vùng nhớ khác</p>\\n<p>Điều này cũng giải thích cho việc tại sao cách làm như thế này không được khuyến khích</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token function\\\">Render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span> <span class=\\\"token attr-name\\\">onClick</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token comment\\\">/*do something*/</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span></code></pre>\\n      </div>\\n<p>Function cũng là một <code class=\\\"language-text\\\">object</code>, bạn đang truyền vào một <code class=\\\"language-text\\\">object</code> mỗi lần render</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token comment\\\">// Do this, please</span>\\n<span class=\\\"token function-variable function\\\">handleClick</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token operator\\\">&lt;</span>div onClick<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>handleClick<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h1 id=\\\"production\\\"><a href=\\\"#production\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Production</h1>\\n<p>Deploy thì luôn build bằng production nhỉ, ngoài ra ở phía server nên nén lại bằng Gzip. Nếu dùng Node/Express ở backend, cài thêm module <code class=\\\"language-text\\\">compression</code> và sử dụng như Express middleware</p>\\n<h1 id=\\\"code-splitting\\\"><a href=\\\"#code-splitting\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Code splitting</h1>\\n<p>Cái này mình có hướng dẫn rồi, đọc lại <a href=\\\"/2018-10-07-huong-dan-lazy-load-component-react\\\">ở đây</a></p>\\n<h1 id=\\\"thay-đổi-dom-quá-nhiều-lần\\\"><a href=\\\"#thay-%C4%91%E1%BB%95i-dom-qu%C3%A1-nhi%E1%BB%81u-l%E1%BA%A7n\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Thay đổi DOM quá nhiều lần</h1>\\n<p>Có bao giờ bạn từng sử dụng một <em>component</em> nhiều lần trong app, cảm thấy app hơi lag? Animation cảm giác chạy không mượt?</p>\\n<p>Khi xây các component phức tạp, bạn sẽ phải xử lý DOM một chút, khả năng sẽ vướng vào 2 issue sau</p>\\n<ol>\\n<li><a href=\\\"https://developers.google.com/web/fundamentals/performance/rendering/avoid-large-complex-layouts-and-layout-thrashing\\\">Trigger layout</a></li>\\n<li><a href=\\\"https://developers.google.com/web/fundamentals/performance/rendering/avoid-large-complex-layouts-and-layout-thrashing#avoid_layout_thrashing\\\">Layout Thrashing</a></li>\\n</ol>\\n<p>Hãy chạy thử hiệu ứng đang làm cho một component <strong>Collapse</strong> với khoản vài chục cái instance, sau đó chọn 6x slowdown trên dev tool để thấy sự khác biệt, 6x slowdown là giá trị tương ứng với tốc độ khi xem trên điện thoại</p>\\n<p><a href=\\\"https://cdn-images-1.medium.com/max/800/1*2xOju9iTPGs22U0joILHmQ.png\\\">Cải thiện performance của React App</a></p>\\n<p>Component <strong>Collapse</strong>, ta thường sẽ làm là thay đổi độ cao của nó</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token function\\\">updateHeight</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">isOpen</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>isOpen<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>containerEl<span class=\\\"token punctuation\\\">.</span>style<span class=\\\"token punctuation\\\">.</span>height <span class=\\\"token operator\\\">=</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>contentEl<span class=\\\"token punctuation\\\">.</span>scrollHeight<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">px</span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>containerEl<span class=\\\"token punctuation\\\">.</span>style<span class=\\\"token punctuation\\\">.</span>height <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'0px'</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p>Có 2 điểm cần lưu ý</p>\\n<ol>\\n<li>Chúng ta thay đổi <em>height</em>, là chúng ta trigger chuyện sắp xếp lại Layout. Nếu chúng ta thay đổi <code class=\\\"language-text\\\">transform</code>, chúng ta chỉ sẽ trigger <strong>Composite</strong> và nhìn nó sẽ smooth hơn.</li>\\n<li>Dòng <code class=\\\"language-text\\\">this.containerEl.style.height = ${this.contentEl.scrollHeight}px;</code> là một ví dụ điển hình của <strong>Layout Thrashing</strong>, chúng ta đọc giá trị độ cao hiện tại, rồi lấy giá trị đó update cho một đối tượng DOM, nhân số lần này lên với số lượng component <strong>Collapse</strong> sẽ là một số lần đáng quan tâm. Sẽ tốt hơn nếu chúng ta chỉ đọc một lần rồi gán giá trị một lượt luôn.</li>\\n</ol>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token function\\\">updateHeight</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">isOpen</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>lastRAF <span class=\\\"token operator\\\">&amp;&amp;</span> <span class=\\\"token function\\\">cancelAnimationFrame</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>lastRAF<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>isOpen<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>lastRAF <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">requestAnimationFrame</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token comment\\\">// đọc</span>\\n      <span class=\\\"token keyword\\\">const</span> height <span class=\\\"token operator\\\">=</span><span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>contentEl<span class=\\\"token punctuation\\\">.</span>scrollHeight<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">px</span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>lastRAF <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">requestAnimationFrame</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>lastRAF <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">requestAnimationFrame</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token comment\\\">// gán giá trị</span>\\n          <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>containerEl<span class=\\\"token punctuation\\\">.</span>style<span class=\\\"token punctuation\\\">.</span>height <span class=\\\"token operator\\\">=</span> height<span class=\\\"token punctuation\\\">;</span>\\n          <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>lastRAF <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>containerEl<span class=\\\"token punctuation\\\">.</span>style<span class=\\\"token punctuation\\\">.</span>height <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'0px'</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p>Có thể sử dụng thư viện <a href=\\\"https://github.com/wilsonpage/fastdom\\\">Fastdom</a> thay vì tự viết</p>\\n<h1 id=\\\"callback\\\"><a href=\\\"#callback\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Callback</h1>\\n<p>Khi attach một function vào bất kỳ event nào trong DOM, nếu có thêm <code class=\\\"language-text\\\">debounced</code> hoặc <code class=\\\"language-text\\\">throttled</code> sẽ tốt hơn, giảm tải số lần gọi đến function này đến mức thấp nhất.</p>\\n<p>Cách viết rất thường thấy</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\">window<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">addEventListener</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'resize'</span><span class=\\\"token punctuation\\\">,</span> _<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">throttle</span><span class=\\\"token punctuation\\\">(</span>callback<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span></code></pre>\\n      </div>\\n<p>Nhưng tại sao không sử dụng nó trong component callback?</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">UnleashedOne</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">constructor</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">props</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">super</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>onChange <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">onChange</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">bind</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token function\\\">onChange</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">e</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">onChange</span><span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">.</span>target<span class=\\\"token punctuation\\\">.</span>value<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token function\\\">render</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>input</span> <span class=\\\"token attr-name\\\">onChange</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>onChange<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">/></span></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p>Chúng ta đang lắng nghe tất tần tật mỗi khi có thay đổi trên <code class=\\\"language-text\\\">input</code>, như vậy thực sự có cần thiết không?</p>\\n<p>Để giải quyết vấn đề trên, có thể viết lại component</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">LeashedOne</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">constructor</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">props</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">super</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>onChange <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">onChange</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">bind</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>onChangeDebounce <span class=\\\"token operator\\\">=</span> _<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">debounce</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">value</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">onChange</span><span class=\\\"token punctuation\\\">(</span>value<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">300</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token function\\\">onChange</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">e</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">onChangeDebounce</span><span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">.</span>target<span class=\\\"token punctuation\\\">.</span>value<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token function\\\">render</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>input</span> <span class=\\\"token attr-name\\\">onChange</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>onChange<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">/></span></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p>Đợi user nhập xong đi rồi xử lý sự kiện, ở đây sử dụng <code class=\\\"language-text\\\">_.debounce</code>, <code class=\\\"language-text\\\">_.throttle</code> từ thư viện <strong>lodash</strong>, sự khác nhau của 2 thằng này thì đọc thêm trên docs của lodash.</p>\\n<p>Nếu bị nghiện performance, bạn có thể chia sẻ thêm một số tip với mình.</p>\\n<p>Tham khảo thêm </p>\\n<ul>\\n<li><a href=\\\"/2018-09-19-huong-dan-react-profiler-dev-tool\\\">Giới thiệu React Profiler</a></li>\\n</ul>\\n<p>Tài liệu tham khảo</p>\\n<ul>\\n<li><a href=\\\"https://medium.com/myheritage-engineering/how-to-greatly-improve-your-react-app-performance-e70f7cbbb5f6\\\">https://medium.com/myheritage-engineering/how-to-greatly-improve-your-react-app-performance-e70f7cbbb5f6</a></li>\\n<li><a href=\\\"https://logrocket-blog.ghost.io/death-by-a-thousand-cuts-a-checklist-for-eliminating-common-react-performance-issues/\\\">https://logrocket-blog.ghost.io/death-by-a-thousand-cuts-a-checklist-for-eliminating-common-react-performance-issues/</a></li>\\n</ul>\",\"timeToRead\":9,\"excerpt\":\"Xác định các trường hợp render không cần thiết Tách các component update thường xuyên thành các component độc lập  và PureComponent Tránh…\",\"frontmatter\":{\"title\":\"Cải thiện performance của React App\",\"cover\":\"\",\"date\":\"2018-05-01\",\"category\":null,\"tags\":[\"javascript\",\"react\",\"performance\"],\"desc\":\"Trong bài này, chúng ta cùng đi qua các bước để fix những issue liên quan đến performance thường thấy.\"},\"fields\":{\"slug\":\"/2018-05-01-huong-dan-cai-thien-performance-react-app\"}}},\"pathContext\":{\"slug\":\"/2018-05-01-huong-dan-cai-thien-performance-react-app\",\"prev\":{\"frontmatter\":{\"title\":\"Transition trong React Native với React Navigation\",\"desc\":\"Hướng dẫn làm transition trong React Native với react navigation\",\"type\":\"post\",\"category\":null,\"tags\":[\"javascript\",\"react\",\"react-native\"],\"date\":\"2018-05-02\",\"cover\":\"\"},\"fields\":{\"slug\":\"/2018-05-02-huong-dan-transition-voi-react-navigation\"}},\"next\":{\"frontmatter\":{\"title\":\"Google Maps và React\",\"desc\":\"Hướng Sử dụng google maps api trong React\",\"type\":\"post\",\"category\":null,\"tags\":[\"javascript\",\"react\"],\"date\":\"2018-04-27\",\"cover\":\"\"},\"fields\":{\"slug\":\"/2018-04-27-huong-dan-google-maps-va-react\"}}}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/2018-05-01-huong-dan-cai-thien-performance-react-app.json\n// module id = 1425\n// module chunks = 79752974708534"],"sourceRoot":""}